import{D as Nd,d as Dv,x as Ov,y as Nv,a as Fv,o as Uv,_ as Bv}from"./index-6de7c668.js";var nh={exports:{}},T={};/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */var Dd;function zv(){if(Dd)return T;Dd=1,Object.defineProperty(T,"__esModule",{value:!0});const gs="147",Oi={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Pt={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Re=0,ii=1,_s=2,Ni=3,Nt=0,it=1,Fi=2,we=3,ze=0,_t=1,wn=2,wt=0,zt=1,gn=2,je=3,Ft=4,et=5,qe=100,St=101,sn=102,Et=103,Mt=104,pe=200,nr=201,Ui=202,Vt=203,ir=204,Ut=205,ia=206,Bi=207,He=208,sr=209,sa=210,ra=0,oa=1,aa=2,rr=3,eo=4,la=5,zi=6,or=7,vs=0,to=1,ar=2,Cn=0,lr=1,no=2,io=3,ki=4,so=5,cr=300,Sn=301,si=302,xs=303,ri=304,_i=306,Hi=1e3,jt=1001,Gi=1002,It=1003,Vi=1004,ro=1004,oi=1005,ca=1005,st=1006,vi=1007,Un=1007,ai=1008,ha=1008,_n=1009,hr=1010,oo=1011,cn=1012,ys=1013,Yt=1014,Bn=1015,Wi=1016,Ms=1017,bs=1018,li=1020,En=1021,ao=1022,rn=1023,ur=1024,Rn=1025,zn=1026,ci=1027,dr=1028,Xi=1029,qn=1030,lo=1031,qi=1033,fr=33776,hi=33777,Tn=33778,Zt=33779,co=35840,ho=35841,Yi=35842,uo=35843,ua=36196,Zi=37492,Ji=37496,ui=37808,fo=37809,ws=37810,po=37811,mo=37812,$i=37813,pr=37814,Yn=37815,go=37816,Ss=37817,Ki=37818,xi=37819,Es=37820,Ts=37821,As=36492,mr=2200,gr=2201,da=2202,yi=2300,Cs=2301,ji=2302,Zn=2400,Ln=2401,on=2402,hn=2500,_r=2501,vr=0,xr=1,Ml=2,un=3e3,bt=3001,Qi=3200,_o=3201,di=0,fa=1,bl="",Pn="srgb",es="srgb-linear",wl=0,yr=7680,Rs=7681,vo=7682,Jn=7683,Mr=34055,Sl=34056,El=5386,Tl=512,pa=513,$n=514,Al=515,Cl=516,Rl=517,Ll=518,dn=519,ts=35044,Pl=35048,Il=35040,w=35045,x=35049,y=35041,M=35046,c=35050,v=35042,L="100",N="300 es",q=1035;class j{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,e);e.target=null}}}const le=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let We=1234567;const Ne=Math.PI/180,lt=180/Math.PI;function Ct(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(le[r&255]+le[r>>8&255]+le[r>>16&255]+le[r>>24&255]+"-"+le[e&255]+le[e>>8&255]+"-"+le[e>>16&15|64]+le[e>>24&255]+"-"+le[t&63|128]+le[t>>8&255]+"-"+le[t>>16&255]+le[t>>24&255]+le[n&255]+le[n>>8&255]+le[n>>16&255]+le[n>>24&255]).toLowerCase()}function tt(r,e,t){return Math.max(e,Math.min(t,r))}function Mi(r,e){return(r%e+e)%e}function ns(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function kn(r,e,t){return r!==e?(t-r)/(e-r):0}function Rt(r,e,t){return(1-t)*r+t*e}function fi(r,e,t,n){return Rt(r,e,1-Math.exp(-t*n))}function Dl(r,e=1){return e-Math.abs(Mi(r,e*2)-e)}function Fd(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function Ud(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function Bd(r,e){return r+Math.floor(Math.random()*(e-r+1))}function zd(r,e){return r+Math.random()*(e-r)}function kd(r){return r*(.5-Math.random())}function Hd(r){r!==void 0&&(We=r);let e=We+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Gd(r){return r*Ne}function Vd(r){return r*lt}function Ol(r){return(r&r-1)===0&&r!==0}function ih(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function ma(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function Wd(r,e,t,n,i){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),h=s((e+n)/2),u=o((e+n)/2),d=s((e-n)/2),f=o((e-n)/2),p=s((n-e)/2),_=o((n-e)/2);switch(i){case"XYX":r.set(a*u,l*d,l*f,a*h);break;case"YZY":r.set(l*f,a*u,l*d,a*h);break;case"ZXZ":r.set(l*d,l*f,a*u,a*h);break;case"XZX":r.set(a*u,l*_,l*p,a*h);break;case"YXY":r.set(l*p,a*u,l*_,a*h);break;case"ZYZ":r.set(l*_,l*p,a*u,a*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function bi(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Tt(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}var Xd=Object.freeze({__proto__:null,DEG2RAD:Ne,RAD2DEG:lt,generateUUID:Ct,clamp:tt,euclideanModulo:Mi,mapLinear:ns,inverseLerp:kn,lerp:Rt,damp:fi,pingpong:Dl,smoothstep:Fd,smootherstep:Ud,randInt:Bd,randFloat:zd,randFloatSpread:kd,seededRandom:Hd,degToRad:Gd,radToDeg:Vd,isPowerOfTwo:Ol,ceilPowerOfTwo:ih,floorPowerOfTwo:ma,setQuaternionFromProperEuler:Wd,normalize:Tt,denormalize:bi});class oe{constructor(e=0,t=0){oe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*i+e.x,this.y=s*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class vn{constructor(){vn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,s,o,a,l,h){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[3],l=n[6],h=n[1],u=n[4],d=n[7],f=n[2],p=n[5],_=n[8],g=i[0],m=i[3],b=i[6],C=i[1],E=i[4],S=i[7],R=i[2],O=i[5],B=i[8];return s[0]=o*g+a*C+l*R,s[3]=o*m+a*E+l*O,s[6]=o*b+a*S+l*B,s[1]=h*g+u*C+d*R,s[4]=h*m+u*E+d*O,s[7]=h*b+u*S+d*B,s[2]=f*g+p*C+_*R,s[5]=f*m+p*E+_*O,s[8]=f*b+p*S+_*B,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],h=e[7],u=e[8];return t*o*u-t*a*h-n*s*u+n*a*l+i*s*h-i*o*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],h=e[7],u=e[8],d=u*o-a*h,f=a*l-u*s,p=h*s-o*l,_=t*d+n*f+i*p;if(_===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/_;return e[0]=d*g,e[1]=(i*h-u*n)*g,e[2]=(a*n-i*o)*g,e[3]=f*g,e[4]=(u*t-i*l)*g,e[5]=(i*s-a*t)*g,e[6]=p*g,e[7]=(n*l-h*t)*g,e[8]=(o*t-n*s)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,o,a){const l=Math.cos(s),h=Math.sin(s);return this.set(n*l,n*h,-n*(l*o+h*a)+o+e,-i*h,i*l,-i*(-h*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(Nl.makeScale(e,t)),this}rotate(e){return this.premultiply(Nl.makeRotation(-e)),this}translate(e,t){return this.premultiply(Nl.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Nl=new vn;function sh(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const qd={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function br(r,e){return new qd[r](e)}function xo(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Ls(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function ga(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const Fl={[Pn]:{[es]:Ls},[es]:{[Pn]:ga}},fn={legacyMode:!0,get workingColorSpace(){return es},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.legacyMode||e===t||!e||!t)return r;if(Fl[e]&&Fl[e][t]!==void 0){const n=Fl[e][t];return r.r=n(r.r),r.g=n(r.g),r.b=n(r.b),r}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}},rh={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Jt={r:0,g:0,b:0},Kn={h:0,s:0,l:0},_a={h:0,s:0,l:0};function Ul(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}function va(r,e){return e.r=r.r,e.g=r.g,e.b=r.b,e}class Ae{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Pn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,fn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=fn.workingColorSpace){return this.r=e,this.g=t,this.b=n,fn.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=fn.workingColorSpace){if(e=Mi(e,1),t=tt(t,0,1),n=tt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=Ul(o,s,e+1/3),this.g=Ul(o,s,e),this.b=Ul(o,s,e-1/3)}return fn.toWorkingColorSpace(this,i),this}setStyle(e,t=Pn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,fn.toWorkingColorSpace(this,t),n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,fn.toWorkingColorSpace(this,t),n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(s[1])/360,h=parseFloat(s[2])/100,u=parseFloat(s[3])/100;return n(s[4]),this.setHSL(l,h,u,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,fn.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,fn.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=Pn){const n=rh[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Ls(e.r),this.g=Ls(e.g),this.b=Ls(e.b),this}copyLinearToSRGB(e){return this.r=ga(e.r),this.g=ga(e.g),this.b=ga(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Pn){return fn.fromWorkingColorSpace(va(this,Jt),e),tt(Jt.r*255,0,255)<<16^tt(Jt.g*255,0,255)<<8^tt(Jt.b*255,0,255)<<0}getHexString(e=Pn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=fn.workingColorSpace){fn.fromWorkingColorSpace(va(this,Jt),t);const n=Jt.r,i=Jt.g,s=Jt.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let l,h;const u=(a+o)/2;if(a===o)l=0,h=0;else{const d=o-a;switch(h=u<=.5?d/(o+a):d/(2-o-a),o){case n:l=(i-s)/d+(i<s?6:0);break;case i:l=(s-n)/d+2;break;case s:l=(n-i)/d+4;break}l/=6}return e.h=l,e.s=h,e.l=u,e}getRGB(e,t=fn.workingColorSpace){return fn.fromWorkingColorSpace(va(this,Jt),t),e.r=Jt.r,e.g=Jt.g,e.b=Jt.b,e}getStyle(e=Pn){return fn.fromWorkingColorSpace(va(this,Jt),e),e!==Pn?`color(${e} ${Jt.r} ${Jt.g} ${Jt.b})`:`rgb(${Jt.r*255|0},${Jt.g*255|0},${Jt.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(Kn),Kn.h+=e,Kn.s+=t,Kn.l+=n,this.setHSL(Kn.h,Kn.s,Kn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Kn),e.getHSL(_a);const n=Rt(Kn.h,_a.h,t),i=Rt(Kn.s,_a.s,t),s=Rt(Kn.l,_a.l,t);return this.setHSL(n,i,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Ae.NAMES=rh;let wr;class Bl{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{wr===void 0&&(wr=xo("canvas")),wr.width=e.width,wr.height=e.height;const n=wr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=wr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=xo("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=Ls(s[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Ls(t[n]/255)*255):t[n]=Ls(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Ps{constructor(e=null){this.isSource=!0,this.uuid=Ct(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(zl(i[o].image)):s.push(zl(i[o]))}else s=zl(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function zl(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Bl.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Yd=0;class Ht extends j{constructor(e=Ht.DEFAULT_IMAGE,t=Ht.DEFAULT_MAPPING,n=jt,i=jt,s=st,o=ai,a=rn,l=_n,h=Ht.DEFAULT_ANISOTROPY,u=un){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Yd++}),this.uuid=Ct(),this.name="",this.source=new Ps(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=h,this.format=a,this.internalFormat=null,this.type=l,this.offset=new oe(0,0),this.repeat=new oe(1,1),this.center=new oe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new vn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==cr)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Hi:e.x=e.x-Math.floor(e.x);break;case jt:e.x=e.x<0?0:1;break;case Gi:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Hi:e.y=e.y-Math.floor(e.y);break;case jt:e.y=e.y<0?0:1;break;case Gi:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}Ht.DEFAULT_IMAGE=null,Ht.DEFAULT_MAPPING=cr,Ht.DEFAULT_ANISOTROPY=1;class xt{constructor(e=0,t=0,n=0,i=1){xt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const l=e.elements,h=l[0],u=l[4],d=l[8],f=l[1],p=l[5],_=l[9],g=l[2],m=l[6],b=l[10];if(Math.abs(u-f)<.01&&Math.abs(d-g)<.01&&Math.abs(_-m)<.01){if(Math.abs(u+f)<.1&&Math.abs(d+g)<.1&&Math.abs(_+m)<.1&&Math.abs(h+p+b-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const E=(h+1)/2,S=(p+1)/2,R=(b+1)/2,O=(u+f)/4,B=(d+g)/4,A=(_+m)/4;return E>S&&E>R?E<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(E),i=O/n,s=B/n):S>R?S<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(S),n=O/i,s=A/i):R<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(R),n=B/s,i=A/s),this.set(n,i,s,t),this}let C=Math.sqrt((m-_)*(m-_)+(d-g)*(d-g)+(f-u)*(f-u));return Math.abs(C)<.001&&(C=1),this.x=(m-_)/C,this.y=(d-g)/C,this.z=(f-u)/C,this.w=Math.acos((h+p+b-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Hn extends j{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new xt(0,0,e,t),this.scissorTest=!1,this.viewport=new xt(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new Ht(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:st,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Ps(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class yo extends Ht{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=It,this.minFilter=It,this.wrapR=jt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Zd extends Hn{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new yo(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class xa extends Ht{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=It,this.minFilter=It,this.wrapR=jt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Jd extends Hn{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new xa(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class $d extends Hn{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class An{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,o,a){let l=n[i+0],h=n[i+1],u=n[i+2],d=n[i+3];const f=s[o+0],p=s[o+1],_=s[o+2],g=s[o+3];if(a===0){e[t+0]=l,e[t+1]=h,e[t+2]=u,e[t+3]=d;return}if(a===1){e[t+0]=f,e[t+1]=p,e[t+2]=_,e[t+3]=g;return}if(d!==g||l!==f||h!==p||u!==_){let m=1-a;const b=l*f+h*p+u*_+d*g,C=b>=0?1:-1,E=1-b*b;if(E>Number.EPSILON){const R=Math.sqrt(E),O=Math.atan2(R,b*C);m=Math.sin(m*O)/R,a=Math.sin(a*O)/R}const S=a*C;if(l=l*m+f*S,h=h*m+p*S,u=u*m+_*S,d=d*m+g*S,m===1-a){const R=1/Math.sqrt(l*l+h*h+u*u+d*d);l*=R,h*=R,u*=R,d*=R}}e[t]=l,e[t+1]=h,e[t+2]=u,e[t+3]=d}static multiplyQuaternionsFlat(e,t,n,i,s,o){const a=n[i],l=n[i+1],h=n[i+2],u=n[i+3],d=s[o],f=s[o+1],p=s[o+2],_=s[o+3];return e[t]=a*_+u*d+l*p-h*f,e[t+1]=l*_+u*f+h*d-a*p,e[t+2]=h*_+u*p+a*f-l*d,e[t+3]=u*_-a*d-l*f-h*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,h=a(n/2),u=a(i/2),d=a(s/2),f=l(n/2),p=l(i/2),_=l(s/2);switch(o){case"XYZ":this._x=f*u*d+h*p*_,this._y=h*p*d-f*u*_,this._z=h*u*_+f*p*d,this._w=h*u*d-f*p*_;break;case"YXZ":this._x=f*u*d+h*p*_,this._y=h*p*d-f*u*_,this._z=h*u*_-f*p*d,this._w=h*u*d+f*p*_;break;case"ZXY":this._x=f*u*d-h*p*_,this._y=h*p*d+f*u*_,this._z=h*u*_+f*p*d,this._w=h*u*d-f*p*_;break;case"ZYX":this._x=f*u*d-h*p*_,this._y=h*p*d+f*u*_,this._z=h*u*_-f*p*d,this._w=h*u*d+f*p*_;break;case"YZX":this._x=f*u*d+h*p*_,this._y=h*p*d+f*u*_,this._z=h*u*_-f*p*d,this._w=h*u*d-f*p*_;break;case"XZY":this._x=f*u*d-h*p*_,this._y=h*p*d-f*u*_,this._z=h*u*_+f*p*d,this._w=h*u*d+f*p*_;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],o=t[1],a=t[5],l=t[9],h=t[2],u=t[6],d=t[10],f=n+a+d;if(f>0){const p=.5/Math.sqrt(f+1);this._w=.25/p,this._x=(u-l)*p,this._y=(s-h)*p,this._z=(o-i)*p}else if(n>a&&n>d){const p=2*Math.sqrt(1+n-a-d);this._w=(u-l)/p,this._x=.25*p,this._y=(i+o)/p,this._z=(s+h)/p}else if(a>d){const p=2*Math.sqrt(1+a-n-d);this._w=(s-h)/p,this._x=(i+o)/p,this._y=.25*p,this._z=(l+u)/p}else{const p=2*Math.sqrt(1+d-n-a);this._w=(o-i)/p,this._x=(s+h)/p,this._y=(l+u)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(tt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,o=e._w,a=t._x,l=t._y,h=t._z,u=t._w;return this._x=n*u+o*a+i*h-s*l,this._y=i*u+o*l+s*a-n*h,this._z=s*u+o*h+n*l-i*a,this._w=o*u-n*a-i*l-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const p=1-t;return this._w=p*o+t*this._w,this._x=p*n+t*this._x,this._y=p*i+t*this._y,this._z=p*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(l),u=Math.atan2(h,a),d=Math.sin((1-t)*u)/h,f=Math.sin(t*u)/h;return this._w=o*d+this._w*f,this._x=n*d+this._x*f,this._y=i*d+this._y*f,this._z=s*d+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,n=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(oh.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(oh.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,a=e.z,l=e.w,h=l*t+o*i-a*n,u=l*n+a*t-s*i,d=l*i+s*n-o*t,f=-s*t-o*n-a*i;return this.x=h*l+f*-s+u*-a-d*-o,this.y=u*l+f*-o+d*-s-h*-a,this.z=d*l+f*-a+h*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=i*l-s*a,this.y=s*o-n*l,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return kl.copy(this).projectOnVector(e),this.sub(kl)}reflect(e){return this.sub(kl.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(tt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const kl=new D,oh=new An;class Is{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,h=e.length;l<h;l+=3){const u=e[l],d=e[l+1],f=e[l+2];u<t&&(t=u),d<n&&(n=d),f<i&&(i=f),u>s&&(s=u),d>o&&(o=d),f>a&&(a=f)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,h=e.count;l<h;l++){const u=e.getX(l),d=e.getY(l),f=e.getZ(l);u<t&&(t=u),d<n&&(n=d),f<i&&(i=f),u>s&&(s=u),d>o&&(o=d),f>a&&(a=f)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ds.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let o=0,a=s.count;o<a;o++)Ds.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Ds)}else n.boundingBox===null&&n.computeBoundingBox(),Hl.copy(n.boundingBox),Hl.applyMatrix4(e.matrixWorld),this.union(Hl);const i=e.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ds),Ds.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Mo),ya.subVectors(this.max,Mo),Sr.subVectors(e.a,Mo),Er.subVectors(e.b,Mo),Tr.subVectors(e.c,Mo),is.subVectors(Er,Sr),ss.subVectors(Tr,Er),Os.subVectors(Sr,Tr);let t=[0,-is.z,is.y,0,-ss.z,ss.y,0,-Os.z,Os.y,is.z,0,-is.x,ss.z,0,-ss.x,Os.z,0,-Os.x,-is.y,is.x,0,-ss.y,ss.x,0,-Os.y,Os.x,0];return!Gl(t,Sr,Er,Tr,ya)||(t=[1,0,0,0,1,0,0,0,1],!Gl(t,Sr,Er,Tr,ya))?!1:(Ma.crossVectors(is,ss),t=[Ma.x,Ma.y,Ma.z],Gl(t,Sr,Er,Tr,ya))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ds.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Ds).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(wi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),wi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),wi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),wi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),wi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),wi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),wi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),wi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(wi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const wi=[new D,new D,new D,new D,new D,new D,new D,new D],Ds=new D,Hl=new Is,Sr=new D,Er=new D,Tr=new D,is=new D,ss=new D,Os=new D,Mo=new D,ya=new D,Ma=new D,Ns=new D;function Gl(r,e,t,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){Ns.fromArray(r,s);const a=i.x*Math.abs(Ns.x)+i.y*Math.abs(Ns.y)+i.z*Math.abs(Ns.z),l=e.dot(Ns),h=t.dot(Ns),u=n.dot(Ns);if(Math.max(-Math.max(l,h,u),Math.min(l,h,u))>a)return!1}return!0}const Kd=new Is,bo=new D,Vl=new D;class Fs{constructor(e=new D,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Kd.setFromPoints(e).getCenter(n);let i=0;for(let s=0,o=e.length;s<o;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;bo.subVectors(e,this.center);const t=bo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(bo,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Vl.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(bo.copy(e.center).add(Vl)),this.expandByPoint(bo.copy(e.center).sub(Vl))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Si=new D,Wl=new D,ba=new D,rs=new D,Xl=new D,wa=new D,ql=new D;class wo{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Si)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Si.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Si.copy(this.direction).multiplyScalar(t).add(this.origin),Si.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Wl.copy(e).add(t).multiplyScalar(.5),ba.copy(t).sub(e).normalize(),rs.copy(this.origin).sub(Wl);const s=e.distanceTo(t)*.5,o=-this.direction.dot(ba),a=rs.dot(this.direction),l=-rs.dot(ba),h=rs.lengthSq(),u=Math.abs(1-o*o);let d,f,p,_;if(u>0)if(d=o*l-a,f=o*a-l,_=s*u,d>=0)if(f>=-_)if(f<=_){const g=1/u;d*=g,f*=g,p=d*(d+o*f+2*a)+f*(o*d+f+2*l)+h}else f=s,d=Math.max(0,-(o*f+a)),p=-d*d+f*(f+2*l)+h;else f=-s,d=Math.max(0,-(o*f+a)),p=-d*d+f*(f+2*l)+h;else f<=-_?(d=Math.max(0,-(-o*s+a)),f=d>0?-s:Math.min(Math.max(-s,-l),s),p=-d*d+f*(f+2*l)+h):f<=_?(d=0,f=Math.min(Math.max(-s,-l),s),p=f*(f+2*l)+h):(d=Math.max(0,-(o*s+a)),f=d>0?s:Math.min(Math.max(-s,-l),s),p=-d*d+f*(f+2*l)+h);else f=o>0?-s:s,d=Math.max(0,-(o*f+a)),p=-d*d+f*(f+2*l)+h;return n&&n.copy(this.direction).multiplyScalar(d).add(this.origin),i&&i.copy(ba).multiplyScalar(f).add(Wl),p}intersectSphere(e,t){Si.subVectors(e.center,this.origin);const n=Si.dot(this.direction),i=Si.dot(Si)-n*n,s=e.radius*e.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,o,a,l;const h=1/this.direction.x,u=1/this.direction.y,d=1/this.direction.z,f=this.origin;return h>=0?(n=(e.min.x-f.x)*h,i=(e.max.x-f.x)*h):(n=(e.max.x-f.x)*h,i=(e.min.x-f.x)*h),u>=0?(s=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),n>o||s>i||((s>n||isNaN(n))&&(n=s),(o<i||isNaN(i))&&(i=o),d>=0?(a=(e.min.z-f.z)*d,l=(e.max.z-f.z)*d):(a=(e.max.z-f.z)*d,l=(e.min.z-f.z)*d),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Si)!==null}intersectTriangle(e,t,n,i,s){Xl.subVectors(t,e),wa.subVectors(n,e),ql.crossVectors(Xl,wa);let o=this.direction.dot(ql),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;rs.subVectors(this.origin,e);const l=a*this.direction.dot(wa.crossVectors(rs,wa));if(l<0)return null;const h=a*this.direction.dot(Xl.cross(rs));if(h<0||l+h>o)return null;const u=-a*rs.dot(ql);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Qe{constructor(){Qe.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,s,o,a,l,h,u,d,f,p,_,g,m){const b=this.elements;return b[0]=e,b[4]=t,b[8]=n,b[12]=i,b[1]=s,b[5]=o,b[9]=a,b[13]=l,b[2]=h,b[6]=u,b[10]=d,b[14]=f,b[3]=p,b[7]=_,b[11]=g,b[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Qe().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Ar.setFromMatrixColumn(e,0).length(),s=1/Ar.setFromMatrixColumn(e,1).length(),o=1/Ar.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),h=Math.sin(i),u=Math.cos(s),d=Math.sin(s);if(e.order==="XYZ"){const f=o*u,p=o*d,_=a*u,g=a*d;t[0]=l*u,t[4]=-l*d,t[8]=h,t[1]=p+_*h,t[5]=f-g*h,t[9]=-a*l,t[2]=g-f*h,t[6]=_+p*h,t[10]=o*l}else if(e.order==="YXZ"){const f=l*u,p=l*d,_=h*u,g=h*d;t[0]=f+g*a,t[4]=_*a-p,t[8]=o*h,t[1]=o*d,t[5]=o*u,t[9]=-a,t[2]=p*a-_,t[6]=g+f*a,t[10]=o*l}else if(e.order==="ZXY"){const f=l*u,p=l*d,_=h*u,g=h*d;t[0]=f-g*a,t[4]=-o*d,t[8]=_+p*a,t[1]=p+_*a,t[5]=o*u,t[9]=g-f*a,t[2]=-o*h,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const f=o*u,p=o*d,_=a*u,g=a*d;t[0]=l*u,t[4]=_*h-p,t[8]=f*h+g,t[1]=l*d,t[5]=g*h+f,t[9]=p*h-_,t[2]=-h,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const f=o*l,p=o*h,_=a*l,g=a*h;t[0]=l*u,t[4]=g-f*d,t[8]=_*d+p,t[1]=d,t[5]=o*u,t[9]=-a*u,t[2]=-h*u,t[6]=p*d+_,t[10]=f-g*d}else if(e.order==="XZY"){const f=o*l,p=o*h,_=a*l,g=a*h;t[0]=l*u,t[4]=-d,t[8]=h*u,t[1]=f*d+g,t[5]=o*u,t[9]=p*d-_,t[2]=_*d-p,t[6]=a*u,t[10]=g*d+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(jd,e,Qd)}lookAt(e,t,n){const i=this.elements;return In.subVectors(e,t),In.lengthSq()===0&&(In.z=1),In.normalize(),os.crossVectors(n,In),os.lengthSq()===0&&(Math.abs(n.z)===1?In.x+=1e-4:In.z+=1e-4,In.normalize(),os.crossVectors(n,In)),os.normalize(),Sa.crossVectors(In,os),i[0]=os.x,i[4]=Sa.x,i[8]=In.x,i[1]=os.y,i[5]=Sa.y,i[9]=In.y,i[2]=os.z,i[6]=Sa.z,i[10]=In.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[4],l=n[8],h=n[12],u=n[1],d=n[5],f=n[9],p=n[13],_=n[2],g=n[6],m=n[10],b=n[14],C=n[3],E=n[7],S=n[11],R=n[15],O=i[0],B=i[4],A=i[8],F=i[12],z=i[1],X=i[5],he=i[9],Z=i[13],G=i[2],Q=i[6],ae=i[10],de=i[14],ie=i[3],me=i[7],ce=i[11],$=i[15];return s[0]=o*O+a*z+l*G+h*ie,s[4]=o*B+a*X+l*Q+h*me,s[8]=o*A+a*he+l*ae+h*ce,s[12]=o*F+a*Z+l*de+h*$,s[1]=u*O+d*z+f*G+p*ie,s[5]=u*B+d*X+f*Q+p*me,s[9]=u*A+d*he+f*ae+p*ce,s[13]=u*F+d*Z+f*de+p*$,s[2]=_*O+g*z+m*G+b*ie,s[6]=_*B+g*X+m*Q+b*me,s[10]=_*A+g*he+m*ae+b*ce,s[14]=_*F+g*Z+m*de+b*$,s[3]=C*O+E*z+S*G+R*ie,s[7]=C*B+E*X+S*Q+R*me,s[11]=C*A+E*he+S*ae+R*ce,s[15]=C*F+E*Z+S*de+R*$,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],o=e[1],a=e[5],l=e[9],h=e[13],u=e[2],d=e[6],f=e[10],p=e[14],_=e[3],g=e[7],m=e[11],b=e[15];return _*(+s*l*d-i*h*d-s*a*f+n*h*f+i*a*p-n*l*p)+g*(+t*l*p-t*h*f+s*o*f-i*o*p+i*h*u-s*l*u)+m*(+t*h*d-t*a*p-s*o*d+n*o*p+s*a*u-n*h*u)+b*(-i*a*u-t*l*d+t*a*f+i*o*d-n*o*f+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],h=e[7],u=e[8],d=e[9],f=e[10],p=e[11],_=e[12],g=e[13],m=e[14],b=e[15],C=d*m*h-g*f*h+g*l*p-a*m*p-d*l*b+a*f*b,E=_*f*h-u*m*h-_*l*p+o*m*p+u*l*b-o*f*b,S=u*g*h-_*d*h+_*a*p-o*g*p-u*a*b+o*d*b,R=_*d*l-u*g*l-_*a*f+o*g*f+u*a*m-o*d*m,O=t*C+n*E+i*S+s*R;if(O===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const B=1/O;return e[0]=C*B,e[1]=(g*f*s-d*m*s-g*i*p+n*m*p+d*i*b-n*f*b)*B,e[2]=(a*m*s-g*l*s+g*i*h-n*m*h-a*i*b+n*l*b)*B,e[3]=(d*l*s-a*f*s-d*i*h+n*f*h+a*i*p-n*l*p)*B,e[4]=E*B,e[5]=(u*m*s-_*f*s+_*i*p-t*m*p-u*i*b+t*f*b)*B,e[6]=(_*l*s-o*m*s-_*i*h+t*m*h+o*i*b-t*l*b)*B,e[7]=(o*f*s-u*l*s+u*i*h-t*f*h-o*i*p+t*l*p)*B,e[8]=S*B,e[9]=(_*d*s-u*g*s-_*n*p+t*g*p+u*n*b-t*d*b)*B,e[10]=(o*g*s-_*a*s+_*n*h-t*g*h-o*n*b+t*a*b)*B,e[11]=(u*a*s-o*d*s-u*n*h+t*d*h+o*n*p-t*a*p)*B,e[12]=R*B,e[13]=(u*g*i-_*d*i+_*n*f-t*g*f-u*n*m+t*d*m)*B,e[14]=(_*a*i-o*g*i-_*n*l+t*g*l+o*n*m-t*a*m)*B,e[15]=(o*d*i-u*a*i+u*n*l-t*d*l-o*n*f+t*a*f)*B,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,o=e.x,a=e.y,l=e.z,h=s*o,u=s*a;return this.set(h*o+n,h*a-i*l,h*l+i*a,0,h*a+i*l,u*a+n,u*l-i*o,0,h*l-i*a,u*l+i*o,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,o){return this.set(1,n,s,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,h=s+s,u=o+o,d=a+a,f=s*h,p=s*u,_=s*d,g=o*u,m=o*d,b=a*d,C=l*h,E=l*u,S=l*d,R=n.x,O=n.y,B=n.z;return i[0]=(1-(g+b))*R,i[1]=(p+S)*R,i[2]=(_-E)*R,i[3]=0,i[4]=(p-S)*O,i[5]=(1-(f+b))*O,i[6]=(m+C)*O,i[7]=0,i[8]=(_+E)*B,i[9]=(m-C)*B,i[10]=(1-(f+g))*B,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Ar.set(i[0],i[1],i[2]).length();const o=Ar.set(i[4],i[5],i[6]).length(),a=Ar.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],jn.copy(this);const h=1/s,u=1/o,d=1/a;return jn.elements[0]*=h,jn.elements[1]*=h,jn.elements[2]*=h,jn.elements[4]*=u,jn.elements[5]*=u,jn.elements[6]*=u,jn.elements[8]*=d,jn.elements[9]*=d,jn.elements[10]*=d,t.setFromRotationMatrix(jn),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,i,s,o){const a=this.elements,l=2*s/(t-e),h=2*s/(n-i),u=(t+e)/(t-e),d=(n+i)/(n-i),f=-(o+s)/(o-s),p=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=h,a[9]=d,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,o){const a=this.elements,l=1/(t-e),h=1/(n-i),u=1/(o-s),d=(t+e)*l,f=(n+i)*h,p=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-d,a[1]=0,a[5]=2*h,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Ar=new D,jn=new Qe,jd=new D(0,0,0),Qd=new D(1,1,1),os=new D,Sa=new D,In=new D,ah=new Qe,lh=new An;class Cr{constructor(e=0,t=0,n=0,i=Cr.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],o=i[4],a=i[8],l=i[1],h=i[5],u=i[9],d=i[2],f=i[6],p=i[10];switch(t){case"XYZ":this._y=Math.asin(tt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,h),this._z=0);break;case"YXZ":this._x=Math.asin(-tt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,p),this._z=Math.atan2(l,h)):(this._y=Math.atan2(-d,s),this._z=0);break;case"ZXY":this._x=Math.asin(tt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-d,p),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-tt(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(f,p),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,h));break;case"YZX":this._z=Math.asin(tt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,h),this._y=Math.atan2(-d,s)):(this._x=0,this._y=Math.atan2(a,p));break;case"XZY":this._z=Math.asin(-tt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,h),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return ah.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ah,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return lh.setFromEuler(this),this.setFromQuaternion(lh,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Cr.DefaultOrder="XYZ",Cr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Ea{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let ef=0;const ch=new D,Rr=new An,Ei=new Qe,Ta=new D,So=new D,tf=new D,nf=new An,hh=new D(1,0,0),uh=new D(0,1,0),dh=new D(0,0,1),sf={type:"added"},fh={type:"removed"};class pt extends j{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ef++}),this.uuid=Ct(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=pt.DefaultUp.clone();const e=new D,t=new Cr,n=new An,i=new D(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Qe},normalMatrix:{value:new vn}}),this.matrix=new Qe,this.matrixWorld=new Qe,this.matrixAutoUpdate=pt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=pt.DefaultMatrixWorldAutoUpdate,this.layers=new Ea,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Rr.setFromAxisAngle(e,t),this.quaternion.multiply(Rr),this}rotateOnWorldAxis(e,t){return Rr.setFromAxisAngle(e,t),this.quaternion.premultiply(Rr),this}rotateX(e){return this.rotateOnAxis(hh,e)}rotateY(e){return this.rotateOnAxis(uh,e)}rotateZ(e){return this.rotateOnAxis(dh,e)}translateOnAxis(e,t){return ch.copy(e).applyQuaternion(this.quaternion),this.position.add(ch.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(hh,e)}translateY(e){return this.translateOnAxis(uh,e)}translateZ(e){return this.translateOnAxis(dh,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Ei.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Ta.copy(e):Ta.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),So.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ei.lookAt(So,Ta,this.up):Ei.lookAt(Ta,So,this.up),this.quaternion.setFromRotationMatrix(Ei),i&&(Ei.extractRotation(i.matrixWorld),Rr.setFromRotationMatrix(Ei),this.quaternion.premultiply(Rr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(sf)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(fh)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(fh)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Ei.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ei.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ei),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(So,e,tf),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(So,nf,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++){const a=i[s];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let h=0,u=l.length;h<u;h++){const d=l[h];s(e.shapes,d)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,h=this.material.length;l<h;l++)a.push(s(e.materials,this.material[l]));i.material=a}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),h=o(e.textures),u=o(e.images),d=o(e.shapes),f=o(e.skeletons),p=o(e.animations),_=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),h.length>0&&(n.textures=h),u.length>0&&(n.images=u),d.length>0&&(n.shapes=d),f.length>0&&(n.skeletons=f),p.length>0&&(n.animations=p),_.length>0&&(n.nodes=_)}return n.object=i,n;function o(a){const l=[];for(const h in a){const u=a[h];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}pt.DefaultUp=new D(0,1,0),pt.DefaultMatrixAutoUpdate=!0,pt.DefaultMatrixWorldAutoUpdate=!0;const Qn=new D,Ti=new D,Yl=new D,Ai=new D,Lr=new D,Pr=new D,ph=new D,Zl=new D,Jl=new D,$l=new D;class Gn{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Qn.subVectors(e,t),i.cross(Qn);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){Qn.subVectors(i,t),Ti.subVectors(n,t),Yl.subVectors(e,t);const o=Qn.dot(Qn),a=Qn.dot(Ti),l=Qn.dot(Yl),h=Ti.dot(Ti),u=Ti.dot(Yl),d=o*h-a*a;if(d===0)return s.set(-2,-1,-1);const f=1/d,p=(h*l-a*u)*f,_=(o*u-a*l)*f;return s.set(1-p-_,_,p)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Ai),Ai.x>=0&&Ai.y>=0&&Ai.x+Ai.y<=1}static getUV(e,t,n,i,s,o,a,l){return this.getBarycoord(e,t,n,i,Ai),l.set(0,0),l.addScaledVector(s,Ai.x),l.addScaledVector(o,Ai.y),l.addScaledVector(a,Ai.z),l}static isFrontFacing(e,t,n,i){return Qn.subVectors(n,t),Ti.subVectors(e,t),Qn.cross(Ti).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Qn.subVectors(this.c,this.b),Ti.subVectors(this.a,this.b),Qn.cross(Ti).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Gn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Gn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return Gn.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Gn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Gn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let o,a;Lr.subVectors(i,n),Pr.subVectors(s,n),Zl.subVectors(e,n);const l=Lr.dot(Zl),h=Pr.dot(Zl);if(l<=0&&h<=0)return t.copy(n);Jl.subVectors(e,i);const u=Lr.dot(Jl),d=Pr.dot(Jl);if(u>=0&&d<=u)return t.copy(i);const f=l*d-u*h;if(f<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector(Lr,o);$l.subVectors(e,s);const p=Lr.dot($l),_=Pr.dot($l);if(_>=0&&p<=_)return t.copy(s);const g=p*h-l*_;if(g<=0&&h>=0&&_<=0)return a=h/(h-_),t.copy(n).addScaledVector(Pr,a);const m=u*_-p*d;if(m<=0&&d-u>=0&&p-_>=0)return ph.subVectors(s,i),a=(d-u)/(d-u+(p-_)),t.copy(i).addScaledVector(ph,a);const b=1/(m+g+f);return o=g*b,a=f*b,t.copy(n).addScaledVector(Lr,o).addScaledVector(Pr,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let rf=0;class pn extends j{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:rf++}),this.uuid=Ct(),this.name="",this.type="Material",this.blending=zt,this.side=ze,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=ir,this.blendDst=Ut,this.blendEquation=qe,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=rr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=dn,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=yr,this.stencilZFail=yr,this.stencilZPass=yr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==zt&&(n.blending=this.blending),this.side!==ze&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=i(e.textures),o=i(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class as extends pn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=vs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Wt=new D,Aa=new oe;class At{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=ts,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Aa.fromBufferAttribute(this,t),Aa.applyMatrix3(e),this.setXY(t,Aa.x,Aa.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.applyMatrix3(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.applyMatrix4(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.applyNormalMatrix(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Wt.fromBufferAttribute(this,t),Wt.transformDirection(e),this.setXYZ(t,Wt.x,Wt.y,Wt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=bi(t,this.array)),t}setX(e,t){return this.normalized&&(t=Tt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=bi(t,this.array)),t}setY(e,t){return this.normalized&&(t=Tt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=bi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Tt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=bi(t,this.array)),t}setW(e,t){return this.normalized&&(t=Tt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Tt(t,this.array),n=Tt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Tt(t,this.array),n=Tt(n,this.array),i=Tt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=Tt(t,this.array),n=Tt(n,this.array),i=Tt(i,this.array),s=Tt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ts&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class of extends At{constructor(e,t,n){super(new Int8Array(e),t,n)}}class af extends At{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class lf extends At{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class cf extends At{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Kl extends At{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class hf extends At{constructor(e,t,n){super(new Int32Array(e),t,n)}}class jl extends At{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class uf extends At{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}}class Pe extends At{constructor(e,t,n){super(new Float32Array(e),t,n)}}class df extends At{constructor(e,t,n){super(new Float64Array(e),t,n)}}let ff=0;const Vn=new Qe,Ql=new pt,Ir=new D,Dn=new Is,Eo=new Is,Qt=new D;class rt extends j{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ff++}),this.uuid=Ct(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(sh(e)?jl:Kl)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new vn().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Vn.makeRotationFromQuaternion(e),this.applyMatrix4(Vn),this}rotateX(e){return Vn.makeRotationX(e),this.applyMatrix4(Vn),this}rotateY(e){return Vn.makeRotationY(e),this.applyMatrix4(Vn),this}rotateZ(e){return Vn.makeRotationZ(e),this.applyMatrix4(Vn),this}translate(e,t,n){return Vn.makeTranslation(e,t,n),this.applyMatrix4(Vn),this}scale(e,t,n){return Vn.makeScale(e,t,n),this.applyMatrix4(Vn),this}lookAt(e){return Ql.lookAt(e),Ql.updateMatrix(),this.applyMatrix4(Ql.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ir).negate(),this.translate(Ir.x,Ir.y,Ir.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Pe(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Is);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Dn.setFromBufferAttribute(s),this.morphTargetsRelative?(Qt.addVectors(this.boundingBox.min,Dn.min),this.boundingBox.expandByPoint(Qt),Qt.addVectors(this.boundingBox.max,Dn.max),this.boundingBox.expandByPoint(Qt)):(this.boundingBox.expandByPoint(Dn.min),this.boundingBox.expandByPoint(Dn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Fs);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if(Dn.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];Eo.setFromBufferAttribute(a),this.morphTargetsRelative?(Qt.addVectors(Dn.min,Eo.min),Dn.expandByPoint(Qt),Qt.addVectors(Dn.max,Eo.max),Dn.expandByPoint(Qt)):(Dn.expandByPoint(Eo.min),Dn.expandByPoint(Eo.max))}Dn.getCenter(n);let i=0;for(let s=0,o=e.count;s<o;s++)Qt.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(Qt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let h=0,u=a.count;h<u;h++)Qt.fromBufferAttribute(a,h),l&&(Ir.fromBufferAttribute(e,h),Qt.add(Ir)),i=Math.max(i,n.distanceToSquared(Qt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,o=t.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new At(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,h=[],u=[];for(let z=0;z<a;z++)h[z]=new D,u[z]=new D;const d=new D,f=new D,p=new D,_=new oe,g=new oe,m=new oe,b=new D,C=new D;function E(z,X,he){d.fromArray(i,z*3),f.fromArray(i,X*3),p.fromArray(i,he*3),_.fromArray(o,z*2),g.fromArray(o,X*2),m.fromArray(o,he*2),f.sub(d),p.sub(d),g.sub(_),m.sub(_);const Z=1/(g.x*m.y-m.x*g.y);isFinite(Z)&&(b.copy(f).multiplyScalar(m.y).addScaledVector(p,-g.y).multiplyScalar(Z),C.copy(p).multiplyScalar(g.x).addScaledVector(f,-m.x).multiplyScalar(Z),h[z].add(b),h[X].add(b),h[he].add(b),u[z].add(C),u[X].add(C),u[he].add(C))}let S=this.groups;S.length===0&&(S=[{start:0,count:n.length}]);for(let z=0,X=S.length;z<X;++z){const he=S[z],Z=he.start,G=he.count;for(let Q=Z,ae=Z+G;Q<ae;Q+=3)E(n[Q+0],n[Q+1],n[Q+2])}const R=new D,O=new D,B=new D,A=new D;function F(z){B.fromArray(s,z*3),A.copy(B);const X=h[z];R.copy(X),R.sub(B.multiplyScalar(B.dot(X))).normalize(),O.crossVectors(A,X);const Z=O.dot(u[z])<0?-1:1;l[z*4]=R.x,l[z*4+1]=R.y,l[z*4+2]=R.z,l[z*4+3]=Z}for(let z=0,X=S.length;z<X;++z){const he=S[z],Z=he.start,G=he.count;for(let Q=Z,ae=Z+G;Q<ae;Q+=3)F(n[Q+0]),F(n[Q+1]),F(n[Q+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new At(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,p=n.count;f<p;f++)n.setXYZ(f,0,0,0);const i=new D,s=new D,o=new D,a=new D,l=new D,h=new D,u=new D,d=new D;if(e)for(let f=0,p=e.count;f<p;f+=3){const _=e.getX(f+0),g=e.getX(f+1),m=e.getX(f+2);i.fromBufferAttribute(t,_),s.fromBufferAttribute(t,g),o.fromBufferAttribute(t,m),u.subVectors(o,s),d.subVectors(i,s),u.cross(d),a.fromBufferAttribute(n,_),l.fromBufferAttribute(n,g),h.fromBufferAttribute(n,m),a.add(u),l.add(u),h.add(u),n.setXYZ(_,a.x,a.y,a.z),n.setXYZ(g,l.x,l.y,l.z),n.setXYZ(m,h.x,h.y,h.z)}else for(let f=0,p=t.count;f<p;f+=3)i.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),u.subVectors(o,s),d.subVectors(i,s),u.cross(d),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Qt.fromBufferAttribute(e,t),Qt.normalize(),e.setXYZ(t,Qt.x,Qt.y,Qt.z)}toNonIndexed(){function e(a,l){const h=a.array,u=a.itemSize,d=a.normalized,f=new h.constructor(l.length*u);let p=0,_=0;for(let g=0,m=l.length;g<m;g++){a.isInterleavedBufferAttribute?p=l[g]*a.data.stride+a.offset:p=l[g]*u;for(let b=0;b<u;b++)f[_++]=h[p++]}return new At(f,u,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new rt,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],h=e(l,n);t.setAttribute(a,h)}const s=this.morphAttributes;for(const a in s){const l=[],h=s[a];for(let u=0,d=h.length;u<d;u++){const f=h[u],p=e(f,n);l.push(p)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const h=o[a];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const h in l)l[h]!==void 0&&(e[h]=l[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const h=n[l];e.data.attributes[l]=h.toJSON(e.data)}const i={};let s=!1;for(const l in this.morphAttributes){const h=this.morphAttributes[l],u=[];for(let d=0,f=h.length;d<f;d++){const p=h[d];u.push(p.toJSON(e.data))}u.length>0&&(i[l]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const u=i[h];this.setAttribute(h,u.clone(t))}const s=e.morphAttributes;for(const h in s){const u=[],d=s[h];for(let f=0,p=d.length;f<p;f++)u.push(d[f].clone(t));this.morphAttributes[h]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let h=0,u=o.length;h<u;h++){const d=o[h];this.addGroup(d.start,d.count,d.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const mh=new Qe,Dr=new wo,ec=new Fs,ls=new D,cs=new D,hs=new D,tc=new D,nc=new D,ic=new D,Ca=new D,Ra=new D,La=new D,Pa=new oe,Ia=new oe,Da=new oe,sc=new D,Oa=new D;class an extends pt{constructor(e=new rt,t=new as){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),ec.copy(n.boundingSphere),ec.applyMatrix4(s),e.ray.intersectsSphere(ec)===!1)||(mh.copy(s).invert(),Dr.copy(e.ray).applyMatrix4(mh),n.boundingBox!==null&&Dr.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,h=n.morphAttributes.position,u=n.morphTargetsRelative,d=n.attributes.uv,f=n.attributes.uv2,p=n.groups,_=n.drawRange;if(a!==null)if(Array.isArray(i))for(let g=0,m=p.length;g<m;g++){const b=p[g],C=i[b.materialIndex],E=Math.max(b.start,_.start),S=Math.min(a.count,Math.min(b.start+b.count,_.start+_.count));for(let R=E,O=S;R<O;R+=3){const B=a.getX(R),A=a.getX(R+1),F=a.getX(R+2);o=Na(this,C,e,Dr,l,h,u,d,f,B,A,F),o&&(o.faceIndex=Math.floor(R/3),o.face.materialIndex=b.materialIndex,t.push(o))}}else{const g=Math.max(0,_.start),m=Math.min(a.count,_.start+_.count);for(let b=g,C=m;b<C;b+=3){const E=a.getX(b),S=a.getX(b+1),R=a.getX(b+2);o=Na(this,i,e,Dr,l,h,u,d,f,E,S,R),o&&(o.faceIndex=Math.floor(b/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let g=0,m=p.length;g<m;g++){const b=p[g],C=i[b.materialIndex],E=Math.max(b.start,_.start),S=Math.min(l.count,Math.min(b.start+b.count,_.start+_.count));for(let R=E,O=S;R<O;R+=3){const B=R,A=R+1,F=R+2;o=Na(this,C,e,Dr,l,h,u,d,f,B,A,F),o&&(o.faceIndex=Math.floor(R/3),o.face.materialIndex=b.materialIndex,t.push(o))}}else{const g=Math.max(0,_.start),m=Math.min(l.count,_.start+_.count);for(let b=g,C=m;b<C;b+=3){const E=b,S=b+1,R=b+2;o=Na(this,i,e,Dr,l,h,u,d,f,E,S,R),o&&(o.faceIndex=Math.floor(b/3),t.push(o))}}}}function pf(r,e,t,n,i,s,o,a){let l;if(e.side===_t?l=n.intersectTriangle(o,s,i,!0,a):l=n.intersectTriangle(i,s,o,e.side!==wn,a),l===null)return null;Oa.copy(a),Oa.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(Oa);return h<t.near||h>t.far?null:{distance:h,point:Oa.clone(),object:r}}function Na(r,e,t,n,i,s,o,a,l,h,u,d){ls.fromBufferAttribute(i,h),cs.fromBufferAttribute(i,u),hs.fromBufferAttribute(i,d);const f=r.morphTargetInfluences;if(s&&f){Ca.set(0,0,0),Ra.set(0,0,0),La.set(0,0,0);for(let _=0,g=s.length;_<g;_++){const m=f[_],b=s[_];m!==0&&(tc.fromBufferAttribute(b,h),nc.fromBufferAttribute(b,u),ic.fromBufferAttribute(b,d),o?(Ca.addScaledVector(tc,m),Ra.addScaledVector(nc,m),La.addScaledVector(ic,m)):(Ca.addScaledVector(tc.sub(ls),m),Ra.addScaledVector(nc.sub(cs),m),La.addScaledVector(ic.sub(hs),m)))}ls.add(Ca),cs.add(Ra),hs.add(La)}r.isSkinnedMesh&&(r.boneTransform(h,ls),r.boneTransform(u,cs),r.boneTransform(d,hs));const p=pf(r,e,t,n,ls,cs,hs,sc);if(p){a&&(Pa.fromBufferAttribute(a,h),Ia.fromBufferAttribute(a,u),Da.fromBufferAttribute(a,d),p.uv=Gn.getUV(sc,ls,cs,hs,Pa,Ia,Da,new oe)),l&&(Pa.fromBufferAttribute(l,h),Ia.fromBufferAttribute(l,u),Da.fromBufferAttribute(l,d),p.uv2=Gn.getUV(sc,ls,cs,hs,Pa,Ia,Da,new oe));const _={a:h,b:u,c:d,normal:new D,materialIndex:0};Gn.getNormal(ls,cs,hs,_.normal),p.face=_}return p}class us extends rt{constructor(e=1,t=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const l=[],h=[],u=[],d=[];let f=0,p=0;_("z","y","x",-1,-1,n,t,e,o,s,0),_("z","y","x",1,-1,n,t,-e,o,s,1),_("x","z","y",1,1,e,n,t,i,o,2),_("x","z","y",1,-1,e,n,-t,i,o,3),_("x","y","z",1,-1,e,t,n,i,s,4),_("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new Pe(h,3)),this.setAttribute("normal",new Pe(u,3)),this.setAttribute("uv",new Pe(d,2));function _(g,m,b,C,E,S,R,O,B,A,F){const z=S/B,X=R/A,he=S/2,Z=R/2,G=O/2,Q=B+1,ae=A+1;let de=0,ie=0;const me=new D;for(let ce=0;ce<ae;ce++){const $=ce*X-Z;for(let J=0;J<Q;J++){const ye=J*z-he;me[g]=ye*C,me[m]=$*E,me[b]=G,h.push(me.x,me.y,me.z),me[g]=0,me[m]=0,me[b]=O>0?1:-1,u.push(me.x,me.y,me.z),d.push(J/B),d.push(1-ce/A),de+=1}}for(let ce=0;ce<A;ce++)for(let $=0;$<B;$++){const J=f+$+Q*ce,ye=f+$+Q*(ce+1),ge=f+($+1)+Q*(ce+1),be=f+($+1)+Q*ce;l.push(J,ye,be),l.push(ye,ge,be),ie+=6}a.addGroup(p,ie,F),p+=ie,f+=de}}static fromJSON(e){return new us(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Or(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function xn(r){const e={};for(let t=0;t<r.length;t++){const n=Or(r[t]);for(const i in n)e[i]=n[i]}return e}function mf(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function gh(r){return r.getRenderTarget()===null&&r.outputEncoding===bt?Pn:es}const _h={clone:Or,merge:xn};var gf=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,_f=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class pi extends pn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=gf,this.fragmentShader=_f,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Or(e.uniforms),this.uniformsGroups=mf(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Fa extends pt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Qe,this.projectionMatrix=new Qe,this.projectionMatrixInverse=new Qe}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class ln extends Fa{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=lt*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ne*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return lt*2*Math.atan(Math.tan(Ne*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Ne*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,h=o.fullHeight;s+=o.offsetX*i/l,t-=o.offsetY*n/h,i*=o.width/l,n*=o.height/h}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Nr=-90,Fr=1;class vh extends pt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new ln(Nr,Fr,e,t);i.layers=this.layers,i.up.set(0,1,0),i.lookAt(1,0,0),this.add(i);const s=new ln(Nr,Fr,e,t);s.layers=this.layers,s.up.set(0,1,0),s.lookAt(-1,0,0),this.add(s);const o=new ln(Nr,Fr,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(0,1,0),this.add(o);const a=new ln(Nr,Fr,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(0,-1,0),this.add(a);const l=new ln(Nr,Fr,e,t);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,1),this.add(l);const h=new ln(Nr,Fr,e,t);h.layers=this.layers,h.up.set(0,1,0),h.lookAt(0,0,-1),this.add(h)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,o,a,l,h]=this.children,u=e.getRenderTarget(),d=e.toneMapping,f=e.xr.enabled;e.toneMapping=Cn,e.xr.enabled=!1;const p=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=p,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(u),e.toneMapping=d,e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class To extends Ht{constructor(e,t,n,i,s,o,a,l,h,u){e=e!==void 0?e:[],t=t!==void 0?t:Sn,super(e,t,n,i,s,o,a,l,h,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class xh extends Hn{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new To(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:st}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new us(5,5,5),s=new pi({name:"CubemapFromEquirect",uniforms:Or(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:_t,blending:wt});s.uniforms.tEquirect.value=t;const o=new an(i,s),a=t.minFilter;return t.minFilter===ai&&(t.minFilter=st),new vh(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(s)}}const rc=new D,vf=new D,xf=new vn;class ds{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=rc.subVectors(n,t).cross(vf.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(rc),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||xf.getNormalMatrix(e),i=this.coplanarPoint(rc).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ur=new Fs,Ua=new D;class Ba{constructor(e=new ds,t=new ds,n=new ds,i=new ds,s=new ds,o=new ds){this.planes=[e,t,n,i,s,o]}set(e,t,n,i,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],o=n[2],a=n[3],l=n[4],h=n[5],u=n[6],d=n[7],f=n[8],p=n[9],_=n[10],g=n[11],m=n[12],b=n[13],C=n[14],E=n[15];return t[0].setComponents(a-i,d-l,g-f,E-m).normalize(),t[1].setComponents(a+i,d+l,g+f,E+m).normalize(),t[2].setComponents(a+s,d+h,g+p,E+b).normalize(),t[3].setComponents(a-s,d-h,g-p,E-b).normalize(),t[4].setComponents(a-o,d-u,g-_,E-C).normalize(),t[5].setComponents(a+o,d+u,g+_,E+C).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Ur.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Ur)}intersectsSprite(e){return Ur.center.set(0,0,0),Ur.radius=.7071067811865476,Ur.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ur)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Ua.x=i.normal.x>0?e.max.x:e.min.x,Ua.y=i.normal.y>0?e.max.y:e.min.y,Ua.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Ua)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function yh(){let r=null,e=!1,t=null,n=null;function i(s,o){t(s,o),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function yf(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,u){const d=h.array,f=h.usage,p=r.createBuffer();r.bindBuffer(u,p),r.bufferData(u,d,f),h.onUploadCallback();let _;if(d instanceof Float32Array)_=r.FLOAT;else if(d instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)_=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else _=r.UNSIGNED_SHORT;else if(d instanceof Int16Array)_=r.SHORT;else if(d instanceof Uint32Array)_=r.UNSIGNED_INT;else if(d instanceof Int32Array)_=r.INT;else if(d instanceof Int8Array)_=r.BYTE;else if(d instanceof Uint8Array)_=r.UNSIGNED_BYTE;else if(d instanceof Uint8ClampedArray)_=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:p,type:_,bytesPerElement:d.BYTES_PER_ELEMENT,version:h.version}}function s(h,u,d){const f=u.array,p=u.updateRange;r.bindBuffer(d,h),p.count===-1?r.bufferSubData(d,0,f):(t?r.bufferSubData(d,p.offset*f.BYTES_PER_ELEMENT,f,p.offset,p.count):r.bufferSubData(d,p.offset*f.BYTES_PER_ELEMENT,f.subarray(p.offset,p.offset+p.count)),p.count=-1),u.onUploadCallback()}function o(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function a(h){h.isInterleavedBufferAttribute&&(h=h.data);const u=n.get(h);u&&(r.deleteBuffer(u.buffer),n.delete(h))}function l(h,u){if(h.isGLBufferAttribute){const f=n.get(h);(!f||f.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d===void 0?n.set(h,i(h,u)):d.version<h.version&&(s(d.buffer,h,u),d.version=h.version)}return{get:o,remove:a,update:l}}class Br extends rt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,o=t/2,a=Math.floor(n),l=Math.floor(i),h=a+1,u=l+1,d=e/a,f=t/l,p=[],_=[],g=[],m=[];for(let b=0;b<u;b++){const C=b*f-o;for(let E=0;E<h;E++){const S=E*d-s;_.push(S,-C,0),g.push(0,0,1),m.push(E/a),m.push(1-b/l)}}for(let b=0;b<l;b++)for(let C=0;C<a;C++){const E=C+h*b,S=C+h*(b+1),R=C+1+h*(b+1),O=C+1+h*b;p.push(E,S,O),p.push(S,R,O)}this.setIndex(p),this.setAttribute("position",new Pe(_,3)),this.setAttribute("normal",new Pe(g,3)),this.setAttribute("uv",new Pe(m,2))}static fromJSON(e){return new Br(e.width,e.height,e.widthSegments,e.heightSegments)}}var Mf=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,bf=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,wf=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Sf=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Ef=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Tf=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Af="vec3 transformed = vec3( position );",Cf=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Rf=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
		float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
		float x2 = x * x;
		float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
		return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Lf=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,	0.0556434,
		-1.5371385,	1.8760108, -0.2040259,
		-0.4985314,	0.0415560,	1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Pf=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,If=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Df=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Of=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Nf=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Ff=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Uf=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Bf=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,zf=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,kf=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Hf=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Gf=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Vf=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Wf=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Xf=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,qf=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Yf="gl_FragColor = linearToOutputTexel( gl_FragColor );",Zf=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Jf=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,$f=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Kf=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,jf=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Qf=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,ep=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,tp=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,np=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,ip=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,sp=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,rp=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,op=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,ap=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,lp=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,cp=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,hp=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,up=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,dp=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,fp=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,pp=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,mp=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,gp=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(		0, 1,		0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,_p=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,vp=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,xp=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,yp=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Mp=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,bp=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,wp=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Sp=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Ep=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Tp=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Ap=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Cp=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Rp=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Lp=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Pp=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Ip=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Dp=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Op=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Np=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Fp=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Up=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Bp=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,zp=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,kp=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Hp=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Gp=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Vp=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Wp=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Xp=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,qp=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Yp=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Zp=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Jp=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,$p=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Kp=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,jp=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
							texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
							f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
							texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
							f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Qp=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,em=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,tm=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,nm=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,im=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,sm=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,rm=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,om=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,am=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,lm=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,cm=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(	1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,	1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,	1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,hm=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,um=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,dm=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,fm=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,pm=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,mm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,gm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,_m=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,vm=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const nt={alphamap_fragment:Mf,alphamap_pars_fragment:bf,alphatest_fragment:wf,alphatest_pars_fragment:Sf,aomap_fragment:Ef,aomap_pars_fragment:Tf,begin_vertex:Af,beginnormal_vertex:Cf,bsdfs:Rf,iridescence_fragment:Lf,bumpmap_pars_fragment:Pf,clipping_planes_fragment:If,clipping_planes_pars_fragment:Df,clipping_planes_pars_vertex:Of,clipping_planes_vertex:Nf,color_fragment:Ff,color_pars_fragment:Uf,color_pars_vertex:Bf,color_vertex:zf,common:kf,cube_uv_reflection_fragment:Hf,defaultnormal_vertex:Gf,displacementmap_pars_vertex:Vf,displacementmap_vertex:Wf,emissivemap_fragment:Xf,emissivemap_pars_fragment:qf,encodings_fragment:Yf,encodings_pars_fragment:Zf,envmap_fragment:Jf,envmap_common_pars_fragment:$f,envmap_pars_fragment:Kf,envmap_pars_vertex:jf,envmap_physical_pars_fragment:hp,envmap_vertex:Qf,fog_vertex:ep,fog_pars_vertex:tp,fog_fragment:np,fog_pars_fragment:ip,gradientmap_pars_fragment:sp,lightmap_fragment:rp,lightmap_pars_fragment:op,lights_lambert_fragment:ap,lights_lambert_pars_fragment:lp,lights_pars_begin:cp,lights_toon_fragment:up,lights_toon_pars_fragment:dp,lights_phong_fragment:fp,lights_phong_pars_fragment:pp,lights_physical_fragment:mp,lights_physical_pars_fragment:gp,lights_fragment_begin:_p,lights_fragment_maps:vp,lights_fragment_end:xp,logdepthbuf_fragment:yp,logdepthbuf_pars_fragment:Mp,logdepthbuf_pars_vertex:bp,logdepthbuf_vertex:wp,map_fragment:Sp,map_pars_fragment:Ep,map_particle_fragment:Tp,map_particle_pars_fragment:Ap,metalnessmap_fragment:Cp,metalnessmap_pars_fragment:Rp,morphcolor_vertex:Lp,morphnormal_vertex:Pp,morphtarget_pars_vertex:Ip,morphtarget_vertex:Dp,normal_fragment_begin:Op,normal_fragment_maps:Np,normal_pars_fragment:Fp,normal_pars_vertex:Up,normal_vertex:Bp,normalmap_pars_fragment:zp,clearcoat_normal_fragment_begin:kp,clearcoat_normal_fragment_maps:Hp,clearcoat_pars_fragment:Gp,iridescence_pars_fragment:Vp,output_fragment:Wp,packing:Xp,premultiplied_alpha_fragment:qp,project_vertex:Yp,dithering_fragment:Zp,dithering_pars_fragment:Jp,roughnessmap_fragment:$p,roughnessmap_pars_fragment:Kp,shadowmap_pars_fragment:jp,shadowmap_pars_vertex:Qp,shadowmap_vertex:em,shadowmask_pars_fragment:tm,skinbase_vertex:nm,skinning_pars_vertex:im,skinning_vertex:sm,skinnormal_vertex:rm,specularmap_fragment:om,specularmap_pars_fragment:am,tonemapping_fragment:lm,tonemapping_pars_fragment:cm,transmission_fragment:hm,transmission_pars_fragment:um,uv_pars_fragment:dm,uv_pars_vertex:fm,uv_vertex:pm,uv2_pars_fragment:mm,uv2_pars_vertex:gm,uv2_vertex:_m,worldpos_vertex:vm,background_vert:`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,background_frag:`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,backgroundCube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,backgroundCube_frag:`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,cube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,cube_frag:`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,depth_vert:`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,depth_frag:`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,distanceRGBA_vert:`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,distanceRGBA_frag:`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,equirect_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,equirect_frag:`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,linedashed_vert:`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,linedashed_frag:`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,meshbasic_vert:`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,meshbasic_frag:`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshlambert_vert:`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshlambert_frag:`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshmatcap_vert:`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,meshmatcap_frag:`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshnormal_vert:`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,meshnormal_frag:`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,meshphong_vert:`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshphong_frag:`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshphysical_vert:`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,meshphysical_frag:`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshtoon_vert:`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshtoon_frag:`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,points_vert:`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,points_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,shadow_vert:`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,shadow_frag:`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,sprite_vert:`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,sprite_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`},xe={common:{diffuse:{value:new Ae(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new vn},uv2Transform:{value:new vn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new oe(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ae(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ae(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new vn}},sprite:{diffuse:{value:new Ae(16777215)},opacity:{value:1},center:{value:new oe(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new vn}}},ei={basic:{uniforms:xn([xe.common,xe.specularmap,xe.envmap,xe.aomap,xe.lightmap,xe.fog]),vertexShader:nt.meshbasic_vert,fragmentShader:nt.meshbasic_frag},lambert:{uniforms:xn([xe.common,xe.specularmap,xe.envmap,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.fog,xe.lights,{emissive:{value:new Ae(0)}}]),vertexShader:nt.meshlambert_vert,fragmentShader:nt.meshlambert_frag},phong:{uniforms:xn([xe.common,xe.specularmap,xe.envmap,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.fog,xe.lights,{emissive:{value:new Ae(0)},specular:{value:new Ae(1118481)},shininess:{value:30}}]),vertexShader:nt.meshphong_vert,fragmentShader:nt.meshphong_frag},standard:{uniforms:xn([xe.common,xe.envmap,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.roughnessmap,xe.metalnessmap,xe.fog,xe.lights,{emissive:{value:new Ae(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:nt.meshphysical_vert,fragmentShader:nt.meshphysical_frag},toon:{uniforms:xn([xe.common,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.gradientmap,xe.fog,xe.lights,{emissive:{value:new Ae(0)}}]),vertexShader:nt.meshtoon_vert,fragmentShader:nt.meshtoon_frag},matcap:{uniforms:xn([xe.common,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.fog,{matcap:{value:null}}]),vertexShader:nt.meshmatcap_vert,fragmentShader:nt.meshmatcap_frag},points:{uniforms:xn([xe.points,xe.fog]),vertexShader:nt.points_vert,fragmentShader:nt.points_frag},dashed:{uniforms:xn([xe.common,xe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:nt.linedashed_vert,fragmentShader:nt.linedashed_frag},depth:{uniforms:xn([xe.common,xe.displacementmap]),vertexShader:nt.depth_vert,fragmentShader:nt.depth_frag},normal:{uniforms:xn([xe.common,xe.bumpmap,xe.normalmap,xe.displacementmap,{opacity:{value:1}}]),vertexShader:nt.meshnormal_vert,fragmentShader:nt.meshnormal_frag},sprite:{uniforms:xn([xe.sprite,xe.fog]),vertexShader:nt.sprite_vert,fragmentShader:nt.sprite_frag},background:{uniforms:{uvTransform:{value:new vn},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:nt.background_vert,fragmentShader:nt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:nt.backgroundCube_vert,fragmentShader:nt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:nt.cube_vert,fragmentShader:nt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:nt.equirect_vert,fragmentShader:nt.equirect_frag},distanceRGBA:{uniforms:xn([xe.common,xe.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:nt.distanceRGBA_vert,fragmentShader:nt.distanceRGBA_frag},shadow:{uniforms:xn([xe.lights,xe.fog,{color:{value:new Ae(0)},opacity:{value:1}}]),vertexShader:nt.shadow_vert,fragmentShader:nt.shadow_frag}};ei.physical={uniforms:xn([ei.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new oe(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Ae(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new oe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ae(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Ae(1,1,1)},specularColorMap:{value:null}}]),vertexShader:nt.meshphysical_vert,fragmentShader:nt.meshphysical_frag};const za={r:0,b:0,g:0};function xm(r,e,t,n,i,s,o){const a=new Ae(0);let l=s===!0?0:1,h,u,d=null,f=0,p=null;function _(m,b){let C=!1,E=b.isScene===!0?b.background:null;E&&E.isTexture&&(E=(b.backgroundBlurriness>0?t:e).get(E));const S=r.xr,R=S.getSession&&S.getSession();R&&R.environmentBlendMode==="additive"&&(E=null),E===null?g(a,l):E&&E.isColor&&(g(E,1),C=!0),(r.autoClear||C)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),E&&(E.isCubeTexture||E.mapping===_i)?(u===void 0&&(u=new an(new us(1,1,1),new pi({name:"BackgroundCubeMaterial",uniforms:Or(ei.backgroundCube.uniforms),vertexShader:ei.backgroundCube.vertexShader,fragmentShader:ei.backgroundCube.fragmentShader,side:_t,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(O,B,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=E,u.material.uniforms.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=b.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,(d!==E||f!==E.version||p!==r.toneMapping)&&(u.material.needsUpdate=!0,d=E,f=E.version,p=r.toneMapping),u.layers.enableAll(),m.unshift(u,u.geometry,u.material,0,0,null)):E&&E.isTexture&&(h===void 0&&(h=new an(new Br(2,2),new pi({name:"BackgroundMaterial",uniforms:Or(ei.background.uniforms),vertexShader:ei.background.vertexShader,fragmentShader:ei.background.fragmentShader,side:ze,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=E,h.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,E.matrixAutoUpdate===!0&&E.updateMatrix(),h.material.uniforms.uvTransform.value.copy(E.matrix),(d!==E||f!==E.version||p!==r.toneMapping)&&(h.material.needsUpdate=!0,d=E,f=E.version,p=r.toneMapping),h.layers.enableAll(),m.unshift(h,h.geometry,h.material,0,0,null))}function g(m,b){m.getRGB(za,gh(r)),n.buffers.color.setClear(za.r,za.g,za.b,b,o)}return{getClearColor:function(){return a},setClearColor:function(m,b=1){a.set(m),l=b,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,g(a,l)},render:_}}function ym(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},l=m(null);let h=l,u=!1;function d(G,Q,ae,de,ie){let me=!1;if(o){const ce=g(de,ae,Q);h!==ce&&(h=ce,p(h.object)),me=b(G,de,ae,ie),me&&C(G,de,ae,ie)}else{const ce=Q.wireframe===!0;(h.geometry!==de.id||h.program!==ae.id||h.wireframe!==ce)&&(h.geometry=de.id,h.program=ae.id,h.wireframe=ce,me=!0)}ie!==null&&t.update(ie,r.ELEMENT_ARRAY_BUFFER),(me||u)&&(u=!1,A(G,Q,ae,de),ie!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(ie).buffer))}function f(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function p(G){return n.isWebGL2?r.bindVertexArray(G):s.bindVertexArrayOES(G)}function _(G){return n.isWebGL2?r.deleteVertexArray(G):s.deleteVertexArrayOES(G)}function g(G,Q,ae){const de=ae.wireframe===!0;let ie=a[G.id];ie===void 0&&(ie={},a[G.id]=ie);let me=ie[Q.id];me===void 0&&(me={},ie[Q.id]=me);let ce=me[de];return ce===void 0&&(ce=m(f()),me[de]=ce),ce}function m(G){const Q=[],ae=[],de=[];for(let ie=0;ie<i;ie++)Q[ie]=0,ae[ie]=0,de[ie]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:Q,enabledAttributes:ae,attributeDivisors:de,object:G,attributes:{},index:null}}function b(G,Q,ae,de){const ie=h.attributes,me=Q.attributes;let ce=0;const $=ae.getAttributes();for(const J in $)if($[J].location>=0){const ge=ie[J];let be=me[J];if(be===void 0&&(J==="instanceMatrix"&&G.instanceMatrix&&(be=G.instanceMatrix),J==="instanceColor"&&G.instanceColor&&(be=G.instanceColor)),ge===void 0||ge.attribute!==be||be&&ge.data!==be.data)return!0;ce++}return h.attributesNum!==ce||h.index!==de}function C(G,Q,ae,de){const ie={},me=Q.attributes;let ce=0;const $=ae.getAttributes();for(const J in $)if($[J].location>=0){let ge=me[J];ge===void 0&&(J==="instanceMatrix"&&G.instanceMatrix&&(ge=G.instanceMatrix),J==="instanceColor"&&G.instanceColor&&(ge=G.instanceColor));const be={};be.attribute=ge,ge&&ge.data&&(be.data=ge.data),ie[J]=be,ce++}h.attributes=ie,h.attributesNum=ce,h.index=de}function E(){const G=h.newAttributes;for(let Q=0,ae=G.length;Q<ae;Q++)G[Q]=0}function S(G){R(G,0)}function R(G,Q){const ae=h.newAttributes,de=h.enabledAttributes,ie=h.attributeDivisors;ae[G]=1,de[G]===0&&(r.enableVertexAttribArray(G),de[G]=1),ie[G]!==Q&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](G,Q),ie[G]=Q)}function O(){const G=h.newAttributes,Q=h.enabledAttributes;for(let ae=0,de=Q.length;ae<de;ae++)Q[ae]!==G[ae]&&(r.disableVertexAttribArray(ae),Q[ae]=0)}function B(G,Q,ae,de,ie,me){n.isWebGL2===!0&&(ae===r.INT||ae===r.UNSIGNED_INT)?r.vertexAttribIPointer(G,Q,ae,ie,me):r.vertexAttribPointer(G,Q,ae,de,ie,me)}function A(G,Q,ae,de){if(n.isWebGL2===!1&&(G.isInstancedMesh||de.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;E();const ie=de.attributes,me=ae.getAttributes(),ce=Q.defaultAttributeValues;for(const $ in me){const J=me[$];if(J.location>=0){let ye=ie[$];if(ye===void 0&&($==="instanceMatrix"&&G.instanceMatrix&&(ye=G.instanceMatrix),$==="instanceColor"&&G.instanceColor&&(ye=G.instanceColor)),ye!==void 0){const ge=ye.normalized,be=ye.itemSize,H=t.get(ye);if(H===void 0)continue;const Je=H.buffer,Le=H.type,Ye=H.bytesPerElement;if(ye.isInterleavedBufferAttribute){const Se=ye.data,ot=Se.stride,re=ye.offset;if(Se.isInstancedInterleavedBuffer){for(let se=0;se<J.locationSize;se++)R(J.location+se,Se.meshPerAttribute);G.isInstancedMesh!==!0&&de._maxInstanceCount===void 0&&(de._maxInstanceCount=Se.meshPerAttribute*Se.count)}else for(let se=0;se<J.locationSize;se++)S(J.location+se);r.bindBuffer(r.ARRAY_BUFFER,Je);for(let se=0;se<J.locationSize;se++)B(J.location+se,be/J.locationSize,Le,ge,ot*Ye,(re+be/J.locationSize*se)*Ye)}else{if(ye.isInstancedBufferAttribute){for(let Se=0;Se<J.locationSize;Se++)R(J.location+Se,ye.meshPerAttribute);G.isInstancedMesh!==!0&&de._maxInstanceCount===void 0&&(de._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let Se=0;Se<J.locationSize;Se++)S(J.location+Se);r.bindBuffer(r.ARRAY_BUFFER,Je);for(let Se=0;Se<J.locationSize;Se++)B(J.location+Se,be/J.locationSize,Le,ge,be*Ye,be/J.locationSize*Se*Ye)}}else if(ce!==void 0){const ge=ce[$];if(ge!==void 0)switch(ge.length){case 2:r.vertexAttrib2fv(J.location,ge);break;case 3:r.vertexAttrib3fv(J.location,ge);break;case 4:r.vertexAttrib4fv(J.location,ge);break;default:r.vertexAttrib1fv(J.location,ge)}}}}O()}function F(){he();for(const G in a){const Q=a[G];for(const ae in Q){const de=Q[ae];for(const ie in de)_(de[ie].object),delete de[ie];delete Q[ae]}delete a[G]}}function z(G){if(a[G.id]===void 0)return;const Q=a[G.id];for(const ae in Q){const de=Q[ae];for(const ie in de)_(de[ie].object),delete de[ie];delete Q[ae]}delete a[G.id]}function X(G){for(const Q in a){const ae=a[Q];if(ae[G.id]===void 0)continue;const de=ae[G.id];for(const ie in de)_(de[ie].object),delete de[ie];delete ae[G.id]}}function he(){Z(),u=!0,h!==l&&(h=l,p(h.object))}function Z(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:d,reset:he,resetDefaultState:Z,dispose:F,releaseStatesOfGeometry:z,releaseStatesOfProgram:X,initAttributes:E,enableAttribute:S,disableUnusedAttributes:O}}function Mm(r,e,t,n){const i=n.isWebGL2;let s;function o(h){s=h}function a(h,u){r.drawArrays(s,h,u),t.update(u,s,1)}function l(h,u,d){if(d===0)return;let f,p;if(i)f=r,p="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[p](s,h,u,d),t.update(u,s,d)}this.setMode=o,this.render=a,this.renderInstances=l}function bm(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const B=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(B.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(B){if(B==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";B="mediump"}return B==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&r instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const h=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,d=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),f=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_TEXTURE_SIZE),_=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),g=r.getParameter(r.MAX_VERTEX_ATTRIBS),m=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),b=r.getParameter(r.MAX_VARYING_VECTORS),C=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),E=f>0,S=o||e.has("OES_texture_float"),R=E&&S,O=o?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:d,maxVertexTextures:f,maxTextureSize:p,maxCubemapSize:_,maxAttributes:g,maxVertexUniforms:m,maxVaryings:b,maxFragmentUniforms:C,vertexTextures:E,floatFragmentTextures:S,floatVertexTextures:R,maxSamples:O}}function wm(r){const e=this;let t=null,n=0,i=!1,s=!1;const o=new ds,a=new vn,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,f,p){const _=d.length!==0||f||n!==0||i;return i=f,t=u(d,p,0),n=d.length,_},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,h()},this.setState=function(d,f,p){const _=d.clippingPlanes,g=d.clipIntersection,m=d.clipShadows,b=r.get(d);if(!i||_===null||_.length===0||s&&!m)s?u(null):h();else{const C=s?0:n,E=C*4;let S=b.clippingState||null;l.value=S,S=u(_,f,E,p);for(let R=0;R!==E;++R)S[R]=t[R];b.clippingState=S,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=C}};function h(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(d,f,p,_){const g=d!==null?d.length:0;let m=null;if(g!==0){if(m=l.value,_!==!0||m===null){const b=p+g*4,C=f.matrixWorldInverse;a.getNormalMatrix(C),(m===null||m.length<b)&&(m=new Float32Array(b));for(let E=0,S=p;E!==g;++E,S+=4)o.copy(d[E]).applyMatrix4(C,a),o.normal.toArray(m,S),m[S+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,m}}function Sm(r){let e=new WeakMap;function t(o,a){return a===xs?o.mapping=Sn:a===ri&&(o.mapping=si),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===xs||a===ri)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const h=new xh(l.height/2);return h.fromEquirectangularTexture(r,o),e.set(o,h),o.addEventListener("dispose",i),t(h.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class ka extends Fa{constructor(e=-1,t=1,n=1,i=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,o=s+h*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const zr=4,Mh=[.125,.215,.35,.446,.526,.582],Us=20,oc=new ka,bh=new Ae;let ac=null;const Bs=(1+Math.sqrt(5))/2,kr=1/Bs,wh=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,Bs,kr),new D(0,Bs,-kr),new D(kr,0,Bs),new D(-kr,0,Bs),new D(Bs,kr,0),new D(-Bs,kr,0)];class lc{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){ac=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Th(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Eh(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(ac),e.scissorTest=!1,Ha(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Sn||e.mapping===si?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),ac=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:st,minFilter:st,generateMipmaps:!1,type:Wi,format:rn,encoding:un,depthBuffer:!1},i=Sh(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Sh(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Em(s)),this._blurMaterial=Tm(s,e,t)}return i}_compileMaterial(e){const t=new an(this._lodPlanes[0],e);this._renderer.compile(t,oc)}_sceneToCubeUV(e,t,n,i){const a=new ln(90,1,t,n),l=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,f=u.toneMapping;u.getClearColor(bh),u.toneMapping=Cn,u.autoClear=!1;const p=new as({name:"PMREM.Background",side:_t,depthWrite:!1,depthTest:!1}),_=new an(new us,p);let g=!1;const m=e.background;m?m.isColor&&(p.color.copy(m),e.background=null,g=!0):(p.color.copy(bh),g=!0);for(let b=0;b<6;b++){const C=b%3;C===0?(a.up.set(0,l[b],0),a.lookAt(h[b],0,0)):C===1?(a.up.set(0,0,l[b]),a.lookAt(0,h[b],0)):(a.up.set(0,l[b],0),a.lookAt(0,0,h[b]));const E=this._cubeSize;Ha(i,C*E,b>2?E:0,E,E),u.setRenderTarget(i),g&&u.render(_,a),u.render(e,a)}_.geometry.dispose(),_.material.dispose(),u.toneMapping=f,u.autoClear=d,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Sn||e.mapping===si;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Th()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Eh());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new an(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;Ha(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,oc)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=wh[(i-1)%wh.length];this._blur(e,i-1,i,s,o)}t.autoClear=n}_blur(e,t,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",s),this._halfBlur(o,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,o,a){const l=this._renderer,h=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,d=new an(this._lodPlanes[i],h),f=h.uniforms,p=this._sizeLods[n]-1,_=isFinite(s)?Math.PI/(2*p):2*Math.PI/(2*Us-1),g=s/_,m=isFinite(s)?1+Math.floor(u*g):Us;m>Us&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Us}`);const b=[];let C=0;for(let B=0;B<Us;++B){const A=B/g,F=Math.exp(-A*A/2);b.push(F),B===0?C+=F:B<m&&(C+=2*F)}for(let B=0;B<b.length;B++)b[B]=b[B]/C;f.envMap.value=e.texture,f.samples.value=m,f.weights.value=b,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:E}=this;f.dTheta.value=_,f.mipInt.value=E-n;const S=this._sizeLods[i],R=3*S*(i>E-zr?i-E+zr:0),O=4*(this._cubeSize-S);Ha(t,R,O,3*S,2*S),l.setRenderTarget(t),l.render(d,oc)}}function Em(r){const e=[],t=[],n=[];let i=r;const s=r-zr+1+Mh.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);t.push(a);let l=1/a;o>r-zr?l=Mh[o-r+zr-1]:o===0&&(l=0),n.push(l);const h=1/(a-2),u=-h,d=1+h,f=[u,u,d,u,d,d,u,u,d,d,u,d],p=6,_=6,g=3,m=2,b=1,C=new Float32Array(g*_*p),E=new Float32Array(m*_*p),S=new Float32Array(b*_*p);for(let O=0;O<p;O++){const B=O%3*2/3-1,A=O>2?0:-1,F=[B,A,0,B+2/3,A,0,B+2/3,A+1,0,B,A,0,B+2/3,A+1,0,B,A+1,0];C.set(F,g*_*O),E.set(f,m*_*O);const z=[O,O,O,O,O,O];S.set(z,b*_*O)}const R=new rt;R.setAttribute("position",new At(C,g)),R.setAttribute("uv",new At(E,m)),R.setAttribute("faceIndex",new At(S,b)),e.push(R),i>zr&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Sh(r,e,t){const n=new Hn(r,e,t);return n.texture.mapping=_i,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Ha(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function Tm(r,e,t){const n=new Float32Array(Us),i=new D(0,1,0);return new pi({name:"SphericalGaussianBlur",defines:{n:Us,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:cc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:wt,depthTest:!1,depthWrite:!1})}function Eh(){return new pi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:cc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:wt,depthTest:!1,depthWrite:!1})}function Th(){return new pi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:cc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:wt,depthTest:!1,depthWrite:!1})}function cc(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Am(r){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,h=l===xs||l===ri,u=l===Sn||l===si;if(h||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let d=e.get(a);return t===null&&(t=new lc(r)),d=h?t.fromEquirectangular(a,d):t.fromCubemap(a,d),e.set(a,d),d.texture}else{if(e.has(a))return e.get(a).texture;{const d=a.image;if(h&&d&&d.height>0||u&&d&&i(d)){t===null&&(t=new lc(r));const f=h?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,f),a.addEventListener("dispose",s),f.texture}else return null}}}return a}function i(a){let l=0;const h=6;for(let u=0;u<h;u++)a[u]!==void 0&&l++;return l===h}function s(a){const l=a.target;l.removeEventListener("dispose",s);const h=e.get(l);h!==void 0&&(e.delete(l),h.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function Cm(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Rm(r,e,t,n){const i={},s=new WeakMap;function o(d){const f=d.target;f.index!==null&&e.remove(f.index);for(const _ in f.attributes)e.remove(f.attributes[_]);f.removeEventListener("dispose",o),delete i[f.id];const p=s.get(f);p&&(e.remove(p),s.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(d,f){return i[f.id]===!0||(f.addEventListener("dispose",o),i[f.id]=!0,t.memory.geometries++),f}function l(d){const f=d.attributes;for(const _ in f)e.update(f[_],r.ARRAY_BUFFER);const p=d.morphAttributes;for(const _ in p){const g=p[_];for(let m=0,b=g.length;m<b;m++)e.update(g[m],r.ARRAY_BUFFER)}}function h(d){const f=[],p=d.index,_=d.attributes.position;let g=0;if(p!==null){const C=p.array;g=p.version;for(let E=0,S=C.length;E<S;E+=3){const R=C[E+0],O=C[E+1],B=C[E+2];f.push(R,O,O,B,B,R)}}else{const C=_.array;g=_.version;for(let E=0,S=C.length/3-1;E<S;E+=3){const R=E+0,O=E+1,B=E+2;f.push(R,O,O,B,B,R)}}const m=new(sh(f)?jl:Kl)(f,1);m.version=g;const b=s.get(d);b&&e.remove(b),s.set(d,m)}function u(d){const f=s.get(d);if(f){const p=d.index;p!==null&&f.version<p.version&&h(d)}else h(d);return s.get(d)}return{get:a,update:l,getWireframeAttribute:u}}function Lm(r,e,t,n){const i=n.isWebGL2;let s;function o(f){s=f}let a,l;function h(f){a=f.type,l=f.bytesPerElement}function u(f,p){r.drawElements(s,p,a,f*l),t.update(p,s,1)}function d(f,p,_){if(_===0)return;let g,m;if(i)g=r,m="drawElementsInstanced";else if(g=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[m](s,p,a,f*l,_),t.update(p,s,_)}this.setMode=o,this.setIndex=h,this.render=u,this.renderInstances=d}function Pm(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case r.TRIANGLES:t.triangles+=a*(s/3);break;case r.LINES:t.lines+=a*(s/2);break;case r.LINE_STRIP:t.lines+=a*(s-1);break;case r.LINE_LOOP:t.lines+=a*s;break;case r.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Im(r,e){return r[0]-e[0]}function Dm(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Om(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,o=new xt,a=[];for(let h=0;h<8;h++)a[h]=[h,0];function l(h,u,d,f){const p=h.morphTargetInfluences;if(e.isWebGL2===!0){const _=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,g=_!==void 0?_.length:0;let m=s.get(u);if(m===void 0||m.count!==g){let Q=function(){Z.dispose(),s.delete(u),u.removeEventListener("dispose",Q)};m!==void 0&&m.texture.dispose();const E=u.morphAttributes.position!==void 0,S=u.morphAttributes.normal!==void 0,R=u.morphAttributes.color!==void 0,O=u.morphAttributes.position||[],B=u.morphAttributes.normal||[],A=u.morphAttributes.color||[];let F=0;E===!0&&(F=1),S===!0&&(F=2),R===!0&&(F=3);let z=u.attributes.position.count*F,X=1;z>e.maxTextureSize&&(X=Math.ceil(z/e.maxTextureSize),z=e.maxTextureSize);const he=new Float32Array(z*X*4*g),Z=new yo(he,z,X,g);Z.type=Bn,Z.needsUpdate=!0;const G=F*4;for(let ae=0;ae<g;ae++){const de=O[ae],ie=B[ae],me=A[ae],ce=z*X*4*ae;for(let $=0;$<de.count;$++){const J=$*G;E===!0&&(o.fromBufferAttribute(de,$),he[ce+J+0]=o.x,he[ce+J+1]=o.y,he[ce+J+2]=o.z,he[ce+J+3]=0),S===!0&&(o.fromBufferAttribute(ie,$),he[ce+J+4]=o.x,he[ce+J+5]=o.y,he[ce+J+6]=o.z,he[ce+J+7]=0),R===!0&&(o.fromBufferAttribute(me,$),he[ce+J+8]=o.x,he[ce+J+9]=o.y,he[ce+J+10]=o.z,he[ce+J+11]=me.itemSize===4?o.w:1)}}m={count:g,texture:Z,size:new oe(z,X)},s.set(u,m),u.addEventListener("dispose",Q)}let b=0;for(let E=0;E<p.length;E++)b+=p[E];const C=u.morphTargetsRelative?1:1-b;f.getUniforms().setValue(r,"morphTargetBaseInfluence",C),f.getUniforms().setValue(r,"morphTargetInfluences",p),f.getUniforms().setValue(r,"morphTargetsTexture",m.texture,t),f.getUniforms().setValue(r,"morphTargetsTextureSize",m.size)}else{const _=p===void 0?0:p.length;let g=n[u.id];if(g===void 0||g.length!==_){g=[];for(let S=0;S<_;S++)g[S]=[S,0];n[u.id]=g}for(let S=0;S<_;S++){const R=g[S];R[0]=S,R[1]=p[S]}g.sort(Dm);for(let S=0;S<8;S++)S<_&&g[S][1]?(a[S][0]=g[S][0],a[S][1]=g[S][1]):(a[S][0]=Number.MAX_SAFE_INTEGER,a[S][1]=0);a.sort(Im);const m=u.morphAttributes.position,b=u.morphAttributes.normal;let C=0;for(let S=0;S<8;S++){const R=a[S],O=R[0],B=R[1];O!==Number.MAX_SAFE_INTEGER&&B?(m&&u.getAttribute("morphTarget"+S)!==m[O]&&u.setAttribute("morphTarget"+S,m[O]),b&&u.getAttribute("morphNormal"+S)!==b[O]&&u.setAttribute("morphNormal"+S,b[O]),i[S]=B,C+=B):(m&&u.hasAttribute("morphTarget"+S)===!0&&u.deleteAttribute("morphTarget"+S),b&&u.hasAttribute("morphNormal"+S)===!0&&u.deleteAttribute("morphNormal"+S),i[S]=0)}const E=u.morphTargetsRelative?1:1-C;f.getUniforms().setValue(r,"morphTargetBaseInfluence",E),f.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:l}}function Nm(r,e,t,n){let i=new WeakMap;function s(l){const h=n.render.frame,u=l.geometry,d=e.get(l,u);return i.get(d)!==h&&(e.update(d),i.set(d,h)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,r.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,r.ARRAY_BUFFER)),d}function o(){i=new WeakMap}function a(l){const h=l.target;h.removeEventListener("dispose",a),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:o}}const Ah=new Ht,Ch=new yo,Rh=new xa,Lh=new To,Ph=[],Ih=[],Dh=new Float32Array(16),Oh=new Float32Array(9),Nh=new Float32Array(4);function Hr(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Ph[i];if(s===void 0&&(s=new Float32Array(i),Ph[i]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,r[o].toArray(s,a)}return s}function $t(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function Kt(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function Ga(r,e){let t=Ih[e];t===void 0&&(t=new Int32Array(e),Ih[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function Fm(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function Um(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if($t(t,e))return;r.uniform2fv(this.addr,e),Kt(t,e)}}function Bm(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if($t(t,e))return;r.uniform3fv(this.addr,e),Kt(t,e)}}function zm(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if($t(t,e))return;r.uniform4fv(this.addr,e),Kt(t,e)}}function km(r,e){const t=this.cache,n=e.elements;if(n===void 0){if($t(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Kt(t,e)}else{if($t(t,n))return;Nh.set(n),r.uniformMatrix2fv(this.addr,!1,Nh),Kt(t,n)}}function Hm(r,e){const t=this.cache,n=e.elements;if(n===void 0){if($t(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Kt(t,e)}else{if($t(t,n))return;Oh.set(n),r.uniformMatrix3fv(this.addr,!1,Oh),Kt(t,n)}}function Gm(r,e){const t=this.cache,n=e.elements;if(n===void 0){if($t(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Kt(t,e)}else{if($t(t,n))return;Dh.set(n),r.uniformMatrix4fv(this.addr,!1,Dh),Kt(t,n)}}function Vm(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function Wm(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if($t(t,e))return;r.uniform2iv(this.addr,e),Kt(t,e)}}function Xm(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if($t(t,e))return;r.uniform3iv(this.addr,e),Kt(t,e)}}function qm(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if($t(t,e))return;r.uniform4iv(this.addr,e),Kt(t,e)}}function Ym(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function Zm(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if($t(t,e))return;r.uniform2uiv(this.addr,e),Kt(t,e)}}function Jm(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if($t(t,e))return;r.uniform3uiv(this.addr,e),Kt(t,e)}}function $m(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if($t(t,e))return;r.uniform4uiv(this.addr,e),Kt(t,e)}}function Km(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||Ah,i)}function jm(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Rh,i)}function Qm(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Lh,i)}function eg(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Ch,i)}function tg(r){switch(r){case 5126:return Fm;case 35664:return Um;case 35665:return Bm;case 35666:return zm;case 35674:return km;case 35675:return Hm;case 35676:return Gm;case 5124:case 35670:return Vm;case 35667:case 35671:return Wm;case 35668:case 35672:return Xm;case 35669:case 35673:return qm;case 5125:return Ym;case 36294:return Zm;case 36295:return Jm;case 36296:return $m;case 35678:case 36198:case 36298:case 36306:case 35682:return Km;case 35679:case 36299:case 36307:return jm;case 35680:case 36300:case 36308:case 36293:return Qm;case 36289:case 36303:case 36311:case 36292:return eg}}function ng(r,e){r.uniform1fv(this.addr,e)}function ig(r,e){const t=Hr(e,this.size,2);r.uniform2fv(this.addr,t)}function sg(r,e){const t=Hr(e,this.size,3);r.uniform3fv(this.addr,t)}function rg(r,e){const t=Hr(e,this.size,4);r.uniform4fv(this.addr,t)}function og(r,e){const t=Hr(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function ag(r,e){const t=Hr(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function lg(r,e){const t=Hr(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function cg(r,e){r.uniform1iv(this.addr,e)}function hg(r,e){r.uniform2iv(this.addr,e)}function ug(r,e){r.uniform3iv(this.addr,e)}function dg(r,e){r.uniform4iv(this.addr,e)}function fg(r,e){r.uniform1uiv(this.addr,e)}function pg(r,e){r.uniform2uiv(this.addr,e)}function mg(r,e){r.uniform3uiv(this.addr,e)}function gg(r,e){r.uniform4uiv(this.addr,e)}function _g(r,e,t){const n=this.cache,i=e.length,s=Ga(t,i);$t(n,s)||(r.uniform1iv(this.addr,s),Kt(n,s));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||Ah,s[o])}function vg(r,e,t){const n=this.cache,i=e.length,s=Ga(t,i);$t(n,s)||(r.uniform1iv(this.addr,s),Kt(n,s));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||Rh,s[o])}function xg(r,e,t){const n=this.cache,i=e.length,s=Ga(t,i);$t(n,s)||(r.uniform1iv(this.addr,s),Kt(n,s));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||Lh,s[o])}function yg(r,e,t){const n=this.cache,i=e.length,s=Ga(t,i);$t(n,s)||(r.uniform1iv(this.addr,s),Kt(n,s));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||Ch,s[o])}function Mg(r){switch(r){case 5126:return ng;case 35664:return ig;case 35665:return sg;case 35666:return rg;case 35674:return og;case 35675:return ag;case 35676:return lg;case 5124:case 35670:return cg;case 35667:case 35671:return hg;case 35668:case 35672:return ug;case 35669:case 35673:return dg;case 5125:return fg;case 36294:return pg;case 36295:return mg;case 36296:return gg;case 35678:case 36198:case 36298:case 36306:case 35682:return _g;case 35679:case 36299:case 36307:return vg;case 35680:case 36300:case 36308:case 36293:return xg;case 36289:case 36303:case 36311:case 36292:return yg}}class bg{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=tg(t.type)}}class wg{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=Mg(t.type)}}class Sg{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,o=i.length;s!==o;++s){const a=i[s];a.setValue(e,t[a.id],n)}}}const hc=/(\w+)(\])?(\[|\.)?/g;function Fh(r,e){r.seq.push(e),r.map[e.id]=e}function Eg(r,e,t){const n=r.name,i=n.length;for(hc.lastIndex=0;;){const s=hc.exec(n),o=hc.lastIndex;let a=s[1];const l=s[2]==="]",h=s[3];if(l&&(a=a|0),h===void 0||h==="["&&o+2===i){Fh(t,h===void 0?new bg(a,r,e):new wg(a,r,e));break}else{let d=t.map[a];d===void 0&&(d=new Sg(a),Fh(t,d)),t=d}}}class Va{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),o=e.getUniformLocation(t,s.name);Eg(s,o,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function Uh(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let Tg=0;function Ag(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=i;o<s;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}function Cg(r){switch(r){case un:return["Linear","( value )"];case bt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function Bh(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+Ag(r.getShaderSource(e),o)}else return i}function Rg(r,e){const t=Cg(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function Lg(r,e){let t;switch(e){case lr:t="Linear";break;case no:t="Reinhard";break;case io:t="OptimizedCineon";break;case ki:t="ACESFilmic";break;case so:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Pg(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ao).join(`
`)}function Ig(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function Dg(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),o=s.name;let a=1;s.type===r.FLOAT_MAT2&&(a=2),s.type===r.FLOAT_MAT3&&(a=3),s.type===r.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:a}}return t}function Ao(r){return r!==""}function zh(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function kh(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Og=/^[ \t]*#include +<([\w\d./]+)>/gm;function uc(r){return r.replace(Og,Ng)}function Ng(r,e){const t=nt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return uc(t)}const Fg=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Hh(r){return r.replace(Fg,Ug)}function Ug(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Gh(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Bg(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===it?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===Fi?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===we&&(e="SHADOWMAP_TYPE_VSM"),e}function zg(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Sn:case si:e="ENVMAP_TYPE_CUBE";break;case _i:e="ENVMAP_TYPE_CUBE_UV";break}return e}function kg(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case si:e="ENVMAP_MODE_REFRACTION";break}return e}function Hg(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case vs:e="ENVMAP_BLENDING_MULTIPLY";break;case to:e="ENVMAP_BLENDING_MIX";break;case ar:e="ENVMAP_BLENDING_ADD";break}return e}function Gg(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Vg(r,e,t,n){const i=r.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=Bg(t),h=zg(t),u=kg(t),d=Hg(t),f=Gg(t),p=t.isWebGL2?"":Pg(t),_=Ig(s),g=i.createProgram();let m,b,C=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=[_].filter(Ao).join(`
`),m.length>0&&(m+=`
`),b=[p,_].filter(Ao).join(`
`),b.length>0&&(b+=`
`)):(m=[Gh(t),"#define SHADER_NAME "+t.shaderName,_,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ao).join(`
`),b=[p,Gh(t),"#define SHADER_NAME "+t.shaderName,_,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",t.envMap?"#define "+d:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Cn?"#define TONE_MAPPING":"",t.toneMapping!==Cn?nt.tonemapping_pars_fragment:"",t.toneMapping!==Cn?Lg("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",nt.encodings_pars_fragment,Rg("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Ao).join(`
`)),o=uc(o),o=zh(o,t),o=kh(o,t),a=uc(a),a=zh(a,t),a=kh(a,t),o=Hh(o),a=Hh(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(C=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,b=["#define varying in",t.glslVersion===N?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===N?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+b);const E=C+m+o,S=C+b+a,R=Uh(i,i.VERTEX_SHADER,E),O=Uh(i,i.FRAGMENT_SHADER,S);if(i.attachShader(g,R),i.attachShader(g,O),t.index0AttributeName!==void 0?i.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),r.debug.checkShaderErrors){const F=i.getProgramInfoLog(g).trim(),z=i.getShaderInfoLog(R).trim(),X=i.getShaderInfoLog(O).trim();let he=!0,Z=!0;if(i.getProgramParameter(g,i.LINK_STATUS)===!1){he=!1;const G=Bh(i,R,"vertex"),Q=Bh(i,O,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,i.VALIDATE_STATUS)+`

Program Info Log: `+F+`
`+G+`
`+Q)}else F!==""?console.warn("THREE.WebGLProgram: Program Info Log:",F):(z===""||X==="")&&(Z=!1);Z&&(this.diagnostics={runnable:he,programLog:F,vertexShader:{log:z,prefix:m},fragmentShader:{log:X,prefix:b}})}i.deleteShader(R),i.deleteShader(O);let B;this.getUniforms=function(){return B===void 0&&(B=new Va(i,g)),B};let A;return this.getAttributes=function(){return A===void 0&&(A=Dg(i,g)),A},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=t.shaderName,this.id=Tg++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=R,this.fragmentShader=O,this}let Wg=0;class Xg{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new qg(e),t.set(e,n)),n}}class qg{constructor(e){this.id=Wg++,this.code=e,this.usedTimes=0}}function Yg(r,e,t,n,i,s,o){const a=new Ea,l=new Xg,h=[],u=i.isWebGL2,d=i.logarithmicDepthBuffer,f=i.vertexTextures;let p=i.precision;const _={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(A,F,z,X,he){const Z=X.fog,G=he.geometry,Q=A.isMeshStandardMaterial?X.environment:null,ae=(A.isMeshStandardMaterial?t:e).get(A.envMap||Q),de=ae&&ae.mapping===_i?ae.image.height:null,ie=_[A.type];A.precision!==null&&(p=i.getMaxPrecision(A.precision),p!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",p,"instead."));const me=G.morphAttributes.position||G.morphAttributes.normal||G.morphAttributes.color,ce=me!==void 0?me.length:0;let $=0;G.morphAttributes.position!==void 0&&($=1),G.morphAttributes.normal!==void 0&&($=2),G.morphAttributes.color!==void 0&&($=3);let J,ye,ge,be;if(ie){const ot=ei[ie];J=ot.vertexShader,ye=ot.fragmentShader}else J=A.vertexShader,ye=A.fragmentShader,l.update(A),ge=l.getVertexShaderID(A),be=l.getFragmentShaderID(A);const H=r.getRenderTarget(),Je=A.alphaTest>0,Le=A.clearcoat>0,Ye=A.iridescence>0;return{isWebGL2:u,shaderID:ie,shaderName:A.type,vertexShader:J,fragmentShader:ye,defines:A.defines,customVertexShaderID:ge,customFragmentShaderID:be,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:p,instancing:he.isInstancedMesh===!0,instancingColor:he.isInstancedMesh===!0&&he.instanceColor!==null,supportsVertexTextures:f,outputEncoding:H===null?r.outputEncoding:H.isXRRenderTarget===!0?H.texture.encoding:un,map:!!A.map,matcap:!!A.matcap,envMap:!!ae,envMapMode:ae&&ae.mapping,envMapCubeUVHeight:de,lightMap:!!A.lightMap,aoMap:!!A.aoMap,emissiveMap:!!A.emissiveMap,bumpMap:!!A.bumpMap,normalMap:!!A.normalMap,objectSpaceNormalMap:A.normalMapType===fa,tangentSpaceNormalMap:A.normalMapType===di,decodeVideoTexture:!!A.map&&A.map.isVideoTexture===!0&&A.map.encoding===bt,clearcoat:Le,clearcoatMap:Le&&!!A.clearcoatMap,clearcoatRoughnessMap:Le&&!!A.clearcoatRoughnessMap,clearcoatNormalMap:Le&&!!A.clearcoatNormalMap,iridescence:Ye,iridescenceMap:Ye&&!!A.iridescenceMap,iridescenceThicknessMap:Ye&&!!A.iridescenceThicknessMap,displacementMap:!!A.displacementMap,roughnessMap:!!A.roughnessMap,metalnessMap:!!A.metalnessMap,specularMap:!!A.specularMap,specularIntensityMap:!!A.specularIntensityMap,specularColorMap:!!A.specularColorMap,opaque:A.transparent===!1&&A.blending===zt,alphaMap:!!A.alphaMap,alphaTest:Je,gradientMap:!!A.gradientMap,sheen:A.sheen>0,sheenColorMap:!!A.sheenColorMap,sheenRoughnessMap:!!A.sheenRoughnessMap,transmission:A.transmission>0,transmissionMap:!!A.transmissionMap,thicknessMap:!!A.thicknessMap,combine:A.combine,vertexTangents:!!A.normalMap&&!!G.attributes.tangent,vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!G.attributes.color&&G.attributes.color.itemSize===4,vertexUvs:!!A.map||!!A.bumpMap||!!A.normalMap||!!A.specularMap||!!A.alphaMap||!!A.emissiveMap||!!A.roughnessMap||!!A.metalnessMap||!!A.clearcoatMap||!!A.clearcoatRoughnessMap||!!A.clearcoatNormalMap||!!A.iridescenceMap||!!A.iridescenceThicknessMap||!!A.displacementMap||!!A.transmissionMap||!!A.thicknessMap||!!A.specularIntensityMap||!!A.specularColorMap||!!A.sheenColorMap||!!A.sheenRoughnessMap,uvsVertexOnly:!(A.map||A.bumpMap||A.normalMap||A.specularMap||A.alphaMap||A.emissiveMap||A.roughnessMap||A.metalnessMap||A.clearcoatNormalMap||A.iridescenceMap||A.iridescenceThicknessMap||A.transmission>0||A.transmissionMap||A.thicknessMap||A.specularIntensityMap||A.specularColorMap||A.sheen>0||A.sheenColorMap||A.sheenRoughnessMap)&&!!A.displacementMap,fog:!!Z,useFog:A.fog===!0,fogExp2:Z&&Z.isFogExp2,flatShading:!!A.flatShading,sizeAttenuation:A.sizeAttenuation,logarithmicDepthBuffer:d,skinning:he.isSkinnedMesh===!0,morphTargets:G.morphAttributes.position!==void 0,morphNormals:G.morphAttributes.normal!==void 0,morphColors:G.morphAttributes.color!==void 0,morphTargetsCount:ce,morphTextureStride:$,numDirLights:F.directional.length,numPointLights:F.point.length,numSpotLights:F.spot.length,numSpotLightMaps:F.spotLightMap.length,numRectAreaLights:F.rectArea.length,numHemiLights:F.hemi.length,numDirLightShadows:F.directionalShadowMap.length,numPointLightShadows:F.pointShadowMap.length,numSpotLightShadows:F.spotShadowMap.length,numSpotLightShadowsWithMaps:F.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:A.dithering,shadowMapEnabled:r.shadowMap.enabled&&z.length>0,shadowMapType:r.shadowMap.type,toneMapping:A.toneMapped?r.toneMapping:Cn,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===wn,flipSided:A.side===_t,useDepthPacking:!!A.depthPacking,depthPacking:A.depthPacking||0,index0AttributeName:A.index0AttributeName,extensionDerivatives:A.extensions&&A.extensions.derivatives,extensionFragDepth:A.extensions&&A.extensions.fragDepth,extensionDrawBuffers:A.extensions&&A.extensions.drawBuffers,extensionShaderTextureLOD:A.extensions&&A.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:A.customProgramCacheKey()}}function m(A){const F=[];if(A.shaderID?F.push(A.shaderID):(F.push(A.customVertexShaderID),F.push(A.customFragmentShaderID)),A.defines!==void 0)for(const z in A.defines)F.push(z),F.push(A.defines[z]);return A.isRawShaderMaterial===!1&&(b(F,A),C(F,A),F.push(r.outputEncoding)),F.push(A.customProgramCacheKey),F.join()}function b(A,F){A.push(F.precision),A.push(F.outputEncoding),A.push(F.envMapMode),A.push(F.envMapCubeUVHeight),A.push(F.combine),A.push(F.vertexUvs),A.push(F.fogExp2),A.push(F.sizeAttenuation),A.push(F.morphTargetsCount),A.push(F.morphAttributeCount),A.push(F.numDirLights),A.push(F.numPointLights),A.push(F.numSpotLights),A.push(F.numSpotLightMaps),A.push(F.numHemiLights),A.push(F.numRectAreaLights),A.push(F.numDirLightShadows),A.push(F.numPointLightShadows),A.push(F.numSpotLightShadows),A.push(F.numSpotLightShadowsWithMaps),A.push(F.shadowMapType),A.push(F.toneMapping),A.push(F.numClippingPlanes),A.push(F.numClipIntersection),A.push(F.depthPacking)}function C(A,F){a.disableAll(),F.isWebGL2&&a.enable(0),F.supportsVertexTextures&&a.enable(1),F.instancing&&a.enable(2),F.instancingColor&&a.enable(3),F.map&&a.enable(4),F.matcap&&a.enable(5),F.envMap&&a.enable(6),F.lightMap&&a.enable(7),F.aoMap&&a.enable(8),F.emissiveMap&&a.enable(9),F.bumpMap&&a.enable(10),F.normalMap&&a.enable(11),F.objectSpaceNormalMap&&a.enable(12),F.tangentSpaceNormalMap&&a.enable(13),F.clearcoat&&a.enable(14),F.clearcoatMap&&a.enable(15),F.clearcoatRoughnessMap&&a.enable(16),F.clearcoatNormalMap&&a.enable(17),F.iridescence&&a.enable(18),F.iridescenceMap&&a.enable(19),F.iridescenceThicknessMap&&a.enable(20),F.displacementMap&&a.enable(21),F.specularMap&&a.enable(22),F.roughnessMap&&a.enable(23),F.metalnessMap&&a.enable(24),F.gradientMap&&a.enable(25),F.alphaMap&&a.enable(26),F.alphaTest&&a.enable(27),F.vertexColors&&a.enable(28),F.vertexAlphas&&a.enable(29),F.vertexUvs&&a.enable(30),F.vertexTangents&&a.enable(31),F.uvsVertexOnly&&a.enable(32),A.push(a.mask),a.disableAll(),F.fog&&a.enable(0),F.useFog&&a.enable(1),F.flatShading&&a.enable(2),F.logarithmicDepthBuffer&&a.enable(3),F.skinning&&a.enable(4),F.morphTargets&&a.enable(5),F.morphNormals&&a.enable(6),F.morphColors&&a.enable(7),F.premultipliedAlpha&&a.enable(8),F.shadowMapEnabled&&a.enable(9),F.physicallyCorrectLights&&a.enable(10),F.doubleSided&&a.enable(11),F.flipSided&&a.enable(12),F.useDepthPacking&&a.enable(13),F.dithering&&a.enable(14),F.specularIntensityMap&&a.enable(15),F.specularColorMap&&a.enable(16),F.transmission&&a.enable(17),F.transmissionMap&&a.enable(18),F.thicknessMap&&a.enable(19),F.sheen&&a.enable(20),F.sheenColorMap&&a.enable(21),F.sheenRoughnessMap&&a.enable(22),F.decodeVideoTexture&&a.enable(23),F.opaque&&a.enable(24),A.push(a.mask)}function E(A){const F=_[A.type];let z;if(F){const X=ei[F];z=_h.clone(X.uniforms)}else z=A.uniforms;return z}function S(A,F){let z;for(let X=0,he=h.length;X<he;X++){const Z=h[X];if(Z.cacheKey===F){z=Z,++z.usedTimes;break}}return z===void 0&&(z=new Vg(r,F,A,s),h.push(z)),z}function R(A){if(--A.usedTimes===0){const F=h.indexOf(A);h[F]=h[h.length-1],h.pop(),A.destroy()}}function O(A){l.remove(A)}function B(){l.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:E,acquireProgram:S,releaseProgram:R,releaseShaderCache:O,programs:h,dispose:B}}function Zg(){let r=new WeakMap;function e(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function t(s){r.delete(s)}function n(s,o,a){r.get(s)[o]=a}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function Jg(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Vh(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Wh(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function o(d,f,p,_,g,m){let b=r[e];return b===void 0?(b={id:d.id,object:d,geometry:f,material:p,groupOrder:_,renderOrder:d.renderOrder,z:g,group:m},r[e]=b):(b.id=d.id,b.object=d,b.geometry=f,b.material=p,b.groupOrder=_,b.renderOrder=d.renderOrder,b.z=g,b.group=m),e++,b}function a(d,f,p,_,g,m){const b=o(d,f,p,_,g,m);p.transmission>0?n.push(b):p.transparent===!0?i.push(b):t.push(b)}function l(d,f,p,_,g,m){const b=o(d,f,p,_,g,m);p.transmission>0?n.unshift(b):p.transparent===!0?i.unshift(b):t.unshift(b)}function h(d,f){t.length>1&&t.sort(d||Jg),n.length>1&&n.sort(f||Vh),i.length>1&&i.sort(f||Vh)}function u(){for(let d=e,f=r.length;d<f;d++){const p=r[d];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:a,unshift:l,finish:u,sort:h}}function $g(){let r=new WeakMap;function e(n,i){const s=r.get(n);let o;return s===void 0?(o=new Wh,r.set(n,[o])):i>=s.length?(o=new Wh,s.push(o)):o=s[i],o}function t(){r=new WeakMap}return{get:e,dispose:t}}function Kg(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new Ae};break;case"SpotLight":t={position:new D,direction:new D,color:new Ae,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new Ae,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new Ae,groundColor:new Ae};break;case"RectAreaLight":t={color:new Ae,position:new D,halfWidth:new D,halfHeight:new D};break}return r[e.id]=t,t}}}function jg(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new oe};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new oe};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new oe,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let Qg=0;function e_(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function t_(r,e){const t=new Kg,n=jg(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)i.probe.push(new D);const s=new D,o=new Qe,a=new Qe;function l(u,d){let f=0,p=0,_=0;for(let X=0;X<9;X++)i.probe[X].set(0,0,0);let g=0,m=0,b=0,C=0,E=0,S=0,R=0,O=0,B=0,A=0;u.sort(e_);const F=d!==!0?Math.PI:1;for(let X=0,he=u.length;X<he;X++){const Z=u[X],G=Z.color,Q=Z.intensity,ae=Z.distance,de=Z.shadow&&Z.shadow.map?Z.shadow.map.texture:null;if(Z.isAmbientLight)f+=G.r*Q*F,p+=G.g*Q*F,_+=G.b*Q*F;else if(Z.isLightProbe)for(let ie=0;ie<9;ie++)i.probe[ie].addScaledVector(Z.sh.coefficients[ie],Q);else if(Z.isDirectionalLight){const ie=t.get(Z);if(ie.color.copy(Z.color).multiplyScalar(Z.intensity*F),Z.castShadow){const me=Z.shadow,ce=n.get(Z);ce.shadowBias=me.bias,ce.shadowNormalBias=me.normalBias,ce.shadowRadius=me.radius,ce.shadowMapSize=me.mapSize,i.directionalShadow[g]=ce,i.directionalShadowMap[g]=de,i.directionalShadowMatrix[g]=Z.shadow.matrix,S++}i.directional[g]=ie,g++}else if(Z.isSpotLight){const ie=t.get(Z);ie.position.setFromMatrixPosition(Z.matrixWorld),ie.color.copy(G).multiplyScalar(Q*F),ie.distance=ae,ie.coneCos=Math.cos(Z.angle),ie.penumbraCos=Math.cos(Z.angle*(1-Z.penumbra)),ie.decay=Z.decay,i.spot[b]=ie;const me=Z.shadow;if(Z.map&&(i.spotLightMap[B]=Z.map,B++,me.updateMatrices(Z),Z.castShadow&&A++),i.spotLightMatrix[b]=me.matrix,Z.castShadow){const ce=n.get(Z);ce.shadowBias=me.bias,ce.shadowNormalBias=me.normalBias,ce.shadowRadius=me.radius,ce.shadowMapSize=me.mapSize,i.spotShadow[b]=ce,i.spotShadowMap[b]=de,O++}b++}else if(Z.isRectAreaLight){const ie=t.get(Z);ie.color.copy(G).multiplyScalar(Q),ie.halfWidth.set(Z.width*.5,0,0),ie.halfHeight.set(0,Z.height*.5,0),i.rectArea[C]=ie,C++}else if(Z.isPointLight){const ie=t.get(Z);if(ie.color.copy(Z.color).multiplyScalar(Z.intensity*F),ie.distance=Z.distance,ie.decay=Z.decay,Z.castShadow){const me=Z.shadow,ce=n.get(Z);ce.shadowBias=me.bias,ce.shadowNormalBias=me.normalBias,ce.shadowRadius=me.radius,ce.shadowMapSize=me.mapSize,ce.shadowCameraNear=me.camera.near,ce.shadowCameraFar=me.camera.far,i.pointShadow[m]=ce,i.pointShadowMap[m]=de,i.pointShadowMatrix[m]=Z.shadow.matrix,R++}i.point[m]=ie,m++}else if(Z.isHemisphereLight){const ie=t.get(Z);ie.skyColor.copy(Z.color).multiplyScalar(Q*F),ie.groundColor.copy(Z.groundColor).multiplyScalar(Q*F),i.hemi[E]=ie,E++}}C>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=xe.LTC_FLOAT_1,i.rectAreaLTC2=xe.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=xe.LTC_HALF_1,i.rectAreaLTC2=xe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=f,i.ambient[1]=p,i.ambient[2]=_;const z=i.hash;(z.directionalLength!==g||z.pointLength!==m||z.spotLength!==b||z.rectAreaLength!==C||z.hemiLength!==E||z.numDirectionalShadows!==S||z.numPointShadows!==R||z.numSpotShadows!==O||z.numSpotMaps!==B)&&(i.directional.length=g,i.spot.length=b,i.rectArea.length=C,i.point.length=m,i.hemi.length=E,i.directionalShadow.length=S,i.directionalShadowMap.length=S,i.pointShadow.length=R,i.pointShadowMap.length=R,i.spotShadow.length=O,i.spotShadowMap.length=O,i.directionalShadowMatrix.length=S,i.pointShadowMatrix.length=R,i.spotLightMatrix.length=O+B-A,i.spotLightMap.length=B,i.numSpotLightShadowsWithMaps=A,z.directionalLength=g,z.pointLength=m,z.spotLength=b,z.rectAreaLength=C,z.hemiLength=E,z.numDirectionalShadows=S,z.numPointShadows=R,z.numSpotShadows=O,z.numSpotMaps=B,i.version=Qg++)}function h(u,d){let f=0,p=0,_=0,g=0,m=0;const b=d.matrixWorldInverse;for(let C=0,E=u.length;C<E;C++){const S=u[C];if(S.isDirectionalLight){const R=i.directional[f];R.direction.setFromMatrixPosition(S.matrixWorld),s.setFromMatrixPosition(S.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(b),f++}else if(S.isSpotLight){const R=i.spot[_];R.position.setFromMatrixPosition(S.matrixWorld),R.position.applyMatrix4(b),R.direction.setFromMatrixPosition(S.matrixWorld),s.setFromMatrixPosition(S.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(b),_++}else if(S.isRectAreaLight){const R=i.rectArea[g];R.position.setFromMatrixPosition(S.matrixWorld),R.position.applyMatrix4(b),a.identity(),o.copy(S.matrixWorld),o.premultiply(b),a.extractRotation(o),R.halfWidth.set(S.width*.5,0,0),R.halfHeight.set(0,S.height*.5,0),R.halfWidth.applyMatrix4(a),R.halfHeight.applyMatrix4(a),g++}else if(S.isPointLight){const R=i.point[p];R.position.setFromMatrixPosition(S.matrixWorld),R.position.applyMatrix4(b),p++}else if(S.isHemisphereLight){const R=i.hemi[m];R.direction.setFromMatrixPosition(S.matrixWorld),R.direction.transformDirection(b),m++}}}return{setup:l,setupView:h,state:i}}function Xh(r,e){const t=new t_(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function o(d){n.push(d)}function a(d){i.push(d)}function l(d){t.setup(n,d)}function h(d){t.setupView(n,d)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:l,setupLightsView:h,pushLight:o,pushShadow:a}}function n_(r,e){let t=new WeakMap;function n(s,o=0){const a=t.get(s);let l;return a===void 0?(l=new Xh(r,e),t.set(s,[l])):o>=a.length?(l=new Xh(r,e),a.push(l)):l=a[o],l}function i(){t=new WeakMap}return{get:n,dispose:i}}class dc extends pn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Qi,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class fc extends pn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new D,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const i_=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,s_=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function r_(r,e,t){let n=new Ba;const i=new oe,s=new oe,o=new xt,a=new dc({depthPacking:_o}),l=new fc,h={},u=t.maxTextureSize,d={0:_t,1:ze,2:wn},f=new pi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new oe},radius:{value:4}},vertexShader:i_,fragmentShader:s_}),p=f.clone();p.defines.HORIZONTAL_PASS=1;const _=new rt;_.setAttribute("position",new At(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new an(_,f),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=it,this.render=function(S,R,O){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||S.length===0)return;const B=r.getRenderTarget(),A=r.getActiveCubeFace(),F=r.getActiveMipmapLevel(),z=r.state;z.setBlending(wt),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);for(let X=0,he=S.length;X<he;X++){const Z=S[X],G=Z.shadow;if(G===void 0){console.warn("THREE.WebGLShadowMap:",Z,"has no shadow.");continue}if(G.autoUpdate===!1&&G.needsUpdate===!1)continue;i.copy(G.mapSize);const Q=G.getFrameExtents();if(i.multiply(Q),s.copy(G.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/Q.x),i.x=s.x*Q.x,G.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/Q.y),i.y=s.y*Q.y,G.mapSize.y=s.y)),G.map===null){const de=this.type!==we?{minFilter:It,magFilter:It}:{};G.map=new Hn(i.x,i.y,de),G.map.texture.name=Z.name+".shadowMap",G.camera.updateProjectionMatrix()}r.setRenderTarget(G.map),r.clear();const ae=G.getViewportCount();for(let de=0;de<ae;de++){const ie=G.getViewport(de);o.set(s.x*ie.x,s.y*ie.y,s.x*ie.z,s.y*ie.w),z.viewport(o),G.updateMatrices(Z,de),n=G.getFrustum(),E(R,O,G.camera,Z,this.type)}G.isPointLightShadow!==!0&&this.type===we&&b(G,O),G.needsUpdate=!1}m.needsUpdate=!1,r.setRenderTarget(B,A,F)};function b(S,R){const O=e.update(g);f.defines.VSM_SAMPLES!==S.blurSamples&&(f.defines.VSM_SAMPLES=S.blurSamples,p.defines.VSM_SAMPLES=S.blurSamples,f.needsUpdate=!0,p.needsUpdate=!0),S.mapPass===null&&(S.mapPass=new Hn(i.x,i.y)),f.uniforms.shadow_pass.value=S.map.texture,f.uniforms.resolution.value=S.mapSize,f.uniforms.radius.value=S.radius,r.setRenderTarget(S.mapPass),r.clear(),r.renderBufferDirect(R,null,O,f,g,null),p.uniforms.shadow_pass.value=S.mapPass.texture,p.uniforms.resolution.value=S.mapSize,p.uniforms.radius.value=S.radius,r.setRenderTarget(S.map),r.clear(),r.renderBufferDirect(R,null,O,p,g,null)}function C(S,R,O,B,A,F){let z=null;const X=O.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(X!==void 0?z=X:z=O.isPointLight===!0?l:a,r.localClippingEnabled&&R.clipShadows===!0&&Array.isArray(R.clippingPlanes)&&R.clippingPlanes.length!==0||R.displacementMap&&R.displacementScale!==0||R.alphaMap&&R.alphaTest>0||R.map&&R.alphaTest>0){const he=z.uuid,Z=R.uuid;let G=h[he];G===void 0&&(G={},h[he]=G);let Q=G[Z];Q===void 0&&(Q=z.clone(),G[Z]=Q),z=Q}return z.visible=R.visible,z.wireframe=R.wireframe,F===we?z.side=R.shadowSide!==null?R.shadowSide:R.side:z.side=R.shadowSide!==null?R.shadowSide:d[R.side],z.alphaMap=R.alphaMap,z.alphaTest=R.alphaTest,z.map=R.map,z.clipShadows=R.clipShadows,z.clippingPlanes=R.clippingPlanes,z.clipIntersection=R.clipIntersection,z.displacementMap=R.displacementMap,z.displacementScale=R.displacementScale,z.displacementBias=R.displacementBias,z.wireframeLinewidth=R.wireframeLinewidth,z.linewidth=R.linewidth,O.isPointLight===!0&&z.isMeshDistanceMaterial===!0&&(z.referencePosition.setFromMatrixPosition(O.matrixWorld),z.nearDistance=B,z.farDistance=A),z}function E(S,R,O,B,A){if(S.visible===!1)return;if(S.layers.test(R.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&A===we)&&(!S.frustumCulled||n.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(O.matrixWorldInverse,S.matrixWorld);const X=e.update(S),he=S.material;if(Array.isArray(he)){const Z=X.groups;for(let G=0,Q=Z.length;G<Q;G++){const ae=Z[G],de=he[ae.materialIndex];if(de&&de.visible){const ie=C(S,de,B,O.near,O.far,A);r.renderBufferDirect(O,null,X,ie,S,ae)}}}else if(he.visible){const Z=C(S,he,B,O.near,O.far,A);r.renderBufferDirect(O,null,X,Z,S,null)}}const z=S.children;for(let X=0,he=z.length;X<he;X++)E(z[X],R,O,B,A)}}function o_(r,e,t){const n=t.isWebGL2;function i(){let k=!1;const ee=new xt;let ue=null;const Ce=new xt(0,0,0,0);return{setMask:function(Oe){ue!==Oe&&!k&&(r.colorMask(Oe,Oe,Oe,Oe),ue=Oe)},setLocked:function(Oe){k=Oe},setClear:function(Oe,vt,tn,mn,js){js===!0&&(Oe*=mn,vt*=mn,tn*=mn),ee.set(Oe,vt,tn,mn),Ce.equals(ee)===!1&&(r.clearColor(Oe,vt,tn,mn),Ce.copy(ee))},reset:function(){k=!1,ue=null,Ce.set(-1,0,0,0)}}}function s(){let k=!1,ee=null,ue=null,Ce=null;return{setTest:function(Oe){Oe?Je(r.DEPTH_TEST):Le(r.DEPTH_TEST)},setMask:function(Oe){ee!==Oe&&!k&&(r.depthMask(Oe),ee=Oe)},setFunc:function(Oe){if(ue!==Oe){switch(Oe){case ra:r.depthFunc(r.NEVER);break;case oa:r.depthFunc(r.ALWAYS);break;case aa:r.depthFunc(r.LESS);break;case rr:r.depthFunc(r.LEQUAL);break;case eo:r.depthFunc(r.EQUAL);break;case la:r.depthFunc(r.GEQUAL);break;case zi:r.depthFunc(r.GREATER);break;case or:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}ue=Oe}},setLocked:function(Oe){k=Oe},setClear:function(Oe){Ce!==Oe&&(r.clearDepth(Oe),Ce=Oe)},reset:function(){k=!1,ee=null,ue=null,Ce=null}}}function o(){let k=!1,ee=null,ue=null,Ce=null,Oe=null,vt=null,tn=null,mn=null,js=null;return{setTest:function(Ot){k||(Ot?Je(r.STENCIL_TEST):Le(r.STENCIL_TEST))},setMask:function(Ot){ee!==Ot&&!k&&(r.stencilMask(Ot),ee=Ot)},setFunc:function(Ot,Ii,Xn){(ue!==Ot||Ce!==Ii||Oe!==Xn)&&(r.stencilFunc(Ot,Ii,Xn),ue=Ot,Ce=Ii,Oe=Xn)},setOp:function(Ot,Ii,Xn){(vt!==Ot||tn!==Ii||mn!==Xn)&&(r.stencilOp(Ot,Ii,Xn),vt=Ot,tn=Ii,mn=Xn)},setLocked:function(Ot){k=Ot},setClear:function(Ot){js!==Ot&&(r.clearStencil(Ot),js=Ot)},reset:function(){k=!1,ee=null,ue=null,Ce=null,Oe=null,vt=null,tn=null,mn=null,js=null}}}const a=new i,l=new s,h=new o,u=new WeakMap,d=new WeakMap;let f={},p={},_=new WeakMap,g=[],m=null,b=!1,C=null,E=null,S=null,R=null,O=null,B=null,A=null,F=!1,z=null,X=null,he=null,Z=null,G=null;const Q=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ae=!1,de=0;const ie=r.getParameter(r.VERSION);ie.indexOf("WebGL")!==-1?(de=parseFloat(/^WebGL (\d)/.exec(ie)[1]),ae=de>=1):ie.indexOf("OpenGL ES")!==-1&&(de=parseFloat(/^OpenGL ES (\d)/.exec(ie)[1]),ae=de>=2);let me=null,ce={};const $=r.getParameter(r.SCISSOR_BOX),J=r.getParameter(r.VIEWPORT),ye=new xt().fromArray($),ge=new xt().fromArray(J);function be(k,ee,ue){const Ce=new Uint8Array(4),Oe=r.createTexture();r.bindTexture(k,Oe),r.texParameteri(k,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(k,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let vt=0;vt<ue;vt++)r.texImage2D(ee+vt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Ce);return Oe}const H={};H[r.TEXTURE_2D]=be(r.TEXTURE_2D,r.TEXTURE_2D,1),H[r.TEXTURE_CUBE_MAP]=be(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),a.setClear(0,0,0,1),l.setClear(1),h.setClear(0),Je(r.DEPTH_TEST),l.setFunc(rr),Me(!1),$e(ii),Je(r.CULL_FACE),ve(wt);function Je(k){f[k]!==!0&&(r.enable(k),f[k]=!0)}function Le(k){f[k]!==!1&&(r.disable(k),f[k]=!1)}function Ye(k,ee){return p[k]!==ee?(r.bindFramebuffer(k,ee),p[k]=ee,n&&(k===r.DRAW_FRAMEBUFFER&&(p[r.FRAMEBUFFER]=ee),k===r.FRAMEBUFFER&&(p[r.DRAW_FRAMEBUFFER]=ee)),!0):!1}function Se(k,ee){let ue=g,Ce=!1;if(k)if(ue=_.get(ee),ue===void 0&&(ue=[],_.set(ee,ue)),k.isWebGLMultipleRenderTargets){const Oe=k.texture;if(ue.length!==Oe.length||ue[0]!==r.COLOR_ATTACHMENT0){for(let vt=0,tn=Oe.length;vt<tn;vt++)ue[vt]=r.COLOR_ATTACHMENT0+vt;ue.length=Oe.length,Ce=!0}}else ue[0]!==r.COLOR_ATTACHMENT0&&(ue[0]=r.COLOR_ATTACHMENT0,Ce=!0);else ue[0]!==r.BACK&&(ue[0]=r.BACK,Ce=!0);Ce&&(t.isWebGL2?r.drawBuffers(ue):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ue))}function ot(k){return m!==k?(r.useProgram(k),m=k,!0):!1}const re={[qe]:r.FUNC_ADD,[St]:r.FUNC_SUBTRACT,[sn]:r.FUNC_REVERSE_SUBTRACT};if(n)re[Et]=r.MIN,re[Mt]=r.MAX;else{const k=e.get("EXT_blend_minmax");k!==null&&(re[Et]=k.MIN_EXT,re[Mt]=k.MAX_EXT)}const se={[pe]:r.ZERO,[nr]:r.ONE,[Ui]:r.SRC_COLOR,[ir]:r.SRC_ALPHA,[sa]:r.SRC_ALPHA_SATURATE,[He]:r.DST_COLOR,[ia]:r.DST_ALPHA,[Vt]:r.ONE_MINUS_SRC_COLOR,[Ut]:r.ONE_MINUS_SRC_ALPHA,[sr]:r.ONE_MINUS_DST_COLOR,[Bi]:r.ONE_MINUS_DST_ALPHA};function ve(k,ee,ue,Ce,Oe,vt,tn,mn){if(k===wt){b===!0&&(Le(r.BLEND),b=!1);return}if(b===!1&&(Je(r.BLEND),b=!0),k!==et){if(k!==C||mn!==F){if((E!==qe||O!==qe)&&(r.blendEquation(r.FUNC_ADD),E=qe,O=qe),mn)switch(k){case zt:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case gn:r.blendFunc(r.ONE,r.ONE);break;case je:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Ft:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}else switch(k){case zt:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case gn:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case je:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Ft:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}S=null,R=null,B=null,A=null,C=k,F=mn}return}Oe=Oe||ee,vt=vt||ue,tn=tn||Ce,(ee!==E||Oe!==O)&&(r.blendEquationSeparate(re[ee],re[Oe]),E=ee,O=Oe),(ue!==S||Ce!==R||vt!==B||tn!==A)&&(r.blendFuncSeparate(se[ue],se[Ce],se[vt],se[tn]),S=ue,R=Ce,B=vt,A=tn),C=k,F=!1}function Ie(k,ee){k.side===wn?Le(r.CULL_FACE):Je(r.CULL_FACE);let ue=k.side===_t;ee&&(ue=!ue),Me(ue),k.blending===zt&&k.transparent===!1?ve(wt):ve(k.blending,k.blendEquation,k.blendSrc,k.blendDst,k.blendEquationAlpha,k.blendSrcAlpha,k.blendDstAlpha,k.premultipliedAlpha),l.setFunc(k.depthFunc),l.setTest(k.depthTest),l.setMask(k.depthWrite),a.setMask(k.colorWrite);const Ce=k.stencilWrite;h.setTest(Ce),Ce&&(h.setMask(k.stencilWriteMask),h.setFunc(k.stencilFunc,k.stencilRef,k.stencilFuncMask),h.setOp(k.stencilFail,k.stencilZFail,k.stencilZPass)),ke(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits),k.alphaToCoverage===!0?Je(r.SAMPLE_ALPHA_TO_COVERAGE):Le(r.SAMPLE_ALPHA_TO_COVERAGE)}function Me(k){z!==k&&(k?r.frontFace(r.CW):r.frontFace(r.CCW),z=k)}function $e(k){k!==Re?(Je(r.CULL_FACE),k!==X&&(k===ii?r.cullFace(r.BACK):k===_s?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Le(r.CULL_FACE),X=k}function Ge(k){k!==he&&(ae&&r.lineWidth(k),he=k)}function ke(k,ee,ue){k?(Je(r.POLYGON_OFFSET_FILL),(Z!==ee||G!==ue)&&(r.polygonOffset(ee,ue),Z=ee,G=ue)):Le(r.POLYGON_OFFSET_FILL)}function Lt(k){k?Je(r.SCISSOR_TEST):Le(r.SCISSOR_TEST)}function yt(k){k===void 0&&(k=r.TEXTURE0+Q-1),me!==k&&(r.activeTexture(k),me=k)}function U(k,ee,ue){ue===void 0&&(me===null?ue=r.TEXTURE0+Q-1:ue=me);let Ce=ce[ue];Ce===void 0&&(Ce={type:void 0,texture:void 0},ce[ue]=Ce),(Ce.type!==k||Ce.texture!==ee)&&(me!==ue&&(r.activeTexture(ue),me=ue),r.bindTexture(k,ee||H[k]),Ce.type=k,Ce.texture=ee)}function P(){const k=ce[me];k!==void 0&&k.type!==void 0&&(r.bindTexture(k.type,null),k.type=void 0,k.texture=void 0)}function Y(){try{r.compressedTexImage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function fe(){try{r.compressedTexImage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function _e(){try{r.texSubImage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Ee(){try{r.texSubImage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Ze(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Te(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ne(){try{r.texStorage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Fe(){try{r.texStorage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Xe(){try{r.texImage2D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function De(){try{r.texImage3D.apply(r,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Ve(k){ye.equals(k)===!1&&(r.scissor(k.x,k.y,k.z,k.w),ye.copy(k))}function Ue(k){ge.equals(k)===!1&&(r.viewport(k.x,k.y,k.z,k.w),ge.copy(k))}function mt(k,ee){let ue=d.get(ee);ue===void 0&&(ue=new WeakMap,d.set(ee,ue));let Ce=ue.get(k);Ce===void 0&&(Ce=r.getUniformBlockIndex(ee,k.name),ue.set(k,Ce))}function Dt(k,ee){const Ce=d.get(ee).get(k);u.get(k)!==Ce&&(r.uniformBlockBinding(ee,Ce,k.__bindingPointIndex),u.set(k,Ce))}function en(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),f={},me=null,ce={},p={},_=new WeakMap,g=[],m=null,b=!1,C=null,E=null,S=null,R=null,O=null,B=null,A=null,F=!1,z=null,X=null,he=null,Z=null,G=null,ye.set(0,0,r.canvas.width,r.canvas.height),ge.set(0,0,r.canvas.width,r.canvas.height),a.reset(),l.reset(),h.reset()}return{buffers:{color:a,depth:l,stencil:h},enable:Je,disable:Le,bindFramebuffer:Ye,drawBuffers:Se,useProgram:ot,setBlending:ve,setMaterial:Ie,setFlipSided:Me,setCullFace:$e,setLineWidth:Ge,setPolygonOffset:ke,setScissorTest:Lt,activeTexture:yt,bindTexture:U,unbindTexture:P,compressedTexImage2D:Y,compressedTexImage3D:fe,texImage2D:Xe,texImage3D:De,updateUBOMapping:mt,uniformBlockBinding:Dt,texStorage2D:ne,texStorage3D:Fe,texSubImage2D:_e,texSubImage3D:Ee,compressedTexSubImage2D:Ze,compressedTexSubImage3D:Te,scissor:Ve,viewport:Ue,reset:en}}function a_(r,e,t,n,i,s,o){const a=i.isWebGL2,l=i.maxTextures,h=i.maxCubemapSize,u=i.maxTextureSize,d=i.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),_=new WeakMap;let g;const m=new WeakMap;let b=!1;try{b=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function C(U,P){return b?new OffscreenCanvas(U,P):xo("canvas")}function E(U,P,Y,fe){let _e=1;if((U.width>fe||U.height>fe)&&(_e=fe/Math.max(U.width,U.height)),_e<1||P===!0)if(typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&U instanceof ImageBitmap){const Ee=P?ma:Math.floor,Ze=Ee(_e*U.width),Te=Ee(_e*U.height);g===void 0&&(g=C(Ze,Te));const ne=Y?C(Ze,Te):g;return ne.width=Ze,ne.height=Te,ne.getContext("2d").drawImage(U,0,0,Ze,Te),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+U.width+"x"+U.height+") to ("+Ze+"x"+Te+")."),ne}else return"data"in U&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+U.width+"x"+U.height+")."),U;return U}function S(U){return Ol(U.width)&&Ol(U.height)}function R(U){return a?!1:U.wrapS!==jt||U.wrapT!==jt||U.minFilter!==It&&U.minFilter!==st}function O(U,P){return U.generateMipmaps&&P&&U.minFilter!==It&&U.minFilter!==st}function B(U){r.generateMipmap(U)}function A(U,P,Y,fe,_e=!1){if(a===!1)return P;if(U!==null){if(r[U]!==void 0)return r[U];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+U+"'")}let Ee=P;return P===r.RED&&(Y===r.FLOAT&&(Ee=r.R32F),Y===r.HALF_FLOAT&&(Ee=r.R16F),Y===r.UNSIGNED_BYTE&&(Ee=r.R8)),P===r.RG&&(Y===r.FLOAT&&(Ee=r.RG32F),Y===r.HALF_FLOAT&&(Ee=r.RG16F),Y===r.UNSIGNED_BYTE&&(Ee=r.RG8)),P===r.RGBA&&(Y===r.FLOAT&&(Ee=r.RGBA32F),Y===r.HALF_FLOAT&&(Ee=r.RGBA16F),Y===r.UNSIGNED_BYTE&&(Ee=fe===bt&&_e===!1?r.SRGB8_ALPHA8:r.RGBA8),Y===r.UNSIGNED_SHORT_4_4_4_4&&(Ee=r.RGBA4),Y===r.UNSIGNED_SHORT_5_5_5_1&&(Ee=r.RGB5_A1)),(Ee===r.R16F||Ee===r.R32F||Ee===r.RG16F||Ee===r.RG32F||Ee===r.RGBA16F||Ee===r.RGBA32F)&&e.get("EXT_color_buffer_float"),Ee}function F(U,P,Y){return O(U,Y)===!0||U.isFramebufferTexture&&U.minFilter!==It&&U.minFilter!==st?Math.log2(Math.max(P.width,P.height))+1:U.mipmaps!==void 0&&U.mipmaps.length>0?U.mipmaps.length:U.isCompressedTexture&&Array.isArray(U.image)?P.mipmaps.length:1}function z(U){return U===It||U===Vi||U===oi?r.NEAREST:r.LINEAR}function X(U){const P=U.target;P.removeEventListener("dispose",X),Z(P),P.isVideoTexture&&_.delete(P)}function he(U){const P=U.target;P.removeEventListener("dispose",he),Q(P)}function Z(U){const P=n.get(U);if(P.__webglInit===void 0)return;const Y=U.source,fe=m.get(Y);if(fe){const _e=fe[P.__cacheKey];_e.usedTimes--,_e.usedTimes===0&&G(U),Object.keys(fe).length===0&&m.delete(Y)}n.remove(U)}function G(U){const P=n.get(U);r.deleteTexture(P.__webglTexture);const Y=U.source,fe=m.get(Y);delete fe[P.__cacheKey],o.memory.textures--}function Q(U){const P=U.texture,Y=n.get(U),fe=n.get(P);if(fe.__webglTexture!==void 0&&(r.deleteTexture(fe.__webglTexture),o.memory.textures--),U.depthTexture&&U.depthTexture.dispose(),U.isWebGLCubeRenderTarget)for(let _e=0;_e<6;_e++)r.deleteFramebuffer(Y.__webglFramebuffer[_e]),Y.__webglDepthbuffer&&r.deleteRenderbuffer(Y.__webglDepthbuffer[_e]);else{if(r.deleteFramebuffer(Y.__webglFramebuffer),Y.__webglDepthbuffer&&r.deleteRenderbuffer(Y.__webglDepthbuffer),Y.__webglMultisampledFramebuffer&&r.deleteFramebuffer(Y.__webglMultisampledFramebuffer),Y.__webglColorRenderbuffer)for(let _e=0;_e<Y.__webglColorRenderbuffer.length;_e++)Y.__webglColorRenderbuffer[_e]&&r.deleteRenderbuffer(Y.__webglColorRenderbuffer[_e]);Y.__webglDepthRenderbuffer&&r.deleteRenderbuffer(Y.__webglDepthRenderbuffer)}if(U.isWebGLMultipleRenderTargets)for(let _e=0,Ee=P.length;_e<Ee;_e++){const Ze=n.get(P[_e]);Ze.__webglTexture&&(r.deleteTexture(Ze.__webglTexture),o.memory.textures--),n.remove(P[_e])}n.remove(P),n.remove(U)}let ae=0;function de(){ae=0}function ie(){const U=ae;return U>=l&&console.warn("THREE.WebGLTextures: Trying to use "+U+" texture units while this GPU supports only "+l),ae+=1,U}function me(U){const P=[];return P.push(U.wrapS),P.push(U.wrapT),P.push(U.wrapR||0),P.push(U.magFilter),P.push(U.minFilter),P.push(U.anisotropy),P.push(U.internalFormat),P.push(U.format),P.push(U.type),P.push(U.generateMipmaps),P.push(U.premultiplyAlpha),P.push(U.flipY),P.push(U.unpackAlignment),P.push(U.encoding),P.join()}function ce(U,P){const Y=n.get(U);if(U.isVideoTexture&&Lt(U),U.isRenderTargetTexture===!1&&U.version>0&&Y.__version!==U.version){const fe=U.image;if(fe===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(fe.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Le(Y,U,P);return}}t.bindTexture(r.TEXTURE_2D,Y.__webglTexture,r.TEXTURE0+P)}function $(U,P){const Y=n.get(U);if(U.version>0&&Y.__version!==U.version){Le(Y,U,P);return}t.bindTexture(r.TEXTURE_2D_ARRAY,Y.__webglTexture,r.TEXTURE0+P)}function J(U,P){const Y=n.get(U);if(U.version>0&&Y.__version!==U.version){Le(Y,U,P);return}t.bindTexture(r.TEXTURE_3D,Y.__webglTexture,r.TEXTURE0+P)}function ye(U,P){const Y=n.get(U);if(U.version>0&&Y.__version!==U.version){Ye(Y,U,P);return}t.bindTexture(r.TEXTURE_CUBE_MAP,Y.__webglTexture,r.TEXTURE0+P)}const ge={[Hi]:r.REPEAT,[jt]:r.CLAMP_TO_EDGE,[Gi]:r.MIRRORED_REPEAT},be={[It]:r.NEAREST,[Vi]:r.NEAREST_MIPMAP_NEAREST,[oi]:r.NEAREST_MIPMAP_LINEAR,[st]:r.LINEAR,[vi]:r.LINEAR_MIPMAP_NEAREST,[ai]:r.LINEAR_MIPMAP_LINEAR};function H(U,P,Y){if(Y?(r.texParameteri(U,r.TEXTURE_WRAP_S,ge[P.wrapS]),r.texParameteri(U,r.TEXTURE_WRAP_T,ge[P.wrapT]),(U===r.TEXTURE_3D||U===r.TEXTURE_2D_ARRAY)&&r.texParameteri(U,r.TEXTURE_WRAP_R,ge[P.wrapR]),r.texParameteri(U,r.TEXTURE_MAG_FILTER,be[P.magFilter]),r.texParameteri(U,r.TEXTURE_MIN_FILTER,be[P.minFilter])):(r.texParameteri(U,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(U,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(U===r.TEXTURE_3D||U===r.TEXTURE_2D_ARRAY)&&r.texParameteri(U,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(P.wrapS!==jt||P.wrapT!==jt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(U,r.TEXTURE_MAG_FILTER,z(P.magFilter)),r.texParameteri(U,r.TEXTURE_MIN_FILTER,z(P.minFilter)),P.minFilter!==It&&P.minFilter!==st&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const fe=e.get("EXT_texture_filter_anisotropic");if(P.type===Bn&&e.has("OES_texture_float_linear")===!1||a===!1&&P.type===Wi&&e.has("OES_texture_half_float_linear")===!1)return;(P.anisotropy>1||n.get(P).__currentAnisotropy)&&(r.texParameterf(U,fe.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy)}}function Je(U,P){let Y=!1;U.__webglInit===void 0&&(U.__webglInit=!0,P.addEventListener("dispose",X));const fe=P.source;let _e=m.get(fe);_e===void 0&&(_e={},m.set(fe,_e));const Ee=me(P);if(Ee!==U.__cacheKey){_e[Ee]===void 0&&(_e[Ee]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,Y=!0),_e[Ee].usedTimes++;const Ze=_e[U.__cacheKey];Ze!==void 0&&(_e[U.__cacheKey].usedTimes--,Ze.usedTimes===0&&G(P)),U.__cacheKey=Ee,U.__webglTexture=_e[Ee].texture}return Y}function Le(U,P,Y){let fe=r.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(fe=r.TEXTURE_2D_ARRAY),P.isData3DTexture&&(fe=r.TEXTURE_3D);const _e=Je(U,P),Ee=P.source;t.bindTexture(fe,U.__webglTexture,r.TEXTURE0+Y);const Ze=n.get(Ee);if(Ee.version!==Ze.__version||_e===!0){t.activeTexture(r.TEXTURE0+Y),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const Te=R(P)&&S(P.image)===!1;let ne=E(P.image,Te,!1,u);ne=yt(P,ne);const Fe=S(ne)||a,Xe=s.convert(P.format,P.encoding);let De=s.convert(P.type),Ve=A(P.internalFormat,Xe,De,P.encoding,P.isVideoTexture);H(fe,P,Fe);let Ue;const mt=P.mipmaps,Dt=a&&P.isVideoTexture!==!0,en=Ze.__version===void 0||_e===!0,k=F(P,ne,Fe);if(P.isDepthTexture)Ve=r.DEPTH_COMPONENT,a?P.type===Bn?Ve=r.DEPTH_COMPONENT32F:P.type===Yt?Ve=r.DEPTH_COMPONENT24:P.type===li?Ve=r.DEPTH24_STENCIL8:Ve=r.DEPTH_COMPONENT16:P.type===Bn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),P.format===zn&&Ve===r.DEPTH_COMPONENT&&P.type!==cn&&P.type!==Yt&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),P.type=Yt,De=s.convert(P.type)),P.format===ci&&Ve===r.DEPTH_COMPONENT&&(Ve=r.DEPTH_STENCIL,P.type!==li&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),P.type=li,De=s.convert(P.type))),en&&(Dt?t.texStorage2D(r.TEXTURE_2D,1,Ve,ne.width,ne.height):t.texImage2D(r.TEXTURE_2D,0,Ve,ne.width,ne.height,0,Xe,De,null));else if(P.isDataTexture)if(mt.length>0&&Fe){Dt&&en&&t.texStorage2D(r.TEXTURE_2D,k,Ve,mt[0].width,mt[0].height);for(let ee=0,ue=mt.length;ee<ue;ee++)Ue=mt[ee],Dt?t.texSubImage2D(r.TEXTURE_2D,ee,0,0,Ue.width,Ue.height,Xe,De,Ue.data):t.texImage2D(r.TEXTURE_2D,ee,Ve,Ue.width,Ue.height,0,Xe,De,Ue.data);P.generateMipmaps=!1}else Dt?(en&&t.texStorage2D(r.TEXTURE_2D,k,Ve,ne.width,ne.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,ne.width,ne.height,Xe,De,ne.data)):t.texImage2D(r.TEXTURE_2D,0,Ve,ne.width,ne.height,0,Xe,De,ne.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){Dt&&en&&t.texStorage3D(r.TEXTURE_2D_ARRAY,k,Ve,mt[0].width,mt[0].height,ne.depth);for(let ee=0,ue=mt.length;ee<ue;ee++)Ue=mt[ee],P.format!==rn?Xe!==null?Dt?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,ee,0,0,0,Ue.width,Ue.height,ne.depth,Xe,Ue.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,ee,Ve,Ue.width,Ue.height,ne.depth,0,Ue.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Dt?t.texSubImage3D(r.TEXTURE_2D_ARRAY,ee,0,0,0,Ue.width,Ue.height,ne.depth,Xe,De,Ue.data):t.texImage3D(r.TEXTURE_2D_ARRAY,ee,Ve,Ue.width,Ue.height,ne.depth,0,Xe,De,Ue.data)}else{Dt&&en&&t.texStorage2D(r.TEXTURE_2D,k,Ve,mt[0].width,mt[0].height);for(let ee=0,ue=mt.length;ee<ue;ee++)Ue=mt[ee],P.format!==rn?Xe!==null?Dt?t.compressedTexSubImage2D(r.TEXTURE_2D,ee,0,0,Ue.width,Ue.height,Xe,Ue.data):t.compressedTexImage2D(r.TEXTURE_2D,ee,Ve,Ue.width,Ue.height,0,Ue.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Dt?t.texSubImage2D(r.TEXTURE_2D,ee,0,0,Ue.width,Ue.height,Xe,De,Ue.data):t.texImage2D(r.TEXTURE_2D,ee,Ve,Ue.width,Ue.height,0,Xe,De,Ue.data)}else if(P.isDataArrayTexture)Dt?(en&&t.texStorage3D(r.TEXTURE_2D_ARRAY,k,Ve,ne.width,ne.height,ne.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,ne.width,ne.height,ne.depth,Xe,De,ne.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Ve,ne.width,ne.height,ne.depth,0,Xe,De,ne.data);else if(P.isData3DTexture)Dt?(en&&t.texStorage3D(r.TEXTURE_3D,k,Ve,ne.width,ne.height,ne.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,ne.width,ne.height,ne.depth,Xe,De,ne.data)):t.texImage3D(r.TEXTURE_3D,0,Ve,ne.width,ne.height,ne.depth,0,Xe,De,ne.data);else if(P.isFramebufferTexture){if(en)if(Dt)t.texStorage2D(r.TEXTURE_2D,k,Ve,ne.width,ne.height);else{let ee=ne.width,ue=ne.height;for(let Ce=0;Ce<k;Ce++)t.texImage2D(r.TEXTURE_2D,Ce,Ve,ee,ue,0,Xe,De,null),ee>>=1,ue>>=1}}else if(mt.length>0&&Fe){Dt&&en&&t.texStorage2D(r.TEXTURE_2D,k,Ve,mt[0].width,mt[0].height);for(let ee=0,ue=mt.length;ee<ue;ee++)Ue=mt[ee],Dt?t.texSubImage2D(r.TEXTURE_2D,ee,0,0,Xe,De,Ue):t.texImage2D(r.TEXTURE_2D,ee,Ve,Xe,De,Ue);P.generateMipmaps=!1}else Dt?(en&&t.texStorage2D(r.TEXTURE_2D,k,Ve,ne.width,ne.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,Xe,De,ne)):t.texImage2D(r.TEXTURE_2D,0,Ve,Xe,De,ne);O(P,Fe)&&B(fe),Ze.__version=Ee.version,P.onUpdate&&P.onUpdate(P)}U.__version=P.version}function Ye(U,P,Y){if(P.image.length!==6)return;const fe=Je(U,P),_e=P.source;t.bindTexture(r.TEXTURE_CUBE_MAP,U.__webglTexture,r.TEXTURE0+Y);const Ee=n.get(_e);if(_e.version!==Ee.__version||fe===!0){t.activeTexture(r.TEXTURE0+Y),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const Ze=P.isCompressedTexture||P.image[0].isCompressedTexture,Te=P.image[0]&&P.image[0].isDataTexture,ne=[];for(let ee=0;ee<6;ee++)!Ze&&!Te?ne[ee]=E(P.image[ee],!1,!0,h):ne[ee]=Te?P.image[ee].image:P.image[ee],ne[ee]=yt(P,ne[ee]);const Fe=ne[0],Xe=S(Fe)||a,De=s.convert(P.format,P.encoding),Ve=s.convert(P.type),Ue=A(P.internalFormat,De,Ve,P.encoding),mt=a&&P.isVideoTexture!==!0,Dt=Ee.__version===void 0||fe===!0;let en=F(P,Fe,Xe);H(r.TEXTURE_CUBE_MAP,P,Xe);let k;if(Ze){mt&&Dt&&t.texStorage2D(r.TEXTURE_CUBE_MAP,en,Ue,Fe.width,Fe.height);for(let ee=0;ee<6;ee++){k=ne[ee].mipmaps;for(let ue=0;ue<k.length;ue++){const Ce=k[ue];P.format!==rn?De!==null?mt?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,ue,0,0,Ce.width,Ce.height,De,Ce.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,ue,Ue,Ce.width,Ce.height,0,Ce.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):mt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,ue,0,0,Ce.width,Ce.height,De,Ve,Ce.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,ue,Ue,Ce.width,Ce.height,0,De,Ve,Ce.data)}}}else{k=P.mipmaps,mt&&Dt&&(k.length>0&&en++,t.texStorage2D(r.TEXTURE_CUBE_MAP,en,Ue,ne[0].width,ne[0].height));for(let ee=0;ee<6;ee++)if(Te){mt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,0,0,ne[ee].width,ne[ee].height,De,Ve,ne[ee].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,Ue,ne[ee].width,ne[ee].height,0,De,Ve,ne[ee].data);for(let ue=0;ue<k.length;ue++){const Oe=k[ue].image[ee].image;mt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,ue+1,0,0,Oe.width,Oe.height,De,Ve,Oe.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,ue+1,Ue,Oe.width,Oe.height,0,De,Ve,Oe.data)}}else{mt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,0,0,De,Ve,ne[ee]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,Ue,De,Ve,ne[ee]);for(let ue=0;ue<k.length;ue++){const Ce=k[ue];mt?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,ue+1,0,0,De,Ve,Ce.image[ee]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,ue+1,Ue,De,Ve,Ce.image[ee])}}}O(P,Xe)&&B(r.TEXTURE_CUBE_MAP),Ee.__version=_e.version,P.onUpdate&&P.onUpdate(P)}U.__version=P.version}function Se(U,P,Y,fe,_e){const Ee=s.convert(Y.format,Y.encoding),Ze=s.convert(Y.type),Te=A(Y.internalFormat,Ee,Ze,Y.encoding);n.get(P).__hasExternalTextures||(_e===r.TEXTURE_3D||_e===r.TEXTURE_2D_ARRAY?t.texImage3D(_e,0,Te,P.width,P.height,P.depth,0,Ee,Ze,null):t.texImage2D(_e,0,Te,P.width,P.height,0,Ee,Ze,null)),t.bindFramebuffer(r.FRAMEBUFFER,U),ke(P)?f.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,fe,_e,n.get(Y).__webglTexture,0,Ge(P)):(_e===r.TEXTURE_2D||_e>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&_e<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,fe,_e,n.get(Y).__webglTexture,0),t.bindFramebuffer(r.FRAMEBUFFER,null)}function ot(U,P,Y){if(r.bindRenderbuffer(r.RENDERBUFFER,U),P.depthBuffer&&!P.stencilBuffer){let fe=r.DEPTH_COMPONENT16;if(Y||ke(P)){const _e=P.depthTexture;_e&&_e.isDepthTexture&&(_e.type===Bn?fe=r.DEPTH_COMPONENT32F:_e.type===Yt&&(fe=r.DEPTH_COMPONENT24));const Ee=Ge(P);ke(P)?f.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Ee,fe,P.width,P.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,Ee,fe,P.width,P.height)}else r.renderbufferStorage(r.RENDERBUFFER,fe,P.width,P.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,U)}else if(P.depthBuffer&&P.stencilBuffer){const fe=Ge(P);Y&&ke(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,fe,r.DEPTH24_STENCIL8,P.width,P.height):ke(P)?f.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,fe,r.DEPTH24_STENCIL8,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,P.width,P.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,U)}else{const fe=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let _e=0;_e<fe.length;_e++){const Ee=fe[_e],Ze=s.convert(Ee.format,Ee.encoding),Te=s.convert(Ee.type),ne=A(Ee.internalFormat,Ze,Te,Ee.encoding),Fe=Ge(P);Y&&ke(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Fe,ne,P.width,P.height):ke(P)?f.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Fe,ne,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,ne,P.width,P.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function re(U,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,U),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),ce(P.depthTexture,0);const fe=n.get(P.depthTexture).__webglTexture,_e=Ge(P);if(P.depthTexture.format===zn)ke(P)?f.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,fe,0,_e):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,fe,0);else if(P.depthTexture.format===ci)ke(P)?f.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,fe,0,_e):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,fe,0);else throw new Error("Unknown depthTexture format")}function se(U){const P=n.get(U),Y=U.isWebGLCubeRenderTarget===!0;if(U.depthTexture&&!P.__autoAllocateDepthBuffer){if(Y)throw new Error("target.depthTexture not supported in Cube render targets");re(P.__webglFramebuffer,U)}else if(Y){P.__webglDepthbuffer=[];for(let fe=0;fe<6;fe++)t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer[fe]),P.__webglDepthbuffer[fe]=r.createRenderbuffer(),ot(P.__webglDepthbuffer[fe],U,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer=r.createRenderbuffer(),ot(P.__webglDepthbuffer,U,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function ve(U,P,Y){const fe=n.get(U);P!==void 0&&Se(fe.__webglFramebuffer,U,U.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D),Y!==void 0&&se(U)}function Ie(U){const P=U.texture,Y=n.get(U),fe=n.get(P);U.addEventListener("dispose",he),U.isWebGLMultipleRenderTargets!==!0&&(fe.__webglTexture===void 0&&(fe.__webglTexture=r.createTexture()),fe.__version=P.version,o.memory.textures++);const _e=U.isWebGLCubeRenderTarget===!0,Ee=U.isWebGLMultipleRenderTargets===!0,Ze=S(U)||a;if(_e){Y.__webglFramebuffer=[];for(let Te=0;Te<6;Te++)Y.__webglFramebuffer[Te]=r.createFramebuffer()}else{if(Y.__webglFramebuffer=r.createFramebuffer(),Ee)if(i.drawBuffers){const Te=U.texture;for(let ne=0,Fe=Te.length;ne<Fe;ne++){const Xe=n.get(Te[ne]);Xe.__webglTexture===void 0&&(Xe.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&U.samples>0&&ke(U)===!1){const Te=Ee?P:[P];Y.__webglMultisampledFramebuffer=r.createFramebuffer(),Y.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,Y.__webglMultisampledFramebuffer);for(let ne=0;ne<Te.length;ne++){const Fe=Te[ne];Y.__webglColorRenderbuffer[ne]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,Y.__webglColorRenderbuffer[ne]);const Xe=s.convert(Fe.format,Fe.encoding),De=s.convert(Fe.type),Ve=A(Fe.internalFormat,Xe,De,Fe.encoding,U.isXRRenderTarget===!0),Ue=Ge(U);r.renderbufferStorageMultisample(r.RENDERBUFFER,Ue,Ve,U.width,U.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+ne,r.RENDERBUFFER,Y.__webglColorRenderbuffer[ne])}r.bindRenderbuffer(r.RENDERBUFFER,null),U.depthBuffer&&(Y.__webglDepthRenderbuffer=r.createRenderbuffer(),ot(Y.__webglDepthRenderbuffer,U,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(_e){t.bindTexture(r.TEXTURE_CUBE_MAP,fe.__webglTexture),H(r.TEXTURE_CUBE_MAP,P,Ze);for(let Te=0;Te<6;Te++)Se(Y.__webglFramebuffer[Te],U,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Te);O(P,Ze)&&B(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ee){const Te=U.texture;for(let ne=0,Fe=Te.length;ne<Fe;ne++){const Xe=Te[ne],De=n.get(Xe);t.bindTexture(r.TEXTURE_2D,De.__webglTexture),H(r.TEXTURE_2D,Xe,Ze),Se(Y.__webglFramebuffer,U,Xe,r.COLOR_ATTACHMENT0+ne,r.TEXTURE_2D),O(Xe,Ze)&&B(r.TEXTURE_2D)}t.unbindTexture()}else{let Te=r.TEXTURE_2D;(U.isWebGL3DRenderTarget||U.isWebGLArrayRenderTarget)&&(a?Te=U.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Te,fe.__webglTexture),H(Te,P,Ze),Se(Y.__webglFramebuffer,U,P,r.COLOR_ATTACHMENT0,Te),O(P,Ze)&&B(Te),t.unbindTexture()}U.depthBuffer&&se(U)}function Me(U){const P=S(U)||a,Y=U.isWebGLMultipleRenderTargets===!0?U.texture:[U.texture];for(let fe=0,_e=Y.length;fe<_e;fe++){const Ee=Y[fe];if(O(Ee,P)){const Ze=U.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,Te=n.get(Ee).__webglTexture;t.bindTexture(Ze,Te),B(Ze),t.unbindTexture()}}}function $e(U){if(a&&U.samples>0&&ke(U)===!1){const P=U.isWebGLMultipleRenderTargets?U.texture:[U.texture],Y=U.width,fe=U.height;let _e=r.COLOR_BUFFER_BIT;const Ee=[],Ze=U.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Te=n.get(U),ne=U.isWebGLMultipleRenderTargets===!0;if(ne)for(let Fe=0;Fe<P.length;Fe++)t.bindFramebuffer(r.FRAMEBUFFER,Te.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Fe,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,Te.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Fe,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,Te.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Te.__webglFramebuffer);for(let Fe=0;Fe<P.length;Fe++){Ee.push(r.COLOR_ATTACHMENT0+Fe),U.depthBuffer&&Ee.push(Ze);const Xe=Te.__ignoreDepthValues!==void 0?Te.__ignoreDepthValues:!1;if(Xe===!1&&(U.depthBuffer&&(_e|=r.DEPTH_BUFFER_BIT),U.stencilBuffer&&(_e|=r.STENCIL_BUFFER_BIT)),ne&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Te.__webglColorRenderbuffer[Fe]),Xe===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[Ze]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[Ze])),ne){const De=n.get(P[Fe]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,De,0)}r.blitFramebuffer(0,0,Y,fe,0,0,Y,fe,_e,r.NEAREST),p&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,Ee)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),ne)for(let Fe=0;Fe<P.length;Fe++){t.bindFramebuffer(r.FRAMEBUFFER,Te.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Fe,r.RENDERBUFFER,Te.__webglColorRenderbuffer[Fe]);const Xe=n.get(P[Fe]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,Te.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Fe,r.TEXTURE_2D,Xe,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Te.__webglMultisampledFramebuffer)}}function Ge(U){return Math.min(d,U.samples)}function ke(U){const P=n.get(U);return a&&U.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function Lt(U){const P=o.render.frame;_.get(U)!==P&&(_.set(U,P),U.update())}function yt(U,P){const Y=U.encoding,fe=U.format,_e=U.type;return U.isCompressedTexture===!0||U.isVideoTexture===!0||U.format===q||Y!==un&&(Y===bt?a===!1?e.has("EXT_sRGB")===!0&&fe===rn?(U.format=q,U.minFilter=st,U.generateMipmaps=!1):P=Bl.sRGBToLinear(P):(fe!==rn||_e!==_n)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",Y)),P}this.allocateTextureUnit=ie,this.resetTextureUnits=de,this.setTexture2D=ce,this.setTexture2DArray=$,this.setTexture3D=J,this.setTextureCube=ye,this.rebindTextures=ve,this.setupRenderTarget=Ie,this.updateRenderTargetMipmap=Me,this.updateMultisampleRenderTarget=$e,this.setupDepthRenderbuffer=se,this.setupFrameBufferTexture=Se,this.useMultisampledRTT=ke}function qh(r,e,t){const n=t.isWebGL2;function i(s,o=null){let a;if(s===_n)return r.UNSIGNED_BYTE;if(s===Ms)return r.UNSIGNED_SHORT_4_4_4_4;if(s===bs)return r.UNSIGNED_SHORT_5_5_5_1;if(s===hr)return r.BYTE;if(s===oo)return r.SHORT;if(s===cn)return r.UNSIGNED_SHORT;if(s===ys)return r.INT;if(s===Yt)return r.UNSIGNED_INT;if(s===Bn)return r.FLOAT;if(s===Wi)return n?r.HALF_FLOAT:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===En)return r.ALPHA;if(s===rn)return r.RGBA;if(s===ur)return r.LUMINANCE;if(s===Rn)return r.LUMINANCE_ALPHA;if(s===zn)return r.DEPTH_COMPONENT;if(s===ci)return r.DEPTH_STENCIL;if(s===ao)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),r.RGBA;if(s===q)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===dr)return r.RED;if(s===Xi)return r.RED_INTEGER;if(s===qn)return r.RG;if(s===lo)return r.RG_INTEGER;if(s===qi)return r.RGBA_INTEGER;if(s===fr||s===hi||s===Tn||s===Zt)if(o===bt)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===fr)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===hi)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Tn)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Zt)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===fr)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===hi)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Tn)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Zt)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===co||s===ho||s===Yi||s===uo)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===co)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===ho)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Yi)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===uo)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===ua)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Zi||s===Ji)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===Zi)return o===bt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===Ji)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===ui||s===fo||s===ws||s===po||s===mo||s===$i||s===pr||s===Yn||s===go||s===Ss||s===Ki||s===xi||s===Es||s===Ts)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===ui)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===fo)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===ws)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===po)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===mo)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===$i)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===pr)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Yn)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===go)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Ss)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Ki)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===xi)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Es)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Ts)return o===bt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===As)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===As)return o===bt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===li?n?r.UNSIGNED_INT_24_8:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class Yh extends ln{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Gr extends pt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const l_={type:"move"};class pc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Gr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Gr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Gr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,o=null;const a=this._targetRay,l=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){o=!0;for(const g of e.hand.values()){const m=t.getJointPose(g,n),b=this._getHandJoint(h,g);m!==null&&(b.matrix.fromArray(m.transform.matrix),b.matrix.decompose(b.position,b.rotation,b.scale),b.jointRadius=m.radius),b.visible=m!==null}const u=h.joints["index-finger-tip"],d=h.joints["thumb-tip"],f=u.position.distanceTo(d.position),p=.02,_=.005;h.inputState.pinching&&f>p+_?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&f<=p-_&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(l_)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=s!==null),h!==null&&(h.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Gr;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Zh extends Ht{constructor(e,t,n,i,s,o,a,l,h,u){if(u=u!==void 0?u:zn,u!==zn&&u!==ci)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===zn&&(n=Yt),n===void 0&&u===ci&&(n=li),super(null,i,s,o,a,l,u,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:It,this.minFilter=l!==void 0?l:It,this.flipY=!1,this.generateMipmaps=!1}}class c_ extends j{constructor(e,t){super();const n=this;let i=null,s=1,o=null,a="local-floor",l=null,h=null,u=null,d=null,f=null,p=null;const _=t.getContextAttributes();let g=null,m=null;const b=[],C=[],E=new Set,S=new Map,R=new ln;R.layers.enable(1),R.viewport=new xt;const O=new ln;O.layers.enable(2),O.viewport=new xt;const B=[R,O],A=new Yh;A.layers.enable(1),A.layers.enable(2);let F=null,z=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function($){let J=b[$];return J===void 0&&(J=new pc,b[$]=J),J.getTargetRaySpace()},this.getControllerGrip=function($){let J=b[$];return J===void 0&&(J=new pc,b[$]=J),J.getGripSpace()},this.getHand=function($){let J=b[$];return J===void 0&&(J=new pc,b[$]=J),J.getHandSpace()};function X($){const J=C.indexOf($.inputSource);if(J===-1)return;const ye=b[J];ye!==void 0&&ye.dispatchEvent({type:$.type,data:$.inputSource})}function he(){i.removeEventListener("select",X),i.removeEventListener("selectstart",X),i.removeEventListener("selectend",X),i.removeEventListener("squeeze",X),i.removeEventListener("squeezestart",X),i.removeEventListener("squeezeend",X),i.removeEventListener("end",he),i.removeEventListener("inputsourceschange",Z);for(let $=0;$<b.length;$++){const J=C[$];J!==null&&(C[$]=null,b[$].disconnect(J))}F=null,z=null,e.setRenderTarget(g),f=null,d=null,u=null,i=null,m=null,ce.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function($){s=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function($){a=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function($){l=$},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function($){if(i=$,i!==null){if(g=e.getRenderTarget(),i.addEventListener("select",X),i.addEventListener("selectstart",X),i.addEventListener("selectend",X),i.addEventListener("squeeze",X),i.addEventListener("squeezestart",X),i.addEventListener("squeezeend",X),i.addEventListener("end",he),i.addEventListener("inputsourceschange",Z),_.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const J={antialias:i.renderState.layers===void 0?_.antialias:!0,alpha:_.alpha,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(i,t,J),i.updateRenderState({baseLayer:f}),m=new Hn(f.framebufferWidth,f.framebufferHeight,{format:rn,type:_n,encoding:e.outputEncoding,stencilBuffer:_.stencil})}else{let J=null,ye=null,ge=null;_.depth&&(ge=_.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,J=_.stencil?ci:zn,ye=_.stencil?li:Yt);const be={colorFormat:t.RGBA8,depthFormat:ge,scaleFactor:s};u=new XRWebGLBinding(i,t),d=u.createProjectionLayer(be),i.updateRenderState({layers:[d]}),m=new Hn(d.textureWidth,d.textureHeight,{format:rn,type:_n,depthTexture:new Zh(d.textureWidth,d.textureHeight,ye,void 0,void 0,void 0,void 0,void 0,void 0,J),stencilBuffer:_.stencil,encoding:e.outputEncoding,samples:_.antialias?4:0});const H=e.properties.get(m);H.__ignoreDepthValues=d.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await i.requestReferenceSpace(a),ce.setContext(i),ce.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function Z($){for(let J=0;J<$.removed.length;J++){const ye=$.removed[J],ge=C.indexOf(ye);ge>=0&&(C[ge]=null,b[ge].disconnect(ye))}for(let J=0;J<$.added.length;J++){const ye=$.added[J];let ge=C.indexOf(ye);if(ge===-1){for(let H=0;H<b.length;H++)if(H>=C.length){C.push(ye),ge=H;break}else if(C[H]===null){C[H]=ye,ge=H;break}if(ge===-1)break}const be=b[ge];be&&be.connect(ye)}}const G=new D,Q=new D;function ae($,J,ye){G.setFromMatrixPosition(J.matrixWorld),Q.setFromMatrixPosition(ye.matrixWorld);const ge=G.distanceTo(Q),be=J.projectionMatrix.elements,H=ye.projectionMatrix.elements,Je=be[14]/(be[10]-1),Le=be[14]/(be[10]+1),Ye=(be[9]+1)/be[5],Se=(be[9]-1)/be[5],ot=(be[8]-1)/be[0],re=(H[8]+1)/H[0],se=Je*ot,ve=Je*re,Ie=ge/(-ot+re),Me=Ie*-ot;J.matrixWorld.decompose($.position,$.quaternion,$.scale),$.translateX(Me),$.translateZ(Ie),$.matrixWorld.compose($.position,$.quaternion,$.scale),$.matrixWorldInverse.copy($.matrixWorld).invert();const $e=Je+Ie,Ge=Le+Ie,ke=se-Me,Lt=ve+(ge-Me),yt=Ye*Le/Ge*$e,U=Se*Le/Ge*$e;$.projectionMatrix.makePerspective(ke,Lt,yt,U,$e,Ge)}function de($,J){J===null?$.matrixWorld.copy($.matrix):$.matrixWorld.multiplyMatrices(J.matrixWorld,$.matrix),$.matrixWorldInverse.copy($.matrixWorld).invert()}this.updateCamera=function($){if(i===null)return;A.near=O.near=R.near=$.near,A.far=O.far=R.far=$.far,(F!==A.near||z!==A.far)&&(i.updateRenderState({depthNear:A.near,depthFar:A.far}),F=A.near,z=A.far);const J=$.parent,ye=A.cameras;de(A,J);for(let be=0;be<ye.length;be++)de(ye[be],J);A.matrixWorld.decompose(A.position,A.quaternion,A.scale),$.matrix.copy(A.matrix),$.matrix.decompose($.position,$.quaternion,$.scale);const ge=$.children;for(let be=0,H=ge.length;be<H;be++)ge[be].updateMatrixWorld(!0);ye.length===2?ae(A,R,O):A.projectionMatrix.copy(R.projectionMatrix)},this.getCamera=function(){return A},this.getFoveation=function(){if(d!==null)return d.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function($){d!==null&&(d.fixedFoveation=$),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=$)},this.getPlanes=function(){return E};let ie=null;function me($,J){if(h=J.getViewerPose(l||o),p=J,h!==null){const ye=h.views;f!==null&&(e.setRenderTargetFramebuffer(m,f.framebuffer),e.setRenderTarget(m));let ge=!1;ye.length!==A.cameras.length&&(A.cameras.length=0,ge=!0);for(let be=0;be<ye.length;be++){const H=ye[be];let Je=null;if(f!==null)Je=f.getViewport(H);else{const Ye=u.getViewSubImage(d,H);Je=Ye.viewport,be===0&&(e.setRenderTargetTextures(m,Ye.colorTexture,d.ignoreDepthValues?void 0:Ye.depthStencilTexture),e.setRenderTarget(m))}let Le=B[be];Le===void 0&&(Le=new ln,Le.layers.enable(be),Le.viewport=new xt,B[be]=Le),Le.matrix.fromArray(H.transform.matrix),Le.projectionMatrix.fromArray(H.projectionMatrix),Le.viewport.set(Je.x,Je.y,Je.width,Je.height),be===0&&A.matrix.copy(Le.matrix),ge===!0&&A.cameras.push(Le)}}for(let ye=0;ye<b.length;ye++){const ge=C[ye],be=b[ye];ge!==null&&be!==void 0&&be.update(ge,J,l||o)}if(ie&&ie($,J),J.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:J.detectedPlanes});let ye=null;for(const ge of E)J.detectedPlanes.has(ge)||(ye===null&&(ye=[]),ye.push(ge));if(ye!==null)for(const ge of ye)E.delete(ge),S.delete(ge),n.dispatchEvent({type:"planeremoved",data:ge});for(const ge of J.detectedPlanes)if(!E.has(ge))E.add(ge),S.set(ge,J.lastChangedTime),n.dispatchEvent({type:"planeadded",data:ge});else{const be=S.get(ge);ge.lastChangedTime>be&&(S.set(ge,ge.lastChangedTime),n.dispatchEvent({type:"planechanged",data:ge}))}}p=null}const ce=new yh;ce.setAnimationLoop(me),this.setAnimationLoop=function($){ie=$},this.dispose=function(){}}}function h_(r,e){function t(g,m){m.color.getRGB(g.fogColor.value,gh(r)),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,b,C,E){m.isMeshBasicMaterial||m.isMeshLambertMaterial?i(g,m):m.isMeshToonMaterial?(i(g,m),u(g,m)):m.isMeshPhongMaterial?(i(g,m),h(g,m)):m.isMeshStandardMaterial?(i(g,m),d(g,m),m.isMeshPhysicalMaterial&&f(g,m,E)):m.isMeshMatcapMaterial?(i(g,m),p(g,m)):m.isMeshDepthMaterial?i(g,m):m.isMeshDistanceMaterial?(i(g,m),_(g,m)):m.isMeshNormalMaterial?i(g,m):m.isLineBasicMaterial?(s(g,m),m.isLineDashedMaterial&&o(g,m)):m.isPointsMaterial?a(g,m,b,C):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===_t&&(g.bumpScale.value*=-1)),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===_t&&g.normalScale.value.negate()),m.specularMap&&(g.specularMap.value=m.specularMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const b=e.get(m).envMap;if(b&&(g.envMap.value=b,g.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap){g.lightMap.value=m.lightMap;const S=r.physicallyCorrectLights!==!0?Math.PI:1;g.lightMapIntensity.value=m.lightMapIntensity*S}m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let C;m.map?C=m.map:m.specularMap?C=m.specularMap:m.displacementMap?C=m.displacementMap:m.normalMap?C=m.normalMap:m.bumpMap?C=m.bumpMap:m.roughnessMap?C=m.roughnessMap:m.metalnessMap?C=m.metalnessMap:m.alphaMap?C=m.alphaMap:m.emissiveMap?C=m.emissiveMap:m.clearcoatMap?C=m.clearcoatMap:m.clearcoatNormalMap?C=m.clearcoatNormalMap:m.clearcoatRoughnessMap?C=m.clearcoatRoughnessMap:m.iridescenceMap?C=m.iridescenceMap:m.iridescenceThicknessMap?C=m.iridescenceThicknessMap:m.specularIntensityMap?C=m.specularIntensityMap:m.specularColorMap?C=m.specularColorMap:m.transmissionMap?C=m.transmissionMap:m.thicknessMap?C=m.thicknessMap:m.sheenColorMap?C=m.sheenColorMap:m.sheenRoughnessMap&&(C=m.sheenRoughnessMap),C!==void 0&&(C.isWebGLRenderTarget&&(C=C.texture),C.matrixAutoUpdate===!0&&C.updateMatrix(),g.uvTransform.value.copy(C.matrix));let E;m.aoMap?E=m.aoMap:m.lightMap&&(E=m.lightMap),E!==void 0&&(E.isWebGLRenderTarget&&(E=E.texture),E.matrixAutoUpdate===!0&&E.updateMatrix(),g.uv2Transform.value.copy(E.matrix))}function s(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function o(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function a(g,m,b,C){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*b,g.scale.value=C*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let E;m.map?E=m.map:m.alphaMap&&(E=m.alphaMap),E!==void 0&&(E.matrixAutoUpdate===!0&&E.updateMatrix(),g.uvTransform.value.copy(E.matrix))}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let b;m.map?b=m.map:m.alphaMap&&(b=m.alphaMap),b!==void 0&&(b.matrixAutoUpdate===!0&&b.updateMatrix(),g.uvTransform.value.copy(b.matrix))}function h(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function d(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),e.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m,b){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===_t&&g.clearcoatNormalScale.value.negate())),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap)),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=b.texture,g.transmissionSamplerSize.value.set(b.width,b.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap)}function p(g,m){m.matcap&&(g.matcap.value=m.matcap)}function _(g,m){g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function u_(r,e,t,n){let i={},s={},o=[];const a=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(C,E){const S=E.program;n.uniformBlockBinding(C,S)}function h(C,E){let S=i[C.id];S===void 0&&(_(C),S=u(C),i[C.id]=S,C.addEventListener("dispose",m));const R=E.program;n.updateUBOMapping(C,R);const O=e.render.frame;s[C.id]!==O&&(f(C),s[C.id]=O)}function u(C){const E=d();C.__bindingPointIndex=E;const S=r.createBuffer(),R=C.__size,O=C.usage;return r.bindBuffer(r.UNIFORM_BUFFER,S),r.bufferData(r.UNIFORM_BUFFER,R,O),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,E,S),S}function d(){for(let C=0;C<a;C++)if(o.indexOf(C)===-1)return o.push(C),C;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(C){const E=i[C.id],S=C.uniforms,R=C.__cache;r.bindBuffer(r.UNIFORM_BUFFER,E);for(let O=0,B=S.length;O<B;O++){const A=S[O];if(p(A,O,R)===!0){const F=A.value,z=A.__offset;typeof F=="number"?(A.__data[0]=F,r.bufferSubData(r.UNIFORM_BUFFER,z,A.__data)):(A.value.isMatrix3?(A.__data[0]=A.value.elements[0],A.__data[1]=A.value.elements[1],A.__data[2]=A.value.elements[2],A.__data[3]=A.value.elements[0],A.__data[4]=A.value.elements[3],A.__data[5]=A.value.elements[4],A.__data[6]=A.value.elements[5],A.__data[7]=A.value.elements[0],A.__data[8]=A.value.elements[6],A.__data[9]=A.value.elements[7],A.__data[10]=A.value.elements[8],A.__data[11]=A.value.elements[0]):F.toArray(A.__data),r.bufferSubData(r.UNIFORM_BUFFER,z,A.__data))}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function p(C,E,S){const R=C.value;if(S[E]===void 0)return typeof R=="number"?S[E]=R:S[E]=R.clone(),!0;if(typeof R=="number"){if(S[E]!==R)return S[E]=R,!0}else{const O=S[E];if(O.equals(R)===!1)return O.copy(R),!0}return!1}function _(C){const E=C.uniforms;let S=0;const R=16;let O=0;for(let B=0,A=E.length;B<A;B++){const F=E[B],z=g(F);if(F.__data=new Float32Array(z.storage/Float32Array.BYTES_PER_ELEMENT),F.__offset=S,B>0){O=S%R;const X=R-O;O!==0&&X-z.boundary<0&&(S+=R-O,F.__offset=S)}S+=z.storage}return O=S%R,O>0&&(S+=R-O),C.__size=S,C.__cache={},this}function g(C){const E=C.value,S={boundary:0,storage:0};return typeof E=="number"?(S.boundary=4,S.storage=4):E.isVector2?(S.boundary=8,S.storage=8):E.isVector3||E.isColor?(S.boundary=16,S.storage=12):E.isVector4?(S.boundary=16,S.storage=16):E.isMatrix3?(S.boundary=48,S.storage=48):E.isMatrix4?(S.boundary=64,S.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),S}function m(C){const E=C.target;E.removeEventListener("dispose",m);const S=o.indexOf(E.__bindingPointIndex);o.splice(S,1),r.deleteBuffer(i[E.id]),delete i[E.id],delete s[E.id]}function b(){for(const C in i)r.deleteBuffer(i[C]);o=[],i={},s={}}return{bind:l,update:h,dispose:b}}function d_(){const r=xo("canvas");return r.style.display="block",r}function Jh(r={}){this.isWebGLRenderer=!0;const e=r.canvas!==void 0?r.canvas:d_(),t=r.context!==void 0?r.context:null,n=r.depth!==void 0?r.depth:!0,i=r.stencil!==void 0?r.stencil:!0,s=r.antialias!==void 0?r.antialias:!1,o=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,a=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,l=r.powerPreference!==void 0?r.powerPreference:"default",h=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=r.alpha!==void 0?r.alpha:!1;let d=null,f=null;const p=[],_=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=un,this.physicallyCorrectLights=!1,this.toneMapping=Cn,this.toneMappingExposure=1;const g=this;let m=!1,b=0,C=0,E=null,S=-1,R=null;const O=new xt,B=new xt;let A=null,F=e.width,z=e.height,X=1,he=null,Z=null;const G=new xt(0,0,F,z),Q=new xt(0,0,F,z);let ae=!1;const de=new Ba;let ie=!1,me=!1,ce=null;const $=new Qe,J=new oe,ye=new D,ge={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function be(){return E===null?X:1}let H=t;function Je(I,W){for(let K=0;K<I.length;K++){const V=I[K],te=e.getContext(V,W);if(te!==null)return te}return null}try{const I={alpha:!0,depth:n,stencil:i,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${gs}`),e.addEventListener("webglcontextlost",Ve,!1),e.addEventListener("webglcontextrestored",Ue,!1),e.addEventListener("webglcontextcreationerror",mt,!1),H===null){const W=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&W.shift(),H=Je(W,I),H===null)throw Je(W)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}H.getShaderPrecisionFormat===void 0&&(H.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}let Le,Ye,Se,ot,re,se,ve,Ie,Me,$e,Ge,ke,Lt,yt,U,P,Y,fe,_e,Ee,Ze,Te,ne,Fe;function Xe(){Le=new Cm(H),Ye=new bm(H,Le,r),Le.init(Ye),Te=new qh(H,Le,Ye),Se=new o_(H,Le,Ye),ot=new Pm(H),re=new Zg,se=new a_(H,Le,Se,re,Ye,Te,ot),ve=new Sm(g),Ie=new Am(g),Me=new yf(H,Ye),ne=new ym(H,Le,Me,Ye),$e=new Rm(H,Me,ot,ne),Ge=new Nm(H,$e,Me,ot),_e=new Om(H,Ye,se),P=new wm(re),ke=new Yg(g,ve,Ie,Le,Ye,ne,P),Lt=new h_(g,re),yt=new $g,U=new n_(Le,Ye),fe=new xm(g,ve,Ie,Se,Ge,u,o),Y=new r_(g,Ge,Ye),Fe=new u_(H,ot,Ye,Se),Ee=new Mm(H,Le,ot,Ye),Ze=new Lm(H,Le,ot,Ye),ot.programs=ke.programs,g.capabilities=Ye,g.extensions=Le,g.properties=re,g.renderLists=yt,g.shadowMap=Y,g.state=Se,g.info=ot}Xe();const De=new c_(g,H);this.xr=De,this.getContext=function(){return H},this.getContextAttributes=function(){return H.getContextAttributes()},this.forceContextLoss=function(){const I=Le.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=Le.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return X},this.setPixelRatio=function(I){I!==void 0&&(X=I,this.setSize(F,z,!1))},this.getSize=function(I){return I.set(F,z)},this.setSize=function(I,W,K){if(De.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}F=I,z=W,e.width=Math.floor(I*X),e.height=Math.floor(W*X),K!==!1&&(e.style.width=I+"px",e.style.height=W+"px"),this.setViewport(0,0,I,W)},this.getDrawingBufferSize=function(I){return I.set(F*X,z*X).floor()},this.setDrawingBufferSize=function(I,W,K){F=I,z=W,X=K,e.width=Math.floor(I*K),e.height=Math.floor(W*K),this.setViewport(0,0,I,W)},this.getCurrentViewport=function(I){return I.copy(O)},this.getViewport=function(I){return I.copy(G)},this.setViewport=function(I,W,K,V){I.isVector4?G.set(I.x,I.y,I.z,I.w):G.set(I,W,K,V),Se.viewport(O.copy(G).multiplyScalar(X).floor())},this.getScissor=function(I){return I.copy(Q)},this.setScissor=function(I,W,K,V){I.isVector4?Q.set(I.x,I.y,I.z,I.w):Q.set(I,W,K,V),Se.scissor(B.copy(Q).multiplyScalar(X).floor())},this.getScissorTest=function(){return ae},this.setScissorTest=function(I){Se.setScissorTest(ae=I)},this.setOpaqueSort=function(I){he=I},this.setTransparentSort=function(I){Z=I},this.getClearColor=function(I){return I.copy(fe.getClearColor())},this.setClearColor=function(){fe.setClearColor.apply(fe,arguments)},this.getClearAlpha=function(){return fe.getClearAlpha()},this.setClearAlpha=function(){fe.setClearAlpha.apply(fe,arguments)},this.clear=function(I=!0,W=!0,K=!0){let V=0;I&&(V|=H.COLOR_BUFFER_BIT),W&&(V|=H.DEPTH_BUFFER_BIT),K&&(V|=H.STENCIL_BUFFER_BIT),H.clear(V)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ve,!1),e.removeEventListener("webglcontextrestored",Ue,!1),e.removeEventListener("webglcontextcreationerror",mt,!1),yt.dispose(),U.dispose(),re.dispose(),ve.dispose(),Ie.dispose(),Ge.dispose(),ne.dispose(),Fe.dispose(),ke.dispose(),De.dispose(),De.removeEventListener("sessionstart",Ce),De.removeEventListener("sessionend",Oe),ce&&(ce.dispose(),ce=null),vt.stop()};function Ve(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function Ue(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const I=ot.autoReset,W=Y.enabled,K=Y.autoUpdate,V=Y.needsUpdate,te=Y.type;Xe(),ot.autoReset=I,Y.enabled=W,Y.autoUpdate=K,Y.needsUpdate=V,Y.type=te}function mt(I){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",I.statusMessage)}function Dt(I){const W=I.target;W.removeEventListener("dispose",Dt),en(W)}function en(I){k(I),re.remove(I)}function k(I){const W=re.get(I).programs;W!==void 0&&(W.forEach(function(K){ke.releaseProgram(K)}),I.isShaderMaterial&&ke.releaseShaderCache(I))}this.renderBufferDirect=function(I,W,K,V,te,Be){W===null&&(W=ge);const Ke=te.isMesh&&te.matrixWorld.determinant()<0,at=Rv(I,W,K,V,te);Se.setMaterial(V,Ke);let ct=K.index,gt=1;V.wireframe===!0&&(ct=$e.getWireframeAttribute(K),gt=2);const ht=K.drawRange,ut=K.attributes.position;let Xt=ht.start*gt,Nn=(ht.start+ht.count)*gt;Be!==null&&(Xt=Math.max(Xt,Be.start*gt),Nn=Math.min(Nn,(Be.start+Be.count)*gt)),ct!==null?(Xt=Math.max(Xt,0),Nn=Math.min(Nn,ct.count)):ut!=null&&(Xt=Math.max(Xt,0),Nn=Math.min(Nn,ut.count));const Di=Nn-Xt;if(Di<0||Di===1/0)return;ne.setup(te,V,at,K,ct);let Qs,qt=Ee;if(ct!==null&&(Qs=Me.get(ct),qt=Ze,qt.setIndex(Qs)),te.isMesh)V.wireframe===!0?(Se.setLineWidth(V.wireframeLinewidth*be()),qt.setMode(H.LINES)):qt.setMode(H.TRIANGLES);else if(te.isLine){let dt=V.linewidth;dt===void 0&&(dt=1),Se.setLineWidth(dt*be()),te.isLineSegments?qt.setMode(H.LINES):te.isLineLoop?qt.setMode(H.LINE_LOOP):qt.setMode(H.LINE_STRIP)}else te.isPoints?qt.setMode(H.POINTS):te.isSprite&&qt.setMode(H.TRIANGLES);if(te.isInstancedMesh)qt.renderInstances(Xt,Di,te.count);else if(K.isInstancedBufferGeometry){const dt=K._maxInstanceCount!==void 0?K._maxInstanceCount:1/0,jc=Math.min(K.instanceCount,dt);qt.renderInstances(Xt,Di,jc)}else qt.render(Xt,Di)},this.compile=function(I,W){function K(V,te,Be){V.transparent===!0&&V.side===wn?(V.side=_t,V.needsUpdate=!0,Xn(V,te,Be),V.side=ze,V.needsUpdate=!0,Xn(V,te,Be),V.side=wn):Xn(V,te,Be)}f=U.get(I),f.init(),_.push(f),I.traverseVisible(function(V){V.isLight&&V.layers.test(W.layers)&&(f.pushLight(V),V.castShadow&&f.pushShadow(V))}),f.setupLights(g.physicallyCorrectLights),I.traverse(function(V){const te=V.material;if(te)if(Array.isArray(te))for(let Be=0;Be<te.length;Be++){const Ke=te[Be];K(Ke,I,V)}else K(te,I,V)}),_.pop(),f=null};let ee=null;function ue(I){ee&&ee(I)}function Ce(){vt.stop()}function Oe(){vt.start()}const vt=new yh;vt.setAnimationLoop(ue),typeof self<"u"&&vt.setContext(self),this.setAnimationLoop=function(I){ee=I,De.setAnimationLoop(I),I===null?vt.stop():vt.start()},De.addEventListener("sessionstart",Ce),De.addEventListener("sessionend",Oe),this.render=function(I,W){if(W!==void 0&&W.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),W.parent===null&&W.matrixWorldAutoUpdate===!0&&W.updateMatrixWorld(),De.enabled===!0&&De.isPresenting===!0&&(De.cameraAutoUpdate===!0&&De.updateCamera(W),W=De.getCamera()),I.isScene===!0&&I.onBeforeRender(g,I,W,E),f=U.get(I,_.length),f.init(),_.push(f),$.multiplyMatrices(W.projectionMatrix,W.matrixWorldInverse),de.setFromProjectionMatrix($),me=this.localClippingEnabled,ie=P.init(this.clippingPlanes,me,W),d=yt.get(I,p.length),d.init(),p.push(d),tn(I,W,0,g.sortObjects),d.finish(),g.sortObjects===!0&&d.sort(he,Z),ie===!0&&P.beginShadows();const K=f.state.shadowsArray;if(Y.render(K,I,W),ie===!0&&P.endShadows(),this.info.autoReset===!0&&this.info.reset(),fe.render(d,I),f.setupLights(g.physicallyCorrectLights),W.isArrayCamera){const V=W.cameras;for(let te=0,Be=V.length;te<Be;te++){const Ke=V[te];mn(d,I,Ke,Ke.viewport)}}else mn(d,I,W);E!==null&&(se.updateMultisampleRenderTarget(E),se.updateRenderTargetMipmap(E)),I.isScene===!0&&I.onAfterRender(g,I,W),ne.resetDefaultState(),S=-1,R=null,_.pop(),_.length>0?f=_[_.length-1]:f=null,p.pop(),p.length>0?d=p[p.length-1]:d=null};function tn(I,W,K,V){if(I.visible===!1)return;if(I.layers.test(W.layers)){if(I.isGroup)K=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(W);else if(I.isLight)f.pushLight(I),I.castShadow&&f.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||de.intersectsSprite(I)){V&&ye.setFromMatrixPosition(I.matrixWorld).applyMatrix4($);const Ke=Ge.update(I),at=I.material;at.visible&&d.push(I,Ke,at,K,ye.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(I.isSkinnedMesh&&I.skeleton.frame!==ot.render.frame&&(I.skeleton.update(),I.skeleton.frame=ot.render.frame),!I.frustumCulled||de.intersectsObject(I))){V&&ye.setFromMatrixPosition(I.matrixWorld).applyMatrix4($);const Ke=Ge.update(I),at=I.material;if(Array.isArray(at)){const ct=Ke.groups;for(let gt=0,ht=ct.length;gt<ht;gt++){const ut=ct[gt],Xt=at[ut.materialIndex];Xt&&Xt.visible&&d.push(I,Ke,Xt,K,ye.z,ut)}}else at.visible&&d.push(I,Ke,at,K,ye.z,null)}}const Be=I.children;for(let Ke=0,at=Be.length;Ke<at;Ke++)tn(Be[Ke],W,K,V)}function mn(I,W,K,V){const te=I.opaque,Be=I.transmissive,Ke=I.transparent;f.setupLightsView(K),Be.length>0&&js(te,W,K),V&&Se.viewport(O.copy(V)),te.length>0&&Ot(te,W,K),Be.length>0&&Ot(Be,W,K),Ke.length>0&&Ot(Ke,W,K),Se.buffers.depth.setTest(!0),Se.buffers.depth.setMask(!0),Se.buffers.color.setMask(!0),Se.setPolygonOffset(!1)}function js(I,W,K){const V=Ye.isWebGL2;ce===null&&(ce=new Hn(1,1,{generateMipmaps:!0,type:Le.has("EXT_color_buffer_half_float")?Wi:_n,minFilter:ai,samples:V&&s===!0?4:0})),g.getDrawingBufferSize(J),V?ce.setSize(J.x,J.y):ce.setSize(ma(J.x),ma(J.y));const te=g.getRenderTarget();g.setRenderTarget(ce),g.clear();const Be=g.toneMapping;g.toneMapping=Cn,Ot(I,W,K),g.toneMapping=Be,se.updateMultisampleRenderTarget(ce),se.updateRenderTargetMipmap(ce),g.setRenderTarget(te)}function Ot(I,W,K){const V=W.isScene===!0?W.overrideMaterial:null;for(let te=0,Be=I.length;te<Be;te++){const Ke=I[te],at=Ke.object,ct=Ke.geometry,gt=V===null?Ke.material:V,ht=Ke.group;at.layers.test(K.layers)&&Ii(at,W,K,ct,gt,ht)}}function Ii(I,W,K,V,te,Be){I.onBeforeRender(g,W,K,V,te,Be),I.modelViewMatrix.multiplyMatrices(K.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),te.onBeforeRender(g,W,K,V,I,Be),te.transparent===!0&&te.side===wn?(te.side=_t,te.needsUpdate=!0,g.renderBufferDirect(K,W,V,te,I,Be),te.side=ze,te.needsUpdate=!0,g.renderBufferDirect(K,W,V,te,I,Be),te.side=wn):g.renderBufferDirect(K,W,V,te,I,Be),I.onAfterRender(g,W,K,V,te,Be)}function Xn(I,W,K){W.isScene!==!0&&(W=ge);const V=re.get(I),te=f.state.lights,Be=f.state.shadowsArray,Ke=te.state.version,at=ke.getParameters(I,te.state,Be,W,K),ct=ke.getProgramCacheKey(at);let gt=V.programs;V.environment=I.isMeshStandardMaterial?W.environment:null,V.fog=W.fog,V.envMap=(I.isMeshStandardMaterial?Ie:ve).get(I.envMap||V.environment),gt===void 0&&(I.addEventListener("dispose",Dt),gt=new Map,V.programs=gt);let ht=gt.get(ct);if(ht!==void 0){if(V.currentProgram===ht&&V.lightsStateVersion===Ke)return Ld(I,at),ht}else at.uniforms=ke.getUniforms(I),I.onBuild(K,at,g),I.onBeforeCompile(at,g),ht=ke.acquireProgram(at,ct),gt.set(ct,ht),V.uniforms=at.uniforms;const ut=V.uniforms;(!I.isShaderMaterial&&!I.isRawShaderMaterial||I.clipping===!0)&&(ut.clippingPlanes=P.uniform),Ld(I,at),V.needsLights=Pv(I),V.lightsStateVersion=Ke,V.needsLights&&(ut.ambientLightColor.value=te.state.ambient,ut.lightProbe.value=te.state.probe,ut.directionalLights.value=te.state.directional,ut.directionalLightShadows.value=te.state.directionalShadow,ut.spotLights.value=te.state.spot,ut.spotLightShadows.value=te.state.spotShadow,ut.rectAreaLights.value=te.state.rectArea,ut.ltc_1.value=te.state.rectAreaLTC1,ut.ltc_2.value=te.state.rectAreaLTC2,ut.pointLights.value=te.state.point,ut.pointLightShadows.value=te.state.pointShadow,ut.hemisphereLights.value=te.state.hemi,ut.directionalShadowMap.value=te.state.directionalShadowMap,ut.directionalShadowMatrix.value=te.state.directionalShadowMatrix,ut.spotShadowMap.value=te.state.spotShadowMap,ut.spotLightMatrix.value=te.state.spotLightMatrix,ut.spotLightMap.value=te.state.spotLightMap,ut.pointShadowMap.value=te.state.pointShadowMap,ut.pointShadowMatrix.value=te.state.pointShadowMatrix);const Xt=ht.getUniforms(),Nn=Va.seqWithValue(Xt.seq,ut);return V.currentProgram=ht,V.uniformsList=Nn,ht}function Ld(I,W){const K=re.get(I);K.outputEncoding=W.outputEncoding,K.instancing=W.instancing,K.skinning=W.skinning,K.morphTargets=W.morphTargets,K.morphNormals=W.morphNormals,K.morphColors=W.morphColors,K.morphTargetsCount=W.morphTargetsCount,K.numClippingPlanes=W.numClippingPlanes,K.numIntersection=W.numClipIntersection,K.vertexAlphas=W.vertexAlphas,K.vertexTangents=W.vertexTangents,K.toneMapping=W.toneMapping}function Rv(I,W,K,V,te){W.isScene!==!0&&(W=ge),se.resetTextureUnits();const Be=W.fog,Ke=V.isMeshStandardMaterial?W.environment:null,at=E===null?g.outputEncoding:E.isXRRenderTarget===!0?E.texture.encoding:un,ct=(V.isMeshStandardMaterial?Ie:ve).get(V.envMap||Ke),gt=V.vertexColors===!0&&!!K.attributes.color&&K.attributes.color.itemSize===4,ht=!!V.normalMap&&!!K.attributes.tangent,ut=!!K.morphAttributes.position,Xt=!!K.morphAttributes.normal,Nn=!!K.morphAttributes.color,Di=V.toneMapped?g.toneMapping:Cn,Qs=K.morphAttributes.position||K.morphAttributes.normal||K.morphAttributes.color,qt=Qs!==void 0?Qs.length:0,dt=re.get(V),jc=f.state.lights;if(ie===!0&&(me===!0||I!==R)){const Fn=I===R&&V.id===S;P.setState(V,I,Fn)}let nn=!1;V.version===dt.__version?(dt.needsLights&&dt.lightsStateVersion!==jc.state.version||dt.outputEncoding!==at||te.isInstancedMesh&&dt.instancing===!1||!te.isInstancedMesh&&dt.instancing===!0||te.isSkinnedMesh&&dt.skinning===!1||!te.isSkinnedMesh&&dt.skinning===!0||dt.envMap!==ct||V.fog===!0&&dt.fog!==Be||dt.numClippingPlanes!==void 0&&(dt.numClippingPlanes!==P.numPlanes||dt.numIntersection!==P.numIntersection)||dt.vertexAlphas!==gt||dt.vertexTangents!==ht||dt.morphTargets!==ut||dt.morphNormals!==Xt||dt.morphColors!==Nn||dt.toneMapping!==Di||Ye.isWebGL2===!0&&dt.morphTargetsCount!==qt)&&(nn=!0):(nn=!0,dt.__version=V.version);let er=dt.currentProgram;nn===!0&&(er=Xn(V,W,te));let Pd=!1,na=!1,Qc=!1;const bn=er.getUniforms(),tr=dt.uniforms;if(Se.useProgram(er.program)&&(Pd=!0,na=!0,Qc=!0),V.id!==S&&(S=V.id,na=!0),Pd||R!==I){if(bn.setValue(H,"projectionMatrix",I.projectionMatrix),Ye.logarithmicDepthBuffer&&bn.setValue(H,"logDepthBufFC",2/(Math.log(I.far+1)/Math.LN2)),R!==I&&(R=I,na=!0,Qc=!0),V.isShaderMaterial||V.isMeshPhongMaterial||V.isMeshToonMaterial||V.isMeshStandardMaterial||V.envMap){const Fn=bn.map.cameraPosition;Fn!==void 0&&Fn.setValue(H,ye.setFromMatrixPosition(I.matrixWorld))}(V.isMeshPhongMaterial||V.isMeshToonMaterial||V.isMeshLambertMaterial||V.isMeshBasicMaterial||V.isMeshStandardMaterial||V.isShaderMaterial)&&bn.setValue(H,"isOrthographic",I.isOrthographicCamera===!0),(V.isMeshPhongMaterial||V.isMeshToonMaterial||V.isMeshLambertMaterial||V.isMeshBasicMaterial||V.isMeshStandardMaterial||V.isShaderMaterial||V.isShadowMaterial||te.isSkinnedMesh)&&bn.setValue(H,"viewMatrix",I.matrixWorldInverse)}if(te.isSkinnedMesh){bn.setOptional(H,te,"bindMatrix"),bn.setOptional(H,te,"bindMatrixInverse");const Fn=te.skeleton;Fn&&(Ye.floatVertexTextures?(Fn.boneTexture===null&&Fn.computeBoneTexture(),bn.setValue(H,"boneTexture",Fn.boneTexture,se),bn.setValue(H,"boneTextureSize",Fn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const eh=K.morphAttributes;if((eh.position!==void 0||eh.normal!==void 0||eh.color!==void 0&&Ye.isWebGL2===!0)&&_e.update(te,K,V,er),(na||dt.receiveShadow!==te.receiveShadow)&&(dt.receiveShadow=te.receiveShadow,bn.setValue(H,"receiveShadow",te.receiveShadow)),V.isMeshGouraudMaterial&&V.envMap!==null&&(tr.envMap.value=ct,tr.flipEnvMap.value=ct.isCubeTexture&&ct.isRenderTargetTexture===!1?-1:1),na&&(bn.setValue(H,"toneMappingExposure",g.toneMappingExposure),dt.needsLights&&Lv(tr,Qc),Be&&V.fog===!0&&Lt.refreshFogUniforms(tr,Be),Lt.refreshMaterialUniforms(tr,V,X,z,ce),Va.upload(H,dt.uniformsList,tr,se)),V.isShaderMaterial&&V.uniformsNeedUpdate===!0&&(Va.upload(H,dt.uniformsList,tr,se),V.uniformsNeedUpdate=!1),V.isSpriteMaterial&&bn.setValue(H,"center",te.center),bn.setValue(H,"modelViewMatrix",te.modelViewMatrix),bn.setValue(H,"normalMatrix",te.normalMatrix),bn.setValue(H,"modelMatrix",te.matrixWorld),V.isShaderMaterial||V.isRawShaderMaterial){const Fn=V.uniformsGroups;for(let th=0,Iv=Fn.length;th<Iv;th++)if(Ye.isWebGL2){const Id=Fn[th];Fe.update(Id,er),Fe.bind(Id,er)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return er}function Lv(I,W){I.ambientLightColor.needsUpdate=W,I.lightProbe.needsUpdate=W,I.directionalLights.needsUpdate=W,I.directionalLightShadows.needsUpdate=W,I.pointLights.needsUpdate=W,I.pointLightShadows.needsUpdate=W,I.spotLights.needsUpdate=W,I.spotLightShadows.needsUpdate=W,I.rectAreaLights.needsUpdate=W,I.hemisphereLights.needsUpdate=W}function Pv(I){return I.isMeshLambertMaterial||I.isMeshToonMaterial||I.isMeshPhongMaterial||I.isMeshStandardMaterial||I.isShadowMaterial||I.isShaderMaterial&&I.lights===!0}this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return C},this.getRenderTarget=function(){return E},this.setRenderTargetTextures=function(I,W,K){re.get(I.texture).__webglTexture=W,re.get(I.depthTexture).__webglTexture=K;const V=re.get(I);V.__hasExternalTextures=!0,V.__hasExternalTextures&&(V.__autoAllocateDepthBuffer=K===void 0,V.__autoAllocateDepthBuffer||Le.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),V.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(I,W){const K=re.get(I);K.__webglFramebuffer=W,K.__useDefaultFramebuffer=W===void 0},this.setRenderTarget=function(I,W=0,K=0){E=I,b=W,C=K;let V=!0,te=null,Be=!1,Ke=!1;if(I){const ct=re.get(I);ct.__useDefaultFramebuffer!==void 0?(Se.bindFramebuffer(H.FRAMEBUFFER,null),V=!1):ct.__webglFramebuffer===void 0?se.setupRenderTarget(I):ct.__hasExternalTextures&&se.rebindTextures(I,re.get(I.texture).__webglTexture,re.get(I.depthTexture).__webglTexture);const gt=I.texture;(gt.isData3DTexture||gt.isDataArrayTexture||gt.isCompressedArrayTexture)&&(Ke=!0);const ht=re.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(te=ht[W],Be=!0):Ye.isWebGL2&&I.samples>0&&se.useMultisampledRTT(I)===!1?te=re.get(I).__webglMultisampledFramebuffer:te=ht,O.copy(I.viewport),B.copy(I.scissor),A=I.scissorTest}else O.copy(G).multiplyScalar(X).floor(),B.copy(Q).multiplyScalar(X).floor(),A=ae;if(Se.bindFramebuffer(H.FRAMEBUFFER,te)&&Ye.drawBuffers&&V&&Se.drawBuffers(I,te),Se.viewport(O),Se.scissor(B),Se.setScissorTest(A),Be){const ct=re.get(I.texture);H.framebufferTexture2D(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0,H.TEXTURE_CUBE_MAP_POSITIVE_X+W,ct.__webglTexture,K)}else if(Ke){const ct=re.get(I.texture),gt=W||0;H.framebufferTextureLayer(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0,ct.__webglTexture,K||0,gt)}S=-1},this.readRenderTargetPixels=function(I,W,K,V,te,Be,Ke){if(!(I&&I.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let at=re.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Ke!==void 0&&(at=at[Ke]),at){Se.bindFramebuffer(H.FRAMEBUFFER,at);try{const ct=I.texture,gt=ct.format,ht=ct.type;if(gt!==rn&&Te.convert(gt)!==H.getParameter(H.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ut=ht===Wi&&(Le.has("EXT_color_buffer_half_float")||Ye.isWebGL2&&Le.has("EXT_color_buffer_float"));if(ht!==_n&&Te.convert(ht)!==H.getParameter(H.IMPLEMENTATION_COLOR_READ_TYPE)&&!(ht===Bn&&(Ye.isWebGL2||Le.has("OES_texture_float")||Le.has("WEBGL_color_buffer_float")))&&!ut){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W>=0&&W<=I.width-V&&K>=0&&K<=I.height-te&&H.readPixels(W,K,V,te,Te.convert(gt),Te.convert(ht),Be)}finally{const ct=E!==null?re.get(E).__webglFramebuffer:null;Se.bindFramebuffer(H.FRAMEBUFFER,ct)}}},this.copyFramebufferToTexture=function(I,W,K=0){const V=Math.pow(2,-K),te=Math.floor(W.image.width*V),Be=Math.floor(W.image.height*V);se.setTexture2D(W,0),H.copyTexSubImage2D(H.TEXTURE_2D,K,0,0,I.x,I.y,te,Be),Se.unbindTexture()},this.copyTextureToTexture=function(I,W,K,V=0){const te=W.image.width,Be=W.image.height,Ke=Te.convert(K.format),at=Te.convert(K.type);se.setTexture2D(K,0),H.pixelStorei(H.UNPACK_FLIP_Y_WEBGL,K.flipY),H.pixelStorei(H.UNPACK_PREMULTIPLY_ALPHA_WEBGL,K.premultiplyAlpha),H.pixelStorei(H.UNPACK_ALIGNMENT,K.unpackAlignment),W.isDataTexture?H.texSubImage2D(H.TEXTURE_2D,V,I.x,I.y,te,Be,Ke,at,W.image.data):W.isCompressedTexture?H.compressedTexSubImage2D(H.TEXTURE_2D,V,I.x,I.y,W.mipmaps[0].width,W.mipmaps[0].height,Ke,W.mipmaps[0].data):H.texSubImage2D(H.TEXTURE_2D,V,I.x,I.y,Ke,at,W.image),V===0&&K.generateMipmaps&&H.generateMipmap(H.TEXTURE_2D),Se.unbindTexture()},this.copyTextureToTexture3D=function(I,W,K,V,te=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Be=I.max.x-I.min.x+1,Ke=I.max.y-I.min.y+1,at=I.max.z-I.min.z+1,ct=Te.convert(V.format),gt=Te.convert(V.type);let ht;if(V.isData3DTexture)se.setTexture3D(V,0),ht=H.TEXTURE_3D;else if(V.isDataArrayTexture)se.setTexture2DArray(V,0),ht=H.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}H.pixelStorei(H.UNPACK_FLIP_Y_WEBGL,V.flipY),H.pixelStorei(H.UNPACK_PREMULTIPLY_ALPHA_WEBGL,V.premultiplyAlpha),H.pixelStorei(H.UNPACK_ALIGNMENT,V.unpackAlignment);const ut=H.getParameter(H.UNPACK_ROW_LENGTH),Xt=H.getParameter(H.UNPACK_IMAGE_HEIGHT),Nn=H.getParameter(H.UNPACK_SKIP_PIXELS),Di=H.getParameter(H.UNPACK_SKIP_ROWS),Qs=H.getParameter(H.UNPACK_SKIP_IMAGES),qt=K.isCompressedTexture?K.mipmaps[0]:K.image;H.pixelStorei(H.UNPACK_ROW_LENGTH,qt.width),H.pixelStorei(H.UNPACK_IMAGE_HEIGHT,qt.height),H.pixelStorei(H.UNPACK_SKIP_PIXELS,I.min.x),H.pixelStorei(H.UNPACK_SKIP_ROWS,I.min.y),H.pixelStorei(H.UNPACK_SKIP_IMAGES,I.min.z),K.isDataTexture||K.isData3DTexture?H.texSubImage3D(ht,te,W.x,W.y,W.z,Be,Ke,at,ct,gt,qt.data):K.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),H.compressedTexSubImage3D(ht,te,W.x,W.y,W.z,Be,Ke,at,ct,qt.data)):H.texSubImage3D(ht,te,W.x,W.y,W.z,Be,Ke,at,ct,gt,qt),H.pixelStorei(H.UNPACK_ROW_LENGTH,ut),H.pixelStorei(H.UNPACK_IMAGE_HEIGHT,Xt),H.pixelStorei(H.UNPACK_SKIP_PIXELS,Nn),H.pixelStorei(H.UNPACK_SKIP_ROWS,Di),H.pixelStorei(H.UNPACK_SKIP_IMAGES,Qs),te===0&&V.generateMipmaps&&H.generateMipmap(ht),Se.unbindTexture()},this.initTexture=function(I){I.isCubeTexture?se.setTextureCube(I,0):I.isData3DTexture?se.setTexture3D(I,0):I.isDataArrayTexture||I.isCompressedArrayTexture?se.setTexture2DArray(I,0):se.setTexture2D(I,0),Se.unbindTexture()},this.resetState=function(){b=0,C=0,E=null,Se.reset(),ne.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class $h extends Jh{}$h.prototype.isWebGL1Renderer=!0;class Wa{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ae(e),this.density=t}clone(){return new Wa(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Xa{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Ae(e),this.near=t,this.far=n}clone(){return new Xa(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Kh extends pt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class qa{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=ts,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Ct()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ct()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ct()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const yn=new D;class zs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)yn.fromBufferAttribute(this,t),yn.applyMatrix4(e),this.setXYZ(t,yn.x,yn.y,yn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)yn.fromBufferAttribute(this,t),yn.applyNormalMatrix(e),this.setXYZ(t,yn.x,yn.y,yn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)yn.fromBufferAttribute(this,t),yn.transformDirection(e),this.setXYZ(t,yn.x,yn.y,yn.z);return this}setX(e,t){return this.normalized&&(t=Tt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Tt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Tt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Tt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=bi(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=bi(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=bi(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=bi(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Tt(t,this.array),n=Tt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Tt(t,this.array),n=Tt(n,this.array),i=Tt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=Tt(t,this.array),n=Tt(n,this.array),i=Tt(i,this.array),s=Tt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new At(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new zs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class mc extends pn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ae(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Vr;const Co=new D,Wr=new D,Xr=new D,qr=new oe,Ro=new oe,jh=new Qe,Ya=new D,Lo=new D,Za=new D,Qh=new oe,gc=new oe,eu=new oe;class tu extends pt{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",Vr===void 0){Vr=new rt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new qa(t,5);Vr.setIndex([0,1,2,0,2,3]),Vr.setAttribute("position",new zs(n,3,0,!1)),Vr.setAttribute("uv",new zs(n,2,3,!1))}this.geometry=Vr,this.material=e!==void 0?e:new mc,this.center=new oe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Wr.setFromMatrixScale(this.matrixWorld),jh.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Xr.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Wr.multiplyScalar(-Xr.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;Ja(Ya.set(-.5,-.5,0),Xr,o,Wr,i,s),Ja(Lo.set(.5,-.5,0),Xr,o,Wr,i,s),Ja(Za.set(.5,.5,0),Xr,o,Wr,i,s),Qh.set(0,0),gc.set(1,0),eu.set(1,1);let a=e.ray.intersectTriangle(Ya,Lo,Za,!1,Co);if(a===null&&(Ja(Lo.set(-.5,.5,0),Xr,o,Wr,i,s),gc.set(0,1),a=e.ray.intersectTriangle(Ya,Za,Lo,!1,Co),a===null))return;const l=e.ray.origin.distanceTo(Co);l<e.near||l>e.far||t.push({distance:l,point:Co.clone(),uv:Gn.getUV(Co,Ya,Lo,Za,Qh,gc,eu,new oe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Ja(r,e,t,n,i,s){qr.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(Ro.x=s*qr.x-i*qr.y,Ro.y=i*qr.x+s*qr.y):Ro.copy(qr),r.copy(e),r.x+=Ro.x,r.y+=Ro.y,r.applyMatrix4(jh)}const $a=new D,nu=new D;class iu extends pt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){$a.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo($a);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){$a.setFromMatrixPosition(e.matrixWorld),nu.setFromMatrixPosition(this.matrixWorld);const n=$a.distanceTo(nu)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let o=t[i].distance;if(t[i].object.visible&&(o-=o*t[i].hysteresis),n>=o)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const su=new D,ru=new xt,ou=new xt,f_=new D,au=new Qe;class lu extends an{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Qe,this.bindMatrixInverse=new Qe}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new xt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;ru.fromBufferAttribute(i.attributes.skinIndex,e),ou.fromBufferAttribute(i.attributes.skinWeight,e),su.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=ou.getComponent(s);if(o!==0){const a=ru.getComponent(s);au.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(f_.copy(su).applyMatrix4(au),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class _c extends pt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Yr extends Ht{constructor(e=null,t=1,n=1,i,s,o,a,l,h=It,u=It,d,f){super(null,o,a,l,h,u,i,s,d,f),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const cu=new Qe,p_=new Qe;class Ka{constructor(e=[],t=[]){this.uuid=Ct(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Qe)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Qe;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:p_;cu.multiplyMatrices(a,t[s]),cu.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Ka(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=ih(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Yr(t,e,e,rn,Bn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new _c),this.bones.push(o),this.boneInverses.push(new Qe().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const o=t[i];e.bones.push(o.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class Zr extends At{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const hu=new Qe,uu=new Qe,ja=[],m_=new Qe,Po=new an;class du extends an{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Zr(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1;for(let i=0;i<n;i++)this.setMatrixAt(i,m_)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Po.geometry=this.geometry,Po.material=this.material,Po.material!==void 0)for(let s=0;s<i;s++){this.getMatrixAt(s,hu),uu.multiplyMatrices(n,hu),Po.matrixWorld=uu,Po.raycast(e,ja);for(let o=0,a=ja.length;o<a;o++){const l=ja[o];l.instanceId=s,l.object=this,t.push(l)}ja.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Zr(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Mn extends pn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ae(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const fu=new D,pu=new D,mu=new Qe,vc=new wo,Qa=new Fs;class fs extends pt{constructor(e=new rt,t=new Mn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)fu.fromBufferAttribute(t,i-1),pu.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=fu.distanceTo(pu);e.setAttribute("lineDistance",new Pe(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Qa.copy(n.boundingSphere),Qa.applyMatrix4(i),Qa.radius+=s,e.ray.intersectsSphere(Qa)===!1)return;mu.copy(i).invert(),vc.copy(e.ray).applyMatrix4(mu);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,h=new D,u=new D,d=new D,f=new D,p=this.isLineSegments?2:1,_=n.index,m=n.attributes.position;if(_!==null){const b=Math.max(0,o.start),C=Math.min(_.count,o.start+o.count);for(let E=b,S=C-1;E<S;E+=p){const R=_.getX(E),O=_.getX(E+1);if(h.fromBufferAttribute(m,R),u.fromBufferAttribute(m,O),vc.distanceSqToSegment(h,u,f,d)>l)continue;f.applyMatrix4(this.matrixWorld);const A=e.ray.origin.distanceTo(f);A<e.near||A>e.far||t.push({distance:A,point:d.clone().applyMatrix4(this.matrixWorld),index:E,face:null,faceIndex:null,object:this})}}else{const b=Math.max(0,o.start),C=Math.min(m.count,o.start+o.count);for(let E=b,S=C-1;E<S;E+=p){if(h.fromBufferAttribute(m,E),u.fromBufferAttribute(m,E+1),vc.distanceSqToSegment(h,u,f,d)>l)continue;f.applyMatrix4(this.matrixWorld);const O=e.ray.origin.distanceTo(f);O<e.near||O>e.far||t.push({distance:O,point:d.clone().applyMatrix4(this.matrixWorld),index:E,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}const gu=new D,_u=new D;class mi extends fs{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)gu.fromBufferAttribute(t,i),_u.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+gu.distanceTo(_u);e.setAttribute("lineDistance",new Pe(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class vu extends fs{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class xc extends pn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ae(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const xu=new Qe,yc=new wo,el=new Fs,tl=new D;class yu extends pt{constructor(e=new rt,t=new xc){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),el.copy(n.boundingSphere),el.applyMatrix4(i),el.radius+=s,e.ray.intersectsSphere(el)===!1)return;xu.copy(i).invert(),yc.copy(e.ray).applyMatrix4(xu);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,h=n.index,d=n.attributes.position;if(h!==null){const f=Math.max(0,o.start),p=Math.min(h.count,o.start+o.count);for(let _=f,g=p;_<g;_++){const m=h.getX(_);tl.fromBufferAttribute(d,m),Mu(tl,m,l,i,e,t,this)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let _=f,g=p;_<g;_++)tl.fromBufferAttribute(d,_),Mu(tl,_,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function Mu(r,e,t,n,i,s,o){const a=yc.distanceSqToPoint(r);if(a<t){const l=new D;yc.closestPointToPoint(r,l),l.applyMatrix4(n);const h=i.ray.origin.distanceTo(l);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}class g_ extends Ht{constructor(e,t,n,i,s,o,a,l,h){super(e,t,n,i,s,o,a,l,h),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:st,this.magFilter=s!==void 0?s:st,this.generateMipmaps=!1;const u=this;function d(){u.needsUpdate=!0,e.requestVideoFrameCallback(d)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(d)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class __ extends Ht{constructor(e,t,n){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=n,this.magFilter=It,this.minFilter=It,this.generateMipmaps=!1,this.needsUpdate=!0}}class Mc extends Ht{constructor(e,t,n,i,s,o,a,l,h,u,d,f){super(null,o,a,l,h,u,i,s,d,f),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class v_ extends Mc{constructor(e,t,n,i,s,o){super(e,t,n,s,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=jt}}class x_ extends Ht{constructor(e,t,n,i,s,o,a,l,h){super(e,t,n,i,s,o,a,l,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class ti{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let a=0,l=s-1,h;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),h=n[i]-o,h<0)a=i+1;else if(h>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(s-1);const u=n[i],f=n[i+1]-u,p=(o-u)/f;return(i+p)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),l=t||(o.isVector2?new oe:new D);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,i=[],s=[],o=[],a=new D,l=new Qe;for(let p=0;p<=e;p++){const _=p/e;i[p]=this.getTangentAt(_,new D)}s[0]=new D,o[0]=new D;let h=Number.MAX_VALUE;const u=Math.abs(i[0].x),d=Math.abs(i[0].y),f=Math.abs(i[0].z);u<=h&&(h=u,n.set(1,0,0)),d<=h&&(h=d,n.set(0,1,0)),f<=h&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let p=1;p<=e;p++){if(s[p]=s[p-1].clone(),o[p]=o[p-1].clone(),a.crossVectors(i[p-1],i[p]),a.length()>Number.EPSILON){a.normalize();const _=Math.acos(tt(i[p-1].dot(i[p]),-1,1));s[p].applyMatrix4(l.makeRotationAxis(a,_))}o[p].crossVectors(i[p],s[p])}if(t===!0){let p=Math.acos(tt(s[0].dot(s[e]),-1,1));p/=e,i[0].dot(a.crossVectors(s[0],s[e]))>0&&(p=-p);for(let _=1;_<=e;_++)s[_].applyMatrix4(l.makeRotationAxis(i[_],p*_)),o[_].crossVectors(i[_],s[_])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class nl extends ti{constructor(e=0,t=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t){const n=t||new oe,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),h=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),d=Math.sin(this.aRotation),f=l-this.aX,p=h-this.aY;l=f*u-p*d+this.aX,h=f*d+p*u+this.aY}return n.set(l,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class bu extends nl{constructor(e,t,n,i,s,o){super(e,t,n,n,i,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function bc(){let r=0,e=0,t=0,n=0;function i(s,o,a,l){r=s,e=a,t=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,h){i(o,a,h*(a-s),h*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,h,u,d){let f=(o-s)/h-(a-s)/(h+u)+(a-o)/u,p=(a-o)/u-(l-o)/(u+d)+(l-a)/d;f*=u,p*=u,i(o,a,f,p)},calc:function(s){const o=s*s,a=o*s;return r+e*s+t*o+n*a}}}const il=new D,wc=new bc,Sc=new bc,Ec=new bc;class wu extends ti{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new D){const n=t,i=this.points,s=i.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let h,u;this.closed||a>0?h=i[(a-1)%s]:(il.subVectors(i[0],i[1]).add(i[0]),h=il);const d=i[a%s],f=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(il.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=il),this.curveType==="centripetal"||this.curveType==="chordal"){const p=this.curveType==="chordal"?.5:.25;let _=Math.pow(h.distanceToSquared(d),p),g=Math.pow(d.distanceToSquared(f),p),m=Math.pow(f.distanceToSquared(u),p);g<1e-4&&(g=1),_<1e-4&&(_=g),m<1e-4&&(m=g),wc.initNonuniformCatmullRom(h.x,d.x,f.x,u.x,_,g,m),Sc.initNonuniformCatmullRom(h.y,d.y,f.y,u.y,_,g,m),Ec.initNonuniformCatmullRom(h.z,d.z,f.z,u.z,_,g,m)}else this.curveType==="catmullrom"&&(wc.initCatmullRom(h.x,d.x,f.x,u.x,this.tension),Sc.initCatmullRom(h.y,d.y,f.y,u.y,this.tension),Ec.initCatmullRom(h.z,d.z,f.z,u.z,this.tension));return n.set(wc.calc(l),Sc.calc(l),Ec.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new D().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Su(r,e,t,n,i){const s=(n-e)*.5,o=(i-t)*.5,a=r*r,l=r*a;return(2*t-2*n+s+o)*l+(-3*t+3*n-2*s-o)*a+s*r+t}function y_(r,e){const t=1-r;return t*t*e}function M_(r,e){return 2*(1-r)*r*e}function b_(r,e){return r*r*e}function Io(r,e,t,n){return y_(r,e)+M_(r,t)+b_(r,n)}function w_(r,e){const t=1-r;return t*t*t*e}function S_(r,e){const t=1-r;return 3*t*t*r*e}function E_(r,e){return 3*(1-r)*r*r*e}function T_(r,e){return r*r*r*e}function Do(r,e,t,n,i){return w_(r,e)+S_(r,t)+E_(r,n)+T_(r,i)}class Tc extends ti{constructor(e=new oe,t=new oe,n=new oe,i=new oe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new oe){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Do(e,i.x,s.x,o.x,a.x),Do(e,i.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Eu extends ti{constructor(e=new D,t=new D,n=new D,i=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Do(e,i.x,s.x,o.x,a.x),Do(e,i.y,s.y,o.y,a.y),Do(e,i.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class sl extends ti{constructor(e=new oe,t=new oe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new oe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new oe;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Tu extends ti{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ac extends ti{constructor(e=new oe,t=new oe,n=new oe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new oe){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(Io(e,i.x,s.x,o.x),Io(e,i.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Cc extends ti{constructor(e=new D,t=new D,n=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(Io(e,i.x,s.x,o.x),Io(e,i.y,s.y,o.y),Io(e,i.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Rc extends ti{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new oe){const n=t,i=this.points,s=(i.length-1)*e,o=Math.floor(s),a=s-o,l=i[o===0?o:o-1],h=i[o],u=i[o>i.length-2?i.length-1:o+1],d=i[o>i.length-3?i.length-1:o+2];return n.set(Su(a,l.x,h.x,u.x,d.x),Su(a,l.y,h.y,u.y,d.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new oe().fromArray(i))}return this}}var Lc=Object.freeze({__proto__:null,ArcCurve:bu,CatmullRomCurve3:wu,CubicBezierCurve:Tc,CubicBezierCurve3:Eu,EllipseCurve:nl,LineCurve:sl,LineCurve3:Tu,QuadraticBezierCurve:Ac,QuadraticBezierCurve3:Cc,SplineCurve:Rc});class Au extends ti{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new sl(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],l=a.getLength(),h=l===0?0:1-o/l;return a.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let h=0;h<l.length;h++){const u=l[h];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Lc[i.type]().fromJSON(i))}return this}}class Oo extends Au{constructor(e){super(),this.type="Path",this.currentPoint=new oe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new sl(this.currentPoint.clone(),new oe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Ac(this.currentPoint.clone(),new oe(e,t),new oe(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,o){const a=new Tc(this.currentPoint.clone(),new oe(e,t),new oe(n,i),new oe(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Rc(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,n,i,s,o),this}absarc(e,t,n,i,s,o){return this.absellipse(e,t,n,n,i,s,o),this}ellipse(e,t,n,i,s,o,a,l){const h=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+h,t+u,n,i,s,o,a,l),this}absellipse(e,t,n,i,s,o,a,l){const h=new nl(e,t,n,i,s,o,a,l);if(this.curves.length>0){const d=h.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(h);const u=h.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Jr extends rt{constructor(e=[new oe(0,-.5),new oe(.5,0),new oe(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=tt(i,0,Math.PI*2);const s=[],o=[],a=[],l=[],h=[],u=1/t,d=new D,f=new oe,p=new D,_=new D,g=new D;let m=0,b=0;for(let C=0;C<=e.length-1;C++)switch(C){case 0:m=e[C+1].x-e[C].x,b=e[C+1].y-e[C].y,p.x=b*1,p.y=-m,p.z=b*0,g.copy(p),p.normalize(),l.push(p.x,p.y,p.z);break;case e.length-1:l.push(g.x,g.y,g.z);break;default:m=e[C+1].x-e[C].x,b=e[C+1].y-e[C].y,p.x=b*1,p.y=-m,p.z=b*0,_.copy(p),p.x+=g.x,p.y+=g.y,p.z+=g.z,p.normalize(),l.push(p.x,p.y,p.z),g.copy(_)}for(let C=0;C<=t;C++){const E=n+C*u*i,S=Math.sin(E),R=Math.cos(E);for(let O=0;O<=e.length-1;O++){d.x=e[O].x*S,d.y=e[O].y,d.z=e[O].x*R,o.push(d.x,d.y,d.z),f.x=C/t,f.y=O/(e.length-1),a.push(f.x,f.y);const B=l[3*O+0]*S,A=l[3*O+1],F=l[3*O+0]*R;h.push(B,A,F)}}for(let C=0;C<t;C++)for(let E=0;E<e.length-1;E++){const S=E+C*e.length,R=S,O=S+e.length,B=S+e.length+1,A=S+1;s.push(R,O,A),s.push(B,A,O)}this.setIndex(s),this.setAttribute("position",new Pe(o,3)),this.setAttribute("uv",new Pe(a,2)),this.setAttribute("normal",new Pe(h,3))}static fromJSON(e){return new Jr(e.points,e.segments,e.phiStart,e.phiLength)}}class No extends Jr{constructor(e=1,t=1,n=4,i=8){const s=new Oo;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new No(e.radius,e.length,e.capSegments,e.radialSegments)}}class Fo extends rt{constructor(e=1,t=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],o=[],a=[],l=[],h=new D,u=new oe;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let d=0,f=3;d<=t;d++,f+=3){const p=n+d/t*i;h.x=e*Math.cos(p),h.y=e*Math.sin(p),o.push(h.x,h.y,h.z),a.push(0,0,1),u.x=(o[f]/e+1)/2,u.y=(o[f+1]/e+1)/2,l.push(u.x,u.y)}for(let d=1;d<=t;d++)s.push(d,d+1,0);this.setIndex(s),this.setAttribute("position",new Pe(o,3)),this.setAttribute("normal",new Pe(a,3)),this.setAttribute("uv",new Pe(l,2))}static fromJSON(e){return new Fo(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class ks extends rt{constructor(e=1,t=1,n=1,i=8,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const h=this;i=Math.floor(i),s=Math.floor(s);const u=[],d=[],f=[],p=[];let _=0;const g=[],m=n/2;let b=0;C(),o===!1&&(e>0&&E(!0),t>0&&E(!1)),this.setIndex(u),this.setAttribute("position",new Pe(d,3)),this.setAttribute("normal",new Pe(f,3)),this.setAttribute("uv",new Pe(p,2));function C(){const S=new D,R=new D;let O=0;const B=(t-e)/n;for(let A=0;A<=s;A++){const F=[],z=A/s,X=z*(t-e)+e;for(let he=0;he<=i;he++){const Z=he/i,G=Z*l+a,Q=Math.sin(G),ae=Math.cos(G);R.x=X*Q,R.y=-z*n+m,R.z=X*ae,d.push(R.x,R.y,R.z),S.set(Q,B,ae).normalize(),f.push(S.x,S.y,S.z),p.push(Z,1-z),F.push(_++)}g.push(F)}for(let A=0;A<i;A++)for(let F=0;F<s;F++){const z=g[F][A],X=g[F+1][A],he=g[F+1][A+1],Z=g[F][A+1];u.push(z,X,Z),u.push(X,he,Z),O+=6}h.addGroup(b,O,0),b+=O}function E(S){const R=_,O=new oe,B=new D;let A=0;const F=S===!0?e:t,z=S===!0?1:-1;for(let he=1;he<=i;he++)d.push(0,m*z,0),f.push(0,z,0),p.push(.5,.5),_++;const X=_;for(let he=0;he<=i;he++){const G=he/i*l+a,Q=Math.cos(G),ae=Math.sin(G);B.x=F*ae,B.y=m*z,B.z=F*Q,d.push(B.x,B.y,B.z),f.push(0,z,0),O.x=Q*.5+.5,O.y=ae*.5*z+.5,p.push(O.x,O.y),_++}for(let he=0;he<i;he++){const Z=R+he,G=X+he;S===!0?u.push(G,G+1,Z):u.push(G+1,G,Z),A+=3}h.addGroup(b,A,S===!0?1:2),b+=A}}static fromJSON(e){return new ks(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Uo extends ks{constructor(e=1,t=1,n=8,i=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Uo(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ci extends rt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],o=[];a(i),h(n),u(),this.setAttribute("position",new Pe(s,3)),this.setAttribute("normal",new Pe(s.slice(),3)),this.setAttribute("uv",new Pe(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(C){const E=new D,S=new D,R=new D;for(let O=0;O<t.length;O+=3)p(t[O+0],E),p(t[O+1],S),p(t[O+2],R),l(E,S,R,C)}function l(C,E,S,R){const O=R+1,B=[];for(let A=0;A<=O;A++){B[A]=[];const F=C.clone().lerp(S,A/O),z=E.clone().lerp(S,A/O),X=O-A;for(let he=0;he<=X;he++)he===0&&A===O?B[A][he]=F:B[A][he]=F.clone().lerp(z,he/X)}for(let A=0;A<O;A++)for(let F=0;F<2*(O-A)-1;F++){const z=Math.floor(F/2);F%2===0?(f(B[A][z+1]),f(B[A+1][z]),f(B[A][z])):(f(B[A][z+1]),f(B[A+1][z+1]),f(B[A+1][z]))}}function h(C){const E=new D;for(let S=0;S<s.length;S+=3)E.x=s[S+0],E.y=s[S+1],E.z=s[S+2],E.normalize().multiplyScalar(C),s[S+0]=E.x,s[S+1]=E.y,s[S+2]=E.z}function u(){const C=new D;for(let E=0;E<s.length;E+=3){C.x=s[E+0],C.y=s[E+1],C.z=s[E+2];const S=m(C)/2/Math.PI+.5,R=b(C)/Math.PI+.5;o.push(S,1-R)}_(),d()}function d(){for(let C=0;C<o.length;C+=6){const E=o[C+0],S=o[C+2],R=o[C+4],O=Math.max(E,S,R),B=Math.min(E,S,R);O>.9&&B<.1&&(E<.2&&(o[C+0]+=1),S<.2&&(o[C+2]+=1),R<.2&&(o[C+4]+=1))}}function f(C){s.push(C.x,C.y,C.z)}function p(C,E){const S=C*3;E.x=e[S+0],E.y=e[S+1],E.z=e[S+2]}function _(){const C=new D,E=new D,S=new D,R=new D,O=new oe,B=new oe,A=new oe;for(let F=0,z=0;F<s.length;F+=9,z+=6){C.set(s[F+0],s[F+1],s[F+2]),E.set(s[F+3],s[F+4],s[F+5]),S.set(s[F+6],s[F+7],s[F+8]),O.set(o[z+0],o[z+1]),B.set(o[z+2],o[z+3]),A.set(o[z+4],o[z+5]),R.copy(C).add(E).add(S).divideScalar(3);const X=m(R);g(O,z+0,C,X),g(B,z+2,E,X),g(A,z+4,S,X)}}function g(C,E,S,R){R<0&&C.x===1&&(o[E]=C.x-1),S.x===0&&S.z===0&&(o[E]=R/2/Math.PI+.5)}function m(C){return Math.atan2(C.z,-C.x)}function b(C){return Math.atan2(-C.y,Math.sqrt(C.x*C.x+C.z*C.z))}}static fromJSON(e){return new Ci(e.vertices,e.indices,e.radius,e.details)}}class Bo extends Ci{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Bo(e.radius,e.detail)}}const rl=new D,ol=new D,Pc=new D,al=new Gn;class Cu extends rt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(Ne*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,h=[0,0,0],u=["a","b","c"],d=new Array(3),f={},p=[];for(let _=0;_<l;_+=3){o?(h[0]=o.getX(_),h[1]=o.getX(_+1),h[2]=o.getX(_+2)):(h[0]=_,h[1]=_+1,h[2]=_+2);const{a:g,b:m,c:b}=al;if(g.fromBufferAttribute(a,h[0]),m.fromBufferAttribute(a,h[1]),b.fromBufferAttribute(a,h[2]),al.getNormal(Pc),d[0]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,d[1]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,d[2]=`${Math.round(b.x*i)},${Math.round(b.y*i)},${Math.round(b.z*i)}`,!(d[0]===d[1]||d[1]===d[2]||d[2]===d[0]))for(let C=0;C<3;C++){const E=(C+1)%3,S=d[C],R=d[E],O=al[u[C]],B=al[u[E]],A=`${S}_${R}`,F=`${R}_${S}`;F in f&&f[F]?(Pc.dot(f[F].normal)<=s&&(p.push(O.x,O.y,O.z),p.push(B.x,B.y,B.z)),f[F]=null):A in f||(f[A]={index0:h[C],index1:h[E],normal:Pc.clone()})}}for(const _ in f)if(f[_]){const{index0:g,index1:m}=f[_];rl.fromBufferAttribute(a,g),ol.fromBufferAttribute(a,m),p.push(rl.x,rl.y,rl.z),p.push(ol.x,ol.y,ol.z)}this.setAttribute("position",new Pe(p,3))}}}class Hs extends Oo{constructor(e){super(e),this.uuid=Ct(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Oo().fromJSON(i))}return this}}const A_={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=Ru(r,0,i,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,h,u,d,f,p;if(n&&(s=I_(r,e,s,t)),r.length>80*t){a=h=r[0],l=u=r[1];for(let _=t;_<i;_+=t)d=r[_],f=r[_+1],d<a&&(a=d),f<l&&(l=f),d>h&&(h=d),f>u&&(u=f);p=Math.max(h-a,u-l),p=p!==0?32767/p:0}return zo(s,o,t,a,l,p,0),o}};function Ru(r,e,t,n,i){let s,o;if(i===V_(r,e,t,n)>0)for(s=e;s<t;s+=n)o=Iu(s,r[s],r[s+1],o);else for(s=t-n;s>=e;s-=n)o=Iu(s,r[s],r[s+1],o);return o&&ll(o,o.next)&&(Ho(o),o=o.next),o}function Gs(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(ll(t,t.next)||Bt(t.prev,t,t.next)===0)){if(Ho(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function zo(r,e,t,n,i,s,o){if(!r)return;!o&&s&&U_(r,n,i,s);let a=r,l,h;for(;r.prev!==r.next;){if(l=r.prev,h=r.next,s?R_(r,n,i,s):C_(r)){e.push(l.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),Ho(r),r=h.next,a=h.next;continue}if(r=h,r===a){o?o===1?(r=L_(Gs(r),e,t),zo(r,e,t,n,i,s,2)):o===2&&P_(r,e,t,n,i,s):zo(Gs(r),e,t,n,i,s,1);break}}}function C_(r){const e=r.prev,t=r,n=r.next;if(Bt(e,t,n)>=0)return!1;const i=e.x,s=t.x,o=n.x,a=e.y,l=t.y,h=n.y,u=i<s?i<o?i:o:s<o?s:o,d=a<l?a<h?a:h:l<h?l:h,f=i>s?i>o?i:o:s>o?s:o,p=a>l?a>h?a:h:l>h?l:h;let _=n.next;for(;_!==e;){if(_.x>=u&&_.x<=f&&_.y>=d&&_.y<=p&&$r(i,a,s,l,o,h,_.x,_.y)&&Bt(_.prev,_,_.next)>=0)return!1;_=_.next}return!0}function R_(r,e,t,n){const i=r.prev,s=r,o=r.next;if(Bt(i,s,o)>=0)return!1;const a=i.x,l=s.x,h=o.x,u=i.y,d=s.y,f=o.y,p=a<l?a<h?a:h:l<h?l:h,_=u<d?u<f?u:f:d<f?d:f,g=a>l?a>h?a:h:l>h?l:h,m=u>d?u>f?u:f:d>f?d:f,b=Ic(p,_,e,t,n),C=Ic(g,m,e,t,n);let E=r.prevZ,S=r.nextZ;for(;E&&E.z>=b&&S&&S.z<=C;){if(E.x>=p&&E.x<=g&&E.y>=_&&E.y<=m&&E!==i&&E!==o&&$r(a,u,l,d,h,f,E.x,E.y)&&Bt(E.prev,E,E.next)>=0||(E=E.prevZ,S.x>=p&&S.x<=g&&S.y>=_&&S.y<=m&&S!==i&&S!==o&&$r(a,u,l,d,h,f,S.x,S.y)&&Bt(S.prev,S,S.next)>=0))return!1;S=S.nextZ}for(;E&&E.z>=b;){if(E.x>=p&&E.x<=g&&E.y>=_&&E.y<=m&&E!==i&&E!==o&&$r(a,u,l,d,h,f,E.x,E.y)&&Bt(E.prev,E,E.next)>=0)return!1;E=E.prevZ}for(;S&&S.z<=C;){if(S.x>=p&&S.x<=g&&S.y>=_&&S.y<=m&&S!==i&&S!==o&&$r(a,u,l,d,h,f,S.x,S.y)&&Bt(S.prev,S,S.next)>=0)return!1;S=S.nextZ}return!0}function L_(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!ll(i,s)&&Lu(i,n,n.next,s)&&ko(i,s)&&ko(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Ho(n),Ho(n.next),n=r=s),n=n.next}while(n!==r);return Gs(n)}function P_(r,e,t,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&k_(o,a)){let l=Pu(o,a);o=Gs(o,o.next),l=Gs(l,l.next),zo(o,e,t,n,i,s,0),zo(l,e,t,n,i,s,0);return}a=a.next}o=o.next}while(o!==r)}function I_(r,e,t,n){const i=[];let s,o,a,l,h;for(s=0,o=e.length;s<o;s++)a=e[s]*n,l=s<o-1?e[s+1]*n:r.length,h=Ru(r,a,l,n,!1),h===h.next&&(h.steiner=!0),i.push(z_(h));for(i.sort(D_),s=0;s<i.length;s++)t=O_(i[s],t);return t}function D_(r,e){return r.x-e.x}function O_(r,e){const t=N_(r,e);if(!t)return e;const n=Pu(t,r);return Gs(n,n.next),Gs(t,t.next)}function N_(r,e){let t=e,n=-1/0,i;const s=r.x,o=r.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const f=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=s&&f>n&&(n=f,i=t.x<t.next.x?t:t.next,f===s))return i}t=t.next}while(t!==e);if(!i)return null;const a=i,l=i.x,h=i.y;let u=1/0,d;t=i;do s>=t.x&&t.x>=l&&s!==t.x&&$r(o<h?s:n,o,l,h,o<h?n:s,o,t.x,t.y)&&(d=Math.abs(o-t.y)/(s-t.x),ko(t,r)&&(d<u||d===u&&(t.x>i.x||t.x===i.x&&F_(i,t)))&&(i=t,u=d)),t=t.next;while(t!==a);return i}function F_(r,e){return Bt(r.prev,r,e.prev)<0&&Bt(e.next,r,r.next)<0}function U_(r,e,t,n){let i=r;do i.z===0&&(i.z=Ic(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,B_(i)}function B_(r){let e,t,n,i,s,o,a,l,h=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,n=t,a=0,e=0;e<h&&(a++,n=n.nextZ,!!n);e++);for(l=h;a>0||l>0&&n;)a!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(o>1);return r}function Ic(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function z_(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function $r(r,e,t,n,i,s,o,a){return(i-o)*(e-a)>=(r-o)*(s-a)&&(r-o)*(n-a)>=(t-o)*(e-a)&&(t-o)*(s-a)>=(i-o)*(n-a)}function k_(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!H_(r,e)&&(ko(r,e)&&ko(e,r)&&G_(r,e)&&(Bt(r.prev,r,e.prev)||Bt(r,e.prev,e))||ll(r,e)&&Bt(r.prev,r,r.next)>0&&Bt(e.prev,e,e.next)>0)}function Bt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function ll(r,e){return r.x===e.x&&r.y===e.y}function Lu(r,e,t,n){const i=hl(Bt(r,e,t)),s=hl(Bt(r,e,n)),o=hl(Bt(t,n,r)),a=hl(Bt(t,n,e));return!!(i!==s&&o!==a||i===0&&cl(r,t,e)||s===0&&cl(r,n,e)||o===0&&cl(t,r,n)||a===0&&cl(t,e,n))}function cl(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function hl(r){return r>0?1:r<0?-1:0}function H_(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Lu(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function ko(r,e){return Bt(r.prev,r,r.next)<0?Bt(r,e,r.next)>=0&&Bt(r,r.prev,e)>=0:Bt(r,e,r.prev)<0||Bt(r,r.next,e)<0}function G_(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function Pu(r,e){const t=new Dc(r.i,r.x,r.y),n=new Dc(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Iu(r,e,t,n){const i=new Dc(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Ho(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Dc(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function V_(r,e,t,n){let i=0;for(let s=e,o=t-n;s<t;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class gi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return gi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Du(e),Ou(n,e);let o=e.length;t.forEach(Du);for(let l=0;l<t.length;l++)i.push(o),o+=t[l].length,Ou(n,t[l]);const a=A_.triangulate(n,i);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function Du(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Ou(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Go extends rt{constructor(e=new Hs([new oe(.5,.5),new oe(-.5,.5),new oe(-.5,-.5),new oe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let a=0,l=e.length;a<l;a++){const h=e[a];o(h)}this.setAttribute("position",new Pe(i,3)),this.setAttribute("uv",new Pe(s,2)),this.computeVertexNormals();function o(a){const l=[],h=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,d=t.depth!==void 0?t.depth:1;let f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,p=t.bevelThickness!==void 0?t.bevelThickness:.2,_=t.bevelSize!==void 0?t.bevelSize:p-.1,g=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const b=t.extrudePath,C=t.UVGenerator!==void 0?t.UVGenerator:W_;let E,S=!1,R,O,B,A;b&&(E=b.getSpacedPoints(u),S=!0,f=!1,R=b.computeFrenetFrames(u,!1),O=new D,B=new D,A=new D),f||(m=0,p=0,_=0,g=0);const F=a.extractPoints(h);let z=F.shape;const X=F.holes;if(!gi.isClockWise(z)){z=z.reverse();for(let re=0,se=X.length;re<se;re++){const ve=X[re];gi.isClockWise(ve)&&(X[re]=ve.reverse())}}const Z=gi.triangulateShape(z,X),G=z;for(let re=0,se=X.length;re<se;re++){const ve=X[re];z=z.concat(ve)}function Q(re,se,ve){return se||console.error("THREE.ExtrudeGeometry: vec does not exist"),se.clone().multiplyScalar(ve).add(re)}const ae=z.length,de=Z.length;function ie(re,se,ve){let Ie,Me,$e;const Ge=re.x-se.x,ke=re.y-se.y,Lt=ve.x-re.x,yt=ve.y-re.y,U=Ge*Ge+ke*ke,P=Ge*yt-ke*Lt;if(Math.abs(P)>Number.EPSILON){const Y=Math.sqrt(U),fe=Math.sqrt(Lt*Lt+yt*yt),_e=se.x-ke/Y,Ee=se.y+Ge/Y,Ze=ve.x-yt/fe,Te=ve.y+Lt/fe,ne=((Ze-_e)*yt-(Te-Ee)*Lt)/(Ge*yt-ke*Lt);Ie=_e+Ge*ne-re.x,Me=Ee+ke*ne-re.y;const Fe=Ie*Ie+Me*Me;if(Fe<=2)return new oe(Ie,Me);$e=Math.sqrt(Fe/2)}else{let Y=!1;Ge>Number.EPSILON?Lt>Number.EPSILON&&(Y=!0):Ge<-Number.EPSILON?Lt<-Number.EPSILON&&(Y=!0):Math.sign(ke)===Math.sign(yt)&&(Y=!0),Y?(Ie=-ke,Me=Ge,$e=Math.sqrt(U)):(Ie=Ge,Me=ke,$e=Math.sqrt(U/2))}return new oe(Ie/$e,Me/$e)}const me=[];for(let re=0,se=G.length,ve=se-1,Ie=re+1;re<se;re++,ve++,Ie++)ve===se&&(ve=0),Ie===se&&(Ie=0),me[re]=ie(G[re],G[ve],G[Ie]);const ce=[];let $,J=me.concat();for(let re=0,se=X.length;re<se;re++){const ve=X[re];$=[];for(let Ie=0,Me=ve.length,$e=Me-1,Ge=Ie+1;Ie<Me;Ie++,$e++,Ge++)$e===Me&&($e=0),Ge===Me&&(Ge=0),$[Ie]=ie(ve[Ie],ve[$e],ve[Ge]);ce.push($),J=J.concat($)}for(let re=0;re<m;re++){const se=re/m,ve=p*Math.cos(se*Math.PI/2),Ie=_*Math.sin(se*Math.PI/2)+g;for(let Me=0,$e=G.length;Me<$e;Me++){const Ge=Q(G[Me],me[Me],Ie);Je(Ge.x,Ge.y,-ve)}for(let Me=0,$e=X.length;Me<$e;Me++){const Ge=X[Me];$=ce[Me];for(let ke=0,Lt=Ge.length;ke<Lt;ke++){const yt=Q(Ge[ke],$[ke],Ie);Je(yt.x,yt.y,-ve)}}}const ye=_+g;for(let re=0;re<ae;re++){const se=f?Q(z[re],J[re],ye):z[re];S?(B.copy(R.normals[0]).multiplyScalar(se.x),O.copy(R.binormals[0]).multiplyScalar(se.y),A.copy(E[0]).add(B).add(O),Je(A.x,A.y,A.z)):Je(se.x,se.y,0)}for(let re=1;re<=u;re++)for(let se=0;se<ae;se++){const ve=f?Q(z[se],J[se],ye):z[se];S?(B.copy(R.normals[re]).multiplyScalar(ve.x),O.copy(R.binormals[re]).multiplyScalar(ve.y),A.copy(E[re]).add(B).add(O),Je(A.x,A.y,A.z)):Je(ve.x,ve.y,d/u*re)}for(let re=m-1;re>=0;re--){const se=re/m,ve=p*Math.cos(se*Math.PI/2),Ie=_*Math.sin(se*Math.PI/2)+g;for(let Me=0,$e=G.length;Me<$e;Me++){const Ge=Q(G[Me],me[Me],Ie);Je(Ge.x,Ge.y,d+ve)}for(let Me=0,$e=X.length;Me<$e;Me++){const Ge=X[Me];$=ce[Me];for(let ke=0,Lt=Ge.length;ke<Lt;ke++){const yt=Q(Ge[ke],$[ke],Ie);S?Je(yt.x,yt.y+E[u-1].y,E[u-1].x+ve):Je(yt.x,yt.y,d+ve)}}}ge(),be();function ge(){const re=i.length/3;if(f){let se=0,ve=ae*se;for(let Ie=0;Ie<de;Ie++){const Me=Z[Ie];Le(Me[2]+ve,Me[1]+ve,Me[0]+ve)}se=u+m*2,ve=ae*se;for(let Ie=0;Ie<de;Ie++){const Me=Z[Ie];Le(Me[0]+ve,Me[1]+ve,Me[2]+ve)}}else{for(let se=0;se<de;se++){const ve=Z[se];Le(ve[2],ve[1],ve[0])}for(let se=0;se<de;se++){const ve=Z[se];Le(ve[0]+ae*u,ve[1]+ae*u,ve[2]+ae*u)}}n.addGroup(re,i.length/3-re,0)}function be(){const re=i.length/3;let se=0;H(G,se),se+=G.length;for(let ve=0,Ie=X.length;ve<Ie;ve++){const Me=X[ve];H(Me,se),se+=Me.length}n.addGroup(re,i.length/3-re,1)}function H(re,se){let ve=re.length;for(;--ve>=0;){const Ie=ve;let Me=ve-1;Me<0&&(Me=re.length-1);for(let $e=0,Ge=u+m*2;$e<Ge;$e++){const ke=ae*$e,Lt=ae*($e+1),yt=se+Ie+ke,U=se+Me+ke,P=se+Me+Lt,Y=se+Ie+Lt;Ye(yt,U,P,Y)}}}function Je(re,se,ve){l.push(re),l.push(se),l.push(ve)}function Le(re,se,ve){Se(re),Se(se),Se(ve);const Ie=i.length/3,Me=C.generateTopUV(n,i,Ie-3,Ie-2,Ie-1);ot(Me[0]),ot(Me[1]),ot(Me[2])}function Ye(re,se,ve,Ie){Se(re),Se(se),Se(Ie),Se(se),Se(ve),Se(Ie);const Me=i.length/3,$e=C.generateSideWallUV(n,i,Me-6,Me-3,Me-2,Me-1);ot($e[0]),ot($e[1]),ot($e[3]),ot($e[1]),ot($e[2]),ot($e[3])}function Se(re){i.push(l[re*3+0]),i.push(l[re*3+1]),i.push(l[re*3+2])}function ot(re){s.push(re.x),s.push(re.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return X_(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Lc[i.type]().fromJSON(i)),new Go(n,e.options)}}const W_={generateTopUV:function(r,e,t,n,i){const s=e[t*3],o=e[t*3+1],a=e[n*3],l=e[n*3+1],h=e[i*3],u=e[i*3+1];return[new oe(s,o),new oe(a,l),new oe(h,u)]},generateSideWallUV:function(r,e,t,n,i,s){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],h=e[n*3],u=e[n*3+1],d=e[n*3+2],f=e[i*3],p=e[i*3+1],_=e[i*3+2],g=e[s*3],m=e[s*3+1],b=e[s*3+2];return Math.abs(a-u)<Math.abs(o-h)?[new oe(o,1-l),new oe(h,1-d),new oe(f,1-_),new oe(g,1-b)]:[new oe(a,1-l),new oe(u,1-d),new oe(p,1-_),new oe(m,1-b)]}};function X_(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Vo extends Ci{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Vo(e.radius,e.detail)}}class Kr extends Ci{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Kr(e.radius,e.detail)}}class Wo extends rt{constructor(e=.5,t=1,n=8,i=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],h=[],u=[];let d=e;const f=(t-e)/i,p=new D,_=new oe;for(let g=0;g<=i;g++){for(let m=0;m<=n;m++){const b=s+m/n*o;p.x=d*Math.cos(b),p.y=d*Math.sin(b),l.push(p.x,p.y,p.z),h.push(0,0,1),_.x=(p.x/t+1)/2,_.y=(p.y/t+1)/2,u.push(_.x,_.y)}d+=f}for(let g=0;g<i;g++){const m=g*(n+1);for(let b=0;b<n;b++){const C=b+m,E=C,S=C+n+1,R=C+n+2,O=C+1;a.push(E,S,O),a.push(S,R,O)}}this.setIndex(a),this.setAttribute("position",new Pe(l,3)),this.setAttribute("normal",new Pe(h,3)),this.setAttribute("uv",new Pe(u,2))}static fromJSON(e){return new Wo(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Xo extends rt{constructor(e=new Hs([new oe(0,.5),new oe(-.5,-.5),new oe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)h(e);else for(let u=0;u<e.length;u++)h(e[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new Pe(i,3)),this.setAttribute("normal",new Pe(s,3)),this.setAttribute("uv",new Pe(o,2));function h(u){const d=i.length/3,f=u.extractPoints(t);let p=f.shape;const _=f.holes;gi.isClockWise(p)===!1&&(p=p.reverse());for(let m=0,b=_.length;m<b;m++){const C=_[m];gi.isClockWise(C)===!0&&(_[m]=C.reverse())}const g=gi.triangulateShape(p,_);for(let m=0,b=_.length;m<b;m++){const C=_[m];p=p.concat(C)}for(let m=0,b=p.length;m<b;m++){const C=p[m];i.push(C.x,C.y,0),s.push(0,0,1),o.push(C.x,C.y)}for(let m=0,b=g.length;m<b;m++){const C=g[m],E=C[0]+d,S=C[1]+d,R=C[2]+d;n.push(E,S,R),l+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return q_(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const o=t[e.shapes[i]];n.push(o)}return new Xo(n,e.curveSegments)}}function q_(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class jr extends rt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let h=0;const u=[],d=new D,f=new D,p=[],_=[],g=[],m=[];for(let b=0;b<=n;b++){const C=[],E=b/n;let S=0;b==0&&o==0?S=.5/t:b==n&&l==Math.PI&&(S=-.5/t);for(let R=0;R<=t;R++){const O=R/t;d.x=-e*Math.cos(i+O*s)*Math.sin(o+E*a),d.y=e*Math.cos(o+E*a),d.z=e*Math.sin(i+O*s)*Math.sin(o+E*a),_.push(d.x,d.y,d.z),f.copy(d).normalize(),g.push(f.x,f.y,f.z),m.push(O+S,1-E),C.push(h++)}u.push(C)}for(let b=0;b<n;b++)for(let C=0;C<t;C++){const E=u[b][C+1],S=u[b][C],R=u[b+1][C],O=u[b+1][C+1];(b!==0||o>0)&&p.push(E,S,O),(b!==n-1||l<Math.PI)&&p.push(S,R,O)}this.setIndex(p),this.setAttribute("position",new Pe(_,3)),this.setAttribute("normal",new Pe(g,3)),this.setAttribute("uv",new Pe(m,2))}static fromJSON(e){return new jr(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class qo extends Ci{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new qo(e.radius,e.detail)}}class Yo extends rt{constructor(e=1,t=.4,n=8,i=6,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],l=[],h=[],u=new D,d=new D,f=new D;for(let p=0;p<=n;p++)for(let _=0;_<=i;_++){const g=_/i*s,m=p/n*Math.PI*2;d.x=(e+t*Math.cos(m))*Math.cos(g),d.y=(e+t*Math.cos(m))*Math.sin(g),d.z=t*Math.sin(m),a.push(d.x,d.y,d.z),u.x=e*Math.cos(g),u.y=e*Math.sin(g),f.subVectors(d,u).normalize(),l.push(f.x,f.y,f.z),h.push(_/i),h.push(p/n)}for(let p=1;p<=n;p++)for(let _=1;_<=i;_++){const g=(i+1)*p+_-1,m=(i+1)*(p-1)+_-1,b=(i+1)*(p-1)+_,C=(i+1)*p+_;o.push(g,m,C),o.push(m,b,C)}this.setIndex(o),this.setAttribute("position",new Pe(a,3)),this.setAttribute("normal",new Pe(l,3)),this.setAttribute("uv",new Pe(h,2))}static fromJSON(e){return new Yo(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Zo extends rt{constructor(e=1,t=.4,n=64,i=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],l=[],h=[],u=[],d=new D,f=new D,p=new D,_=new D,g=new D,m=new D,b=new D;for(let E=0;E<=n;++E){const S=E/n*s*Math.PI*2;C(S,s,o,e,p),C(S+.01,s,o,e,_),m.subVectors(_,p),b.addVectors(_,p),g.crossVectors(m,b),b.crossVectors(g,m),g.normalize(),b.normalize();for(let R=0;R<=i;++R){const O=R/i*Math.PI*2,B=-t*Math.cos(O),A=t*Math.sin(O);d.x=p.x+(B*b.x+A*g.x),d.y=p.y+(B*b.y+A*g.y),d.z=p.z+(B*b.z+A*g.z),l.push(d.x,d.y,d.z),f.subVectors(d,p).normalize(),h.push(f.x,f.y,f.z),u.push(E/n),u.push(R/i)}}for(let E=1;E<=n;E++)for(let S=1;S<=i;S++){const R=(i+1)*(E-1)+(S-1),O=(i+1)*E+(S-1),B=(i+1)*E+S,A=(i+1)*(E-1)+S;a.push(R,O,A),a.push(O,B,A)}this.setIndex(a),this.setAttribute("position",new Pe(l,3)),this.setAttribute("normal",new Pe(h,3)),this.setAttribute("uv",new Pe(u,2));function C(E,S,R,O,B){const A=Math.cos(E),F=Math.sin(E),z=R/S*E,X=Math.cos(z);B.x=O*(2+X)*.5*A,B.y=O*(2+X)*F*.5,B.z=O*Math.sin(z)*.5}}static fromJSON(e){return new Zo(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Jo extends rt{constructor(e=new Cc(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new D,l=new D,h=new oe;let u=new D;const d=[],f=[],p=[],_=[];g(),this.setIndex(_),this.setAttribute("position",new Pe(d,3)),this.setAttribute("normal",new Pe(f,3)),this.setAttribute("uv",new Pe(p,2));function g(){for(let E=0;E<t;E++)m(E);m(s===!1?t:0),C(),b()}function m(E){u=e.getPointAt(E/t,u);const S=o.normals[E],R=o.binormals[E];for(let O=0;O<=i;O++){const B=O/i*Math.PI*2,A=Math.sin(B),F=-Math.cos(B);l.x=F*S.x+A*R.x,l.y=F*S.y+A*R.y,l.z=F*S.z+A*R.z,l.normalize(),f.push(l.x,l.y,l.z),a.x=u.x+n*l.x,a.y=u.y+n*l.y,a.z=u.z+n*l.z,d.push(a.x,a.y,a.z)}}function b(){for(let E=1;E<=t;E++)for(let S=1;S<=i;S++){const R=(i+1)*(E-1)+(S-1),O=(i+1)*E+(S-1),B=(i+1)*E+S,A=(i+1)*(E-1)+S;_.push(R,O,A),_.push(O,B,A)}}function C(){for(let E=0;E<=t;E++)for(let S=0;S<=i;S++)h.x=E/t,h.y=S/i,p.push(h.x,h.y)}}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Jo(new Lc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Nu extends rt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new D,s=new D;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let h=0,u=l.length;h<u;++h){const d=l[h],f=d.start,p=d.count;for(let _=f,g=f+p;_<g;_+=3)for(let m=0;m<3;m++){const b=a.getX(_+m),C=a.getX(_+(m+1)%3);i.fromBufferAttribute(o,b),s.fromBufferAttribute(o,C),Fu(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let h=0;h<3;h++){const u=3*a+h,d=3*a+(h+1)%3;i.fromBufferAttribute(o,u),s.fromBufferAttribute(o,d),Fu(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Pe(t,3))}}}function Fu(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Uu=Object.freeze({__proto__:null,BoxGeometry:us,CapsuleGeometry:No,CircleGeometry:Fo,ConeGeometry:Uo,CylinderGeometry:ks,DodecahedronGeometry:Bo,EdgesGeometry:Cu,ExtrudeGeometry:Go,IcosahedronGeometry:Vo,LatheGeometry:Jr,OctahedronGeometry:Kr,PlaneGeometry:Br,PolyhedronGeometry:Ci,RingGeometry:Wo,ShapeGeometry:Xo,SphereGeometry:jr,TetrahedronGeometry:qo,TorusGeometry:Yo,TorusKnotGeometry:Zo,TubeGeometry:Jo,WireframeGeometry:Nu});class Bu extends pn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ae(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class zu extends pi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Oc extends pn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ae(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=di,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ku extends Oc{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new oe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return tt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ae(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ae(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ae(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Hu extends pn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ae(16777215),this.specular=new Ae(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=di,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=vs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Gu extends pn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ae(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=di,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Vu extends pn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=di,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Wu extends pn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=di,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=vs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Xu extends pn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ae(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=di,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class qu extends Mn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Wn(r,e,t){return Nc(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)}function Vs(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function Nc(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function Yu(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Fc(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=t[s]*e;for(let l=0;l!==e;++l)i[o++]=r[a+l]}return i}function Uc(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=r[i++];while(s!==void 0)}function Y_(r,e,t,n,i=30){const s=r.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const h=s.tracks[l],u=h.getValueSize(),d=[],f=[];for(let p=0;p<h.times.length;++p){const _=h.times[p]*i;if(!(_<t||_>=n)){d.push(h.times[p]);for(let g=0;g<u;++g)f.push(h.values[p*u+g])}}d.length!==0&&(h.times=Vs(d,h.times.constructor),h.values=Vs(f,h.values.constructor),o.push(h))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s}function Z_(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const h=r.tracks.find(function(b){return b.name===a.name&&b.ValueTypeName===l});if(h===void 0)continue;let u=0;const d=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=d/3);let f=0;const p=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);const _=a.times.length-1;let g;if(s<=a.times[0]){const b=u,C=d-u;g=Wn(a.values,b,C)}else if(s>=a.times[_]){const b=_*d+u,C=b+d-u;g=Wn(a.values,b,C)}else{const b=a.createInterpolant(),C=u,E=d-u;b.evaluate(s),g=Wn(b.resultBuffer,C,E)}l==="quaternion"&&new An().fromArray(g).normalize().conjugate().toArray(g);const m=h.times.length;for(let b=0;b<m;++b){const C=b*p+f;if(l==="quaternion")An.multiplyQuaternionsFlat(h.values,C,g,0,h.values,C);else{const E=p-f*2;for(let S=0;S<E;++S)h.values[C+S]-=g[S]}}}return r.blendMode=_r,r}var J_=Object.freeze({__proto__:null,arraySlice:Wn,convertArray:Vs,isTypedArray:Nc,getKeyframeOrder:Yu,sortedArray:Fc,flattenJSON:Uc,subclip:Y_,makeClipAdditive:Z_});class $o{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(s=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=s)){const a=t[1];e<a&&(n=2,s=a);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let o=0;o!==i;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Zu extends $o{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Zn,endingEnd:Zn}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,o=e+1,a=i[s],l=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case Ln:s=e,a=2*t-n;break;case on:s=i.length-2,a=t+i[s]-i[s+1];break;default:s=e,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Ln:o=e,l=2*n-t;break;case on:o=1,l=n+i[1]-i[0];break;default:o=e-1,l=t}const h=(n-t)*.5,u=this.valueSize;this._weightPrev=h/(t-a),this._weightNext=h/(l-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,h=l-a,u=this._offsetPrev,d=this._offsetNext,f=this._weightPrev,p=this._weightNext,_=(n-t)/(i-t),g=_*_,m=g*_,b=-f*m+2*f*g-f*_,C=(1+f)*m+(-1.5-2*f)*g+(-.5+f)*_+1,E=(-1-p)*m+(1.5+p)*g+.5*_,S=p*m-p*g;for(let R=0;R!==a;++R)s[R]=b*o[u+R]+C*o[h+R]+E*o[l+R]+S*o[d+R];return s}}class Bc extends $o{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,h=l-a,u=(n-t)/(i-t),d=1-u;for(let f=0;f!==a;++f)s[f]=o[h+f]*d+o[l+f]*u;return s}}class Ju extends $o{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class ni{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Vs(t,this.TimeBufferType),this.values=Vs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Vs(e.times,Array),values:Vs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Ju(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Bc(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Zu(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case yi:t=this.InterpolantFactoryMethodDiscrete;break;case Cs:t=this.InterpolantFactoryMethodLinear;break;case ji:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return yi;case this.InterpolantFactoryMethodLinear:return Cs;case this.InterpolantFactoryMethodSmooth:return ji}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=Wn(n,s,o),this.values=Wn(this.values,s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(i!==void 0&&Nc(i))for(let a=0,l=i.length;a!==l;++a){const h=i[a];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,h),e=!1;break}}return e}optimize(){const e=Wn(this.times),t=Wn(this.values),n=this.getValueSize(),i=this.getInterpolation()===ji,s=e.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const h=e[a],u=e[a+1];if(h!==u&&(a!==1||h!==e[0]))if(i)l=!0;else{const d=a*n,f=d-n,p=d+n;for(let _=0;_!==n;++_){const g=t[d+_];if(g!==t[f+_]||g!==t[p+_]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const d=a*n,f=o*n;for(let p=0;p!==n;++p)t[f+p]=t[d+p]}++o}}if(s>0){e[o]=e[s];for(let a=s*n,l=o*n,h=0;h!==n;++h)t[l+h]=t[a+h];++o}return o!==e.length?(this.times=Wn(e,0,o),this.values=Wn(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=Wn(this.times,0),t=Wn(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}ni.prototype.TimeBufferType=Float32Array,ni.prototype.ValueBufferType=Float32Array,ni.prototype.DefaultInterpolation=Cs;class Ws extends ni{}Ws.prototype.ValueTypeName="bool",Ws.prototype.ValueBufferType=Array,Ws.prototype.DefaultInterpolation=yi,Ws.prototype.InterpolantFactoryMethodLinear=void 0,Ws.prototype.InterpolantFactoryMethodSmooth=void 0;class zc extends ni{}zc.prototype.ValueTypeName="color";class Ko extends ni{}Ko.prototype.ValueTypeName="number";class $u extends $o{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-t)/(i-t);let h=e*a;for(let u=h+a;h!==u;h+=4)An.slerpFlat(s,0,o,h-a,o,h,l);return s}}class Qr extends ni{InterpolantFactoryMethodLinear(e){return new $u(this.times,this.values,this.getValueSize(),e)}}Qr.prototype.ValueTypeName="quaternion",Qr.prototype.DefaultInterpolation=Cs,Qr.prototype.InterpolantFactoryMethodSmooth=void 0;class Xs extends ni{}Xs.prototype.ValueTypeName="string",Xs.prototype.ValueBufferType=Array,Xs.prototype.DefaultInterpolation=yi,Xs.prototype.InterpolantFactoryMethodLinear=void 0,Xs.prototype.InterpolantFactoryMethodSmooth=void 0;class jo extends ni{}jo.prototype.ValueTypeName="vector";class Qo{constructor(e,t=-1,n,i=hn){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Ct(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(K_(n[o]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(ni.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,o=[];for(let a=0;a<s;a++){let l=[],h=[];l.push((a+s-1)%s,a,(a+1)%s),h.push(0,1,0);const u=Yu(l);l=Fc(l,1,u),h=Fc(h,1,u),!i&&l[0]===0&&(l.push(s),h.push(h[0])),o.push(new Ko(".morphTargetInfluences["+t[a].name+"]",l,h).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const h=e[a],u=h.name.match(s);if(u&&u.length>1){const d=u[1];let f=i[d];f||(i[d]=f=[]),f.push(h)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(d,f,p,_,g){if(p.length!==0){const m=[],b=[];Uc(p,m,b,_),m.length!==0&&g.push(new d(f,m,b))}},i=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const h=e.hierarchy||[];for(let d=0;d<h.length;d++){const f=h[d].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const p={};let _;for(_=0;_<f.length;_++)if(f[_].morphTargets)for(let g=0;g<f[_].morphTargets.length;g++)p[f[_].morphTargets[g]]=-1;for(const g in p){const m=[],b=[];for(let C=0;C!==f[_].morphTargets.length;++C){const E=f[_];m.push(E.time),b.push(E.morphTarget===g?1:0)}i.push(new Ko(".morphTargetInfluence["+g+"]",m,b))}l=p.length*o}else{const p=".bones["+t[d].name+"]";n(jo,p+".position",f,"pos",i),n(Qr,p+".quaternion",f,"rot",i),n(jo,p+".scale",f,"scl",i)}}return i.length===0?null:new this(s,l,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function $_(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ko;case"vector":case"vector2":case"vector3":case"vector4":return jo;case"color":return zc;case"quaternion":return Qr;case"bool":case"boolean":return Ws;case"string":return Xs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function K_(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=$_(r.type);if(r.times===void 0){const t=[],n=[];Uc(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const qs={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class kc{constructor(e,t,n){const i=this;let s=!1,o=0,a=0,l;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&i.onStart!==void 0&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,d){return h.push(u,d),this},this.removeHandler=function(u){const d=h.indexOf(u);return d!==-1&&h.splice(d,2),this},this.getHandler=function(u){for(let d=0,f=h.length;d<f;d+=2){const p=h[d],_=h[d+1];if(p.global&&(p.lastIndex=0),p.test(u))return _}return null}}}const Ku=new kc;class On{constructor(e){this.manager=e!==void 0?e:Ku,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Ri={};class j_ extends Error{constructor(e,t){super(e),this.response=t}}class Li extends On{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=qs.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Ri[e]!==void 0){Ri[e].push({onLoad:t,onProgress:n,onError:i});return}Ri[e]=[],Ri[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const u=Ri[e],d=h.body.getReader(),f=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),p=f?parseInt(f):0,_=p!==0;let g=0;const m=new ReadableStream({start(b){C();function C(){d.read().then(({done:E,value:S})=>{if(E)b.close();else{g+=S.byteLength;const R=new ProgressEvent("progress",{lengthComputable:_,loaded:g,total:p});for(let O=0,B=u.length;O<B;O++){const A=u[O];A.onProgress&&A.onProgress(R)}b.enqueue(S),C()}})}}});return new Response(m)}else throw new j_(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(l){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return h.json();default:if(a===void 0)return h.text();{const d=/charset="?([^;"\s]*)"?/i.exec(a),f=d&&d[1]?d[1].toLowerCase():void 0,p=new TextDecoder(f);return h.arrayBuffer().then(_=>p.decode(_))}}}).then(h=>{qs.add(e,h);const u=Ri[e];delete Ri[e];for(let d=0,f=u.length;d<f;d++){const p=u[d];p.onLoad&&p.onLoad(h)}}).catch(h=>{const u=Ri[e];if(u===void 0)throw this.manager.itemError(e),h;delete Ri[e];for(let d=0,f=u.length;d<f;d++){const p=u[d];p.onError&&p.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Q_ extends On{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Li(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Qo.parse(e[n]);t.push(i)}return t}}class e0 extends On{constructor(e){super(e)}load(e,t,n,i){const s=this,o=[],a=new Mc,l=new Li(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let h=0;function u(d){l.load(e[d],function(f){const p=s.parse(f,!0);o[d]={width:p.width,height:p.height,format:p.format,mipmaps:p.mipmaps},h+=1,h===6&&(p.mipmapCount===1&&(a.minFilter=st),a.image=o,a.format=p.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let d=0,f=e.length;d<f;++d)u(d);else l.load(e,function(d){const f=s.parse(d,!0);if(f.isCubemap){const p=f.mipmaps.length/f.mipmapCount;for(let _=0;_<p;_++){o[_]={mipmaps:[]};for(let g=0;g<f.mipmapCount;g++)o[_].mipmaps.push(f.mipmaps[_*f.mipmapCount+g]),o[_].format=f.format,o[_].width=f.width,o[_].height=f.height}a.image=o}else a.image.width=f.width,a.image.height=f.height,a.mipmaps=f.mipmaps;f.mipmapCount===1&&(a.minFilter=st),a.format=f.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}class ea extends On{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=qs.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=xo("img");function l(){u(),qs.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(d){u(),i&&i(d),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",h,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class t0 extends On{constructor(e){super(e)}load(e,t,n,i){const s=new To,o=new ea(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(h){o.load(e[h],function(u){s.images[h]=u,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)l(h);return s}}class n0 extends On{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Yr,a=new Li(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){const h=s.parse(l);h&&(h.image!==void 0?o.image=h.image:h.data!==void 0&&(o.image.width=h.width,o.image.height=h.height,o.image.data=h.data),o.wrapS=h.wrapS!==void 0?h.wrapS:jt,o.wrapT=h.wrapT!==void 0?h.wrapT:jt,o.magFilter=h.magFilter!==void 0?h.magFilter:st,o.minFilter=h.minFilter!==void 0?h.minFilter:st,o.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.encoding!==void 0&&(o.encoding=h.encoding),h.flipY!==void 0&&(o.flipY=h.flipY),h.format!==void 0&&(o.format=h.format),h.type!==void 0&&(o.type=h.type),h.mipmaps!==void 0&&(o.mipmaps=h.mipmaps,o.minFilter=ai),h.mipmapCount===1&&(o.minFilter=st),h.generateMipmaps!==void 0&&(o.generateMipmaps=h.generateMipmaps),o.needsUpdate=!0,t&&t(o,h))},n,i),o}}class i0 extends On{constructor(e){super(e)}load(e,t,n,i){const s=new Ht,o=new ea(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class ps extends pt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ae(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class ju extends ps{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(pt.DefaultUp),this.updateMatrix(),this.groundColor=new Ae(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Hc=new Qe,Qu=new D,ed=new D;class Gc{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new oe(512,512),this.map=null,this.mapPass=null,this.matrix=new Qe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ba,this._frameExtents=new oe(1,1),this._viewportCount=1,this._viewports=[new xt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Qu.setFromMatrixPosition(e.matrixWorld),t.position.copy(Qu),ed.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(ed),t.updateMatrixWorld(),Hc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Hc),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Hc)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class s0 extends Gc{constructor(){super(new ln(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=lt*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class td extends ps{constructor(e,t,n=0,i=Math.PI/3,s=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(pt.DefaultUp),this.updateMatrix(),this.target=new pt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new s0}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const nd=new Qe,ta=new D,Vc=new D;class r0 extends Gc{constructor(){super(new ln(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new oe(4,2),this._viewportCount=6,this._viewports=[new xt(2,1,1,1),new xt(0,1,1,1),new xt(3,1,1,1),new xt(1,1,1,1),new xt(3,0,1,1),new xt(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),ta.setFromMatrixPosition(e.matrixWorld),n.position.copy(ta),Vc.copy(n.position),Vc.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Vc),n.updateMatrixWorld(),i.makeTranslation(-ta.x,-ta.y,-ta.z),nd.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(nd)}}class id extends ps{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new r0}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class o0 extends Gc{constructor(){super(new ka(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class sd extends ps{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(pt.DefaultUp),this.updateMatrix(),this.target=new pt,this.shadow=new o0}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class rd extends ps{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class od extends ps{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class ad{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class ul extends ps{constructor(e=new ad,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class dl extends On{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,o=new Li(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=dl.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Ae().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(i.uniforms[s]={},o.type){case"t":i.uniforms[s].value=n(o.value);break;case"c":i.uniforms[s].value=new Ae().setHex(o.value);break;case"v2":i.uniforms[s].value=new oe().fromArray(o.value);break;case"v3":i.uniforms[s].value=new D().fromArray(o.value);break;case"v4":i.uniforms[s].value=new xt().fromArray(o.value);break;case"m3":i.uniforms[s].value=new vn().fromArray(o.value);break;case"m4":i.uniforms[s].value=new Qe().fromArray(o.value);break;default:i.uniforms[s].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new oe().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new oe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Bu,SpriteMaterial:mc,RawShaderMaterial:zu,ShaderMaterial:pi,PointsMaterial:xc,MeshPhysicalMaterial:ku,MeshStandardMaterial:Oc,MeshPhongMaterial:Hu,MeshToonMaterial:Gu,MeshNormalMaterial:Vu,MeshLambertMaterial:Wu,MeshDepthMaterial:dc,MeshDistanceMaterial:fc,MeshBasicMaterial:as,MeshMatcapMaterial:Xu,LineDashedMaterial:qu,LineBasicMaterial:Mn,Material:pn};return new t[e]}}class Wc{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class ld extends rt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class cd extends On{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Li(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(p,_){if(t[_]!==void 0)return t[_];const m=p.interleavedBuffers[_],b=s(p,m.buffer),C=br(m.type,b),E=new qa(C,m.stride);return E.uuid=m.uuid,t[_]=E,E}function s(p,_){if(n[_]!==void 0)return n[_];const m=p.arrayBuffers[_],b=new Uint32Array(m).buffer;return n[_]=b,b}const o=e.isInstancedBufferGeometry?new ld:new rt,a=e.data.index;if(a!==void 0){const p=br(a.type,a.array);o.setIndex(new At(p,1))}const l=e.data.attributes;for(const p in l){const _=l[p];let g;if(_.isInterleavedBufferAttribute){const m=i(e.data,_.data);g=new zs(m,_.itemSize,_.offset,_.normalized)}else{const m=br(_.type,_.array),b=_.isInstancedBufferAttribute?Zr:At;g=new b(m,_.itemSize,_.normalized)}_.name!==void 0&&(g.name=_.name),_.usage!==void 0&&g.setUsage(_.usage),_.updateRange!==void 0&&(g.updateRange.offset=_.updateRange.offset,g.updateRange.count=_.updateRange.count),o.setAttribute(p,g)}const h=e.data.morphAttributes;if(h)for(const p in h){const _=h[p],g=[];for(let m=0,b=_.length;m<b;m++){const C=_[m];let E;if(C.isInterleavedBufferAttribute){const S=i(e.data,C.data);E=new zs(S,C.itemSize,C.offset,C.normalized)}else{const S=br(C.type,C.array);E=new At(S,C.itemSize,C.normalized)}C.name!==void 0&&(E.name=C.name),g.push(E)}o.morphAttributes[p]=g}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const d=e.data.groups||e.data.drawcalls||e.data.offsets;if(d!==void 0)for(let p=0,_=d.length;p!==_;++p){const g=d[p];o.addGroup(g.start,g.count,g.materialIndex)}const f=e.data.boundingSphere;if(f!==void 0){const p=new D;f.center!==void 0&&p.fromArray(f.center),o.boundingSphere=new Fs(p,f.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class a0 extends On{constructor(e){super(e)}load(e,t,n,i){const s=this,o=this.path===""?Wc.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Li(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let h=null;try{h=JSON.parse(l)}catch(d){i!==void 0&&i(d),console.error("THREE:ObjectLoader: Can't parse "+e+".",d.message);return}const u=h.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Wc.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new Li(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(h)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),h=this.parseObject(e.object,s,l,a,n),u=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,u),t!==void 0){let d=!1;for(const f in o)if(o[f].data instanceof HTMLImageElement){d=!0;break}d===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,i,a,o,t),h=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,h),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new Hs().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new Ka().fromJSON(e[s],i);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new cd;for(let s=0,o=e.length;s<o;s++){let a;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(l);break;default:l.type in Uu?a=Uu[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),a.isBufferGeometry===!0&&l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new dl;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];n[l.uuid]===void 0&&(n[l.uuid]=s.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Qo.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function o(l){return n.manager.itemStart(l),s.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const h=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return o(u)}else return l.data?{data:br(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new kc(t);s=new ea(l),s.setCrossOrigin(this.crossOrigin);for(let h=0,u=e.length;h<u;h++){const d=e[h],f=d.url;if(Array.isArray(f)){const p=[];for(let _=0,g=f.length;_<g;_++){const m=f[_],b=a(m);b!==null&&(b instanceof HTMLImageElement?p.push(b):p.push(new Yr(b.data,b.width,b.height)))}i[d.uuid]=new Ps(p)}else{const p=a(d.url);i[d.uuid]=new Ps(p)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await i.loadAsync(l)}else return o.data?{data:br(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new ea(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],h=l.url;if(Array.isArray(h)){const u=[];for(let d=0,f=h.length;d<f;d++){const p=h[d],_=await s(p);_!==null&&(_ instanceof HTMLImageElement?u.push(_):u.push(new Yr(_.data,_.width,_.height)))}n[l.uuid]=new Ps(u)}else{const u=await s(l.url);n[l.uuid]=new Ps(u)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const i={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],h=l.data;let u;Array.isArray(h)?(u=new To,h.length===6&&(u.needsUpdate=!0)):(h&&h.data?u=new Yr:u=new Ht,h&&(u.needsUpdate=!0)),u.source=l,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=n(a.mapping,l0)),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=n(a.wrap[0],hd),u.wrapT=n(a.wrap[1],hd)),a.format!==void 0&&(u.format=a.format),a.type!==void 0&&(u.type=a.type),a.encoding!==void 0&&(u.encoding=a.encoding),a.minFilter!==void 0&&(u.minFilter=n(a.minFilter,ud)),a.magFilter!==void 0&&(u.magFilter=n(a.magFilter,ud)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.userData!==void 0&&(u.userData=a.userData),i[a.uuid]=u}return i}parseObject(e,t,n,i,s){let o;function a(f){return t[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),t[f]}function l(f){if(f!==void 0){if(Array.isArray(f)){const p=[];for(let _=0,g=f.length;_<g;_++){const m=f[_];n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),p.push(n[m])}return p}return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),n[f]}}function h(f){return i[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),i[f]}let u,d;switch(e.type){case"Scene":o=new Kh,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Ae(e.background):o.background=h(e.background)),e.environment!==void 0&&(o.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Xa(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Wa(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness);break;case"PerspectiveCamera":o=new ln(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new ka(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new rd(e.color,e.intensity);break;case"DirectionalLight":o=new sd(e.color,e.intensity);break;case"PointLight":o=new id(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new od(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new td(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new ju(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new ul().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),d=l(e.material),o=new lu(u,d),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),d=l(e.material),o=new an(u,d);break;case"InstancedMesh":u=a(e.geometry),d=l(e.material);const f=e.count,p=e.instanceMatrix,_=e.instanceColor;o=new du(u,d,f),o.instanceMatrix=new Zr(new Float32Array(p.array),16),_!==void 0&&(o.instanceColor=new Zr(new Float32Array(_.array),_.itemSize));break;case"LOD":o=new iu;break;case"Line":o=new fs(a(e.geometry),l(e.material));break;case"LineLoop":o=new vu(a(e.geometry),l(e.material));break;case"LineSegments":o=new mi(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new yu(a(e.geometry),l(e.material));break;case"Sprite":o=new tu(l(e.material));break;case"Group":o=new Gr;break;case"Bone":o=new _c;break;default:o=new pt}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let p=0;p<f.length;p++)o.add(this.parseObject(f[p],t,n,i,s))}if(e.animations!==void 0){const f=e.animations;for(let p=0;p<f.length;p++){const _=f[p];o.animations.push(s[_])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const f=e.levels;for(let p=0;p<f.length;p++){const _=f[p],g=o.getObjectByProperty("uuid",_.object);g!==void 0&&o.addLevel(g,_.distance,_.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const l0={UVMapping:cr,CubeReflectionMapping:Sn,CubeRefractionMapping:si,EquirectangularReflectionMapping:xs,EquirectangularRefractionMapping:ri,CubeUVReflectionMapping:_i},hd={RepeatWrapping:Hi,ClampToEdgeWrapping:jt,MirroredRepeatWrapping:Gi},ud={NearestFilter:It,NearestMipmapNearestFilter:Vi,NearestMipmapLinearFilter:oi,LinearFilter:st,LinearMipmapNearestFilter:vi,LinearMipmapLinearFilter:ai};class c0 extends On{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=qs.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){qs.add(e,l),t&&t(l),s.manager.itemEnd(e)}).catch(function(l){i&&i(l),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let fl;class Xc{static getContext(){return fl===void 0&&(fl=new(window.AudioContext||window.webkitAudioContext)),fl}static setContext(e){fl=e}}class h0 extends On{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Li(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{const l=a.slice(0);Xc.getContext().decodeAudioData(l,function(u){t(u)})}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}}class u0 extends ul{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new Ae().set(e),s=new Ae().set(t),o=new D(i.r,i.g,i.b),a=new D(s.r,s.g,s.b),l=Math.sqrt(Math.PI),h=l*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(h)}}class d0 extends ul{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new Ae().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const dd=new Qe,fd=new Qe,Ys=new Qe;class f0{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ln,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ln,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Ys.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,o=t.near*Math.tan(Ne*t.fov*.5)/t.zoom;let a,l;fd.elements[12]=-i,dd.elements[12]=i,a=-o*t.aspect+s,l=o*t.aspect+s,Ys.elements[0]=2*t.near/(l-a),Ys.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(Ys),a=-o*t.aspect-s,l=o*t.aspect-s,Ys.elements[0]=2*t.near/(l-a),Ys.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(Ys)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(fd),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(dd)}}class pd{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=md(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=md();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function md(){return(typeof performance>"u"?Date:performance).now()}const Zs=new D,gd=new An,p0=new D,Js=new D;class m0 extends pt{constructor(){super(),this.type="AudioListener",this.context=Xc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new pd}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Zs,gd,p0),Js.set(0,0,-1).applyQuaternion(gd),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Zs.x,i),t.positionY.linearRampToValueAtTime(Zs.y,i),t.positionZ.linearRampToValueAtTime(Zs.z,i),t.forwardX.linearRampToValueAtTime(Js.x,i),t.forwardY.linearRampToValueAtTime(Js.y,i),t.forwardZ.linearRampToValueAtTime(Js.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Zs.x,Zs.y,Zs.z),t.setOrientation(Js.x,Js.y,Js.z,n.x,n.y,n.z)}}class _d extends pt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const $s=new D,vd=new An,g0=new D,Ks=new D;class _0 extends _d{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose($s,vd,g0),Ks.set(0,0,1).applyQuaternion(vd);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime($s.x,n),t.positionY.linearRampToValueAtTime($s.y,n),t.positionZ.linearRampToValueAtTime($s.z,n),t.orientationX.linearRampToValueAtTime(Ks.x,n),t.orientationY.linearRampToValueAtTime(Ks.y,n),t.orientationZ.linearRampToValueAtTime(Ks.z,n)}else t.setPosition($s.x,$s.y,$s.z),t.setOrientation(Ks.x,Ks.y,Ks.z)}}class v0{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class xd{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,o;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[s+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,h=t+t;l!==h;++l)if(n[l]!==n[l+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,o=i;s!==o;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){An.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const o=this._workIndex*s;An.multiplyQuaternionsFlat(e,o,e,t,e,n),An.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const qc="\\[\\]\\.:\\/",x0=new RegExp("["+qc+"]","g"),Yc="[^"+qc+"]",y0="[^"+qc.replace("\\.","")+"]",M0=/((?:WC+[\/:])*)/.source.replace("WC",Yc),b0=/(WCOD+)?/.source.replace("WCOD",y0),w0=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Yc),S0=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Yc),E0=new RegExp("^"+M0+b0+w0+S0+"$"),T0=["material","materials","bones","map"];class A0{constructor(e,t,n){const i=n||ft.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class ft{constructor(e,t,n){this.path=t,this.parsedPath=n||ft.parseTrackName(t),this.node=ft.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new ft.Composite(e,t,n):new ft(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(x0,"")}static parseTrackName(e){const t=E0.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);T0.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const l=n(a.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=ft.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===h){h=u;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const o=e[i];if(o===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}ft.Composite=A0,ft.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},ft.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},ft.prototype.GetterByBindingType=[ft.prototype._getValue_direct,ft.prototype._getValue_array,ft.prototype._getValue_arrayElement,ft.prototype._getValue_toArray],ft.prototype.SetterByBindingTypeAndVersioning=[[ft.prototype._setValue_direct,ft.prototype._setValue_direct_setNeedsUpdate,ft.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ft.prototype._setValue_array,ft.prototype._setValue_array_setNeedsUpdate,ft.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ft.prototype._setValue_arrayElement,ft.prototype._setValue_arrayElement_setNeedsUpdate,ft.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ft.prototype._setValue_fromArray,ft.prototype._setValue_fromArray_setNeedsUpdate,ft.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class C0{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Ct(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length;let a,l=e.length,h=this.nCachedObjects_;for(let u=0,d=arguments.length;u!==d;++u){const f=arguments[u],p=f.uuid;let _=t[p];if(_===void 0){_=l++,t[p]=_,e.push(f);for(let g=0,m=o;g!==m;++g)s[g].push(new ft(f,n[g],i[g]))}else if(_<h){a=e[_];const g=--h,m=e[g];t[m.uuid]=_,e[_]=m,t[p]=g,e[g]=f;for(let b=0,C=o;b!==C;++b){const E=s[b],S=E[g];let R=E[_];E[_]=S,R===void 0&&(R=new ft(f,n[b],i[b])),E[g]=R}}else e[_]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],h=l.uuid,u=t[h];if(u!==void 0&&u>=s){const d=s++,f=e[d];t[f.uuid]=u,e[u]=f,t[h]=d,e[d]=l;for(let p=0,_=i;p!==_;++p){const g=n[p],m=g[d],b=g[u];g[u]=m,g[d]=b}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const h=arguments[a],u=h.uuid,d=t[u];if(d!==void 0)if(delete t[u],d<s){const f=--s,p=e[f],_=--o,g=e[_];t[p.uuid]=d,e[d]=p,t[g.uuid]=f,e[f]=g,e.pop();for(let m=0,b=i;m!==b;++m){const C=n[m],E=C[f],S=C[_];C[d]=E,C[f]=S,C.pop()}}else{const f=--o,p=e[f];f>0&&(t[p.uuid]=d),e[d]=p,e.pop();for(let _=0,g=i;_!==g;++_){const m=n[_];m[d]=m[f],m.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const o=this._paths,a=this._parsedPaths,l=this._objects,h=l.length,u=this.nCachedObjects_,d=new Array(h);i=s.length,n[e]=i,o.push(e),a.push(t),s.push(d);for(let f=u,p=l.length;f!==p;++f){const _=l[f];d[f]=new ft(_,e,t)}return d}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],h=e[a];t[h]=n,o[n]=l,o.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}class R0{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,o=s.length,a=new Array(o),l={endingStart:Zn,endingEnd:Zn};for(let h=0;h!==o;++h){const u=s[h].createInterpolant(null);a[h]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=gr,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,o=s/i,a=i/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,h=a.sampleValues;return l[0]=s,l[1]=s+n,h[0]=e/o,h[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case _r:for(let u=0,d=l.length;u!==d;++u)l[u].evaluate(o),h[u].accumulateAdditive(a);break;case hn:default:for(let u=0,d=l.length;u!==d;++u)l[u].evaluate(o),h[u].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const o=n===da;if(e===0)return s===-1?i:o&&(s&1)===1?t-i:i;if(n===mr){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const h=e<0;this._setEndings(h,!h,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ln,i.endingEnd=Ln):(e?i.endingStart=this.zeroSlopeAtStart?Ln:Zn:i.endingStart=on,t?i.endingEnd=this.zeroSlopeAtEnd?Ln:Zn:i.endingEnd=on)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=n,this}}const L0=new Float32Array(1);class P0 extends j{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,o=e._propertyBindings,a=e._interpolants,l=n.uuid,h=this._bindingsByRootAndName;let u=h[l];u===void 0&&(u={},h[l]=u);for(let d=0;d!==s;++d){const f=i[d],p=f.name;let _=u[p];if(_!==void 0)++_.referenceCount,o[d]=_;else{if(_=o[d],_!==void 0){_._cacheIndex===null&&(++_.referenceCount,this._addInactiveBinding(_,l,p));continue}const g=t&&t._propertyBindings[d].binding.parsedPath;_=new xd(ft.create(n,p,g),f.ValueTypeName,f.getValueSize()),++_.referenceCount,this._addInactiveBinding(_,l,p),o[d]=_}a[d].resultBuffer=_.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,h=l[l.length-1],u=e._byClipCacheIndex;h._byClipCacheIndex=u,l[u]=h,l.pop(),e._byClipCacheIndex=null;const d=a.actionByRoot,f=(e._localRoot||this._root).uuid;delete d[f],l.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],l=t[t.length-1],h=e._cacheIndex;l._cacheIndex=h,t[h]=l,t.pop(),delete a[s],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Bc(new Float32Array(2),new Float32Array(2),1,L0),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let o=typeof e=="string"?Qo.findByName(i,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let h=null;if(n===void 0&&(o!==null?n=o.blendMode:n=hn),l!==void 0){const d=l.actionByRoot[s];if(d!==void 0&&d.blendMode===n)return d;h=l.knownActions[0],o===null&&(o=h._clip)}if(o===null)return null;const u=new R0(this,o,t,n);return this._bindAction(u,h),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Qo.findByName(n,e):e,o=s?s.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,o);const a=this._bindings,l=this._nActiveBindings;for(let h=0;h!==l;++h)a[h].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const h=o[a];this._deactivateAction(h);const u=h._cacheIndex,d=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,d._cacheIndex=u,t[u]=d,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Zc{constructor(e){this.value=e}clone(){return new Zc(this.value.clone===void 0?this.value:this.value.clone())}}let I0=0;class D0 extends j{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:I0++}),this.name="",this.usage=ts,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class O0 extends qa{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class N0{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class F0{constructor(e,t,n=0,i=1/0){this.ray=new wo(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Ea,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Jc(e,this,n,t),n.sort(yd),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Jc(e[i],this,n,t);return n.sort(yd),n}}function yd(r,e){return r.distance-e.distance}function Jc(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)Jc(i[s],e,t,!0)}}class U0{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(tt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class B0{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Md=new oe;class z0{constructor(e=new oe(1/0,1/0),t=new oe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Md.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Md.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const bd=new D,pl=new D;class k0{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){bd.subVectors(e,this.start),pl.subVectors(this.end,this.start);const n=pl.dot(pl);let s=pl.dot(bd)/n;return t&&(s=tt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const wd=new D;class H0 extends pt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new rt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const h=o/l*Math.PI*2,u=a/l*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new Pe(i,3));const s=new Mn({fog:!1,toneMapped:!1});this.cone=new mi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),wd.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(wd),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ms=new D,ml=new Qe,$c=new Qe;class G0 extends mi{constructor(e){const t=Sd(e),n=new rt,i=[],s=[],o=new Ae(0,0,1),a=new Ae(0,1,0);for(let h=0;h<t.length;h++){const u=t[h];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new Pe(i,3)),n.setAttribute("color",new Pe(s,3));const l=new Mn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");$c.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(ml.multiplyMatrices($c,a.matrixWorld),ms.setFromMatrixPosition(ml),i.setXYZ(o,ms.x,ms.y,ms.z),ml.multiplyMatrices($c,a.parent.matrixWorld),ms.setFromMatrixPosition(ml),i.setXYZ(o+1,ms.x,ms.y,ms.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Sd(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,Sd(r.children[t]));return e}class V0 extends an{constructor(e,t,n){const i=new jr(t,4,2),s=new as({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const W0=new D,Ed=new Ae,Td=new Ae;class X0 extends pt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Kr(t);i.rotateY(Math.PI*.5),this.material=new as({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(s.count*3);i.setAttribute("color",new At(o,3)),this.add(new an(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Ed.copy(this.light.color),Td.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?Ed:Td;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(W0.setFromMatrixPosition(this.light.matrixWorld).negate())}}class q0 extends mi{constructor(e=10,t=10,n=4473924,i=8947848){n=new Ae(n),i=new Ae(i);const s=t/2,o=e/t,a=e/2,l=[],h=[];for(let f=0,p=0,_=-a;f<=t;f++,_+=o){l.push(-a,0,_,a,0,_),l.push(_,0,-a,_,0,a);const g=f===s?n:i;g.toArray(h,p),p+=3,g.toArray(h,p),p+=3,g.toArray(h,p),p+=3,g.toArray(h,p),p+=3}const u=new rt;u.setAttribute("position",new Pe(l,3)),u.setAttribute("color",new Pe(h,3));const d=new Mn({vertexColors:!0,toneMapped:!1});super(u,d),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Y0 extends mi{constructor(e=10,t=16,n=8,i=64,s=4473924,o=8947848){s=new Ae(s),o=new Ae(o);const a=[],l=[];if(t>1)for(let d=0;d<t;d++){const f=d/t*(Math.PI*2),p=Math.sin(f)*e,_=Math.cos(f)*e;a.push(0,0,0),a.push(p,0,_);const g=d&1?s:o;l.push(g.r,g.g,g.b),l.push(g.r,g.g,g.b)}for(let d=0;d<n;d++){const f=d&1?s:o,p=e-e/n*d;for(let _=0;_<i;_++){let g=_/i*(Math.PI*2),m=Math.sin(g)*p,b=Math.cos(g)*p;a.push(m,0,b),l.push(f.r,f.g,f.b),g=(_+1)/i*(Math.PI*2),m=Math.sin(g)*p,b=Math.cos(g)*p,a.push(m,0,b),l.push(f.r,f.g,f.b)}}const h=new rt;h.setAttribute("position",new Pe(a,3)),h.setAttribute("color",new Pe(l,3));const u=new Mn({vertexColors:!0,toneMapped:!1});super(h,u),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Ad=new D,gl=new D,Cd=new D;class Z0 extends pt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new rt;i.setAttribute("position",new Pe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Mn({fog:!1,toneMapped:!1});this.lightPlane=new fs(i,s),this.add(this.lightPlane),i=new rt,i.setAttribute("position",new Pe([0,0,0,0,0,1],3)),this.targetLine=new fs(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Ad.setFromMatrixPosition(this.light.matrixWorld),gl.setFromMatrixPosition(this.light.target.matrixWorld),Cd.subVectors(gl,Ad),this.lightPlane.lookAt(gl),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(gl),this.targetLine.scale.z=Cd.length()}}const _l=new D,kt=new Fa;class J0 extends mi{constructor(e){const t=new rt,n=new Mn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(_,g){l(_),l(g)}function l(_){i.push(0,0,0),s.push(0,0,0),o[_]===void 0&&(o[_]=[]),o[_].push(i.length/3-1)}t.setAttribute("position",new Pe(i,3)),t.setAttribute("color",new Pe(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const h=new Ae(16755200),u=new Ae(16711680),d=new Ae(43775),f=new Ae(16777215),p=new Ae(3355443);this.setColors(h,u,d,f,p)}setColors(e,t,n,i,s){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;kt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Gt("c",t,e,kt,0,0,-1),Gt("t",t,e,kt,0,0,1),Gt("n1",t,e,kt,-n,-i,-1),Gt("n2",t,e,kt,n,-i,-1),Gt("n3",t,e,kt,-n,i,-1),Gt("n4",t,e,kt,n,i,-1),Gt("f1",t,e,kt,-n,-i,1),Gt("f2",t,e,kt,n,-i,1),Gt("f3",t,e,kt,-n,i,1),Gt("f4",t,e,kt,n,i,1),Gt("u1",t,e,kt,n*.7,i*1.1,-1),Gt("u2",t,e,kt,-n*.7,i*1.1,-1),Gt("u3",t,e,kt,0,i*2,-1),Gt("cf1",t,e,kt,-n,0,1),Gt("cf2",t,e,kt,n,0,1),Gt("cf3",t,e,kt,0,-i,1),Gt("cf4",t,e,kt,0,i,1),Gt("cn1",t,e,kt,-n,0,-1),Gt("cn2",t,e,kt,n,0,-1),Gt("cn3",t,e,kt,0,-i,-1),Gt("cn4",t,e,kt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Gt(r,e,t,n,i,s,o){_l.set(i,s,o).unproject(n);const a=e[r];if(a!==void 0){const l=t.getAttribute("position");for(let h=0,u=a.length;h<u;h++)l.setXYZ(a[h],_l.x,_l.y,_l.z)}}const vl=new Is;class $0 extends mi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new rt;s.setIndex(new At(n,1)),s.setAttribute("position",new At(i,3)),super(s,new Mn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&vl.setFromObject(this.object),vl.isEmpty())return;const t=vl.min,n=vl.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class K0 extends mi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new rt;s.setIndex(new At(n,1)),s.setAttribute("position",new Pe(i,3)),super(s,new Mn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class j0 extends fs{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new rt;o.setAttribute("position",new Pe(s,3)),o.computeBoundingSphere(),super(o,new Mn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new rt;l.setAttribute("position",new Pe(a,3)),l.computeBoundingSphere(),this.add(new an(l,new as({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Rd=new D;let xl,Kc;class Q0 extends pt{constructor(e=new D(0,0,1),t=new D(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",xl===void 0&&(xl=new rt,xl.setAttribute("position",new Pe([0,0,0,0,1,0],3)),Kc=new ks(0,.5,1,5,1),Kc.translate(0,-.5,0)),this.position.copy(t),this.line=new fs(xl,new Mn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new an(Kc,new as({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Rd.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Rd,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class ev extends mi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new rt;i.setAttribute("position",new Pe(t,3)),i.setAttribute("color",new Pe(n,3));const s=new Mn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Ae,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class tv{constructor(){this.type="ShapePath",this.color=new Ae,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Oo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,o){return this.currentPath.bezierCurveTo(e,t,n,i,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(b){const C=[];for(let E=0,S=b.length;E<S;E++){const R=b[E],O=new Hs;O.curves=R.curves,C.push(O)}return C}function n(b,C){const E=C.length;let S=!1;for(let R=E-1,O=0;O<E;R=O++){let B=C[R],A=C[O],F=A.x-B.x,z=A.y-B.y;if(Math.abs(z)>Number.EPSILON){if(z<0&&(B=C[O],F=-F,A=C[R],z=-z),b.y<B.y||b.y>A.y)continue;if(b.y===B.y){if(b.x===B.x)return!0}else{const X=z*(b.x-B.x)-F*(b.y-B.y);if(X===0)return!0;if(X<0)continue;S=!S}}else{if(b.y!==B.y)continue;if(A.x<=b.x&&b.x<=B.x||B.x<=b.x&&b.x<=A.x)return!0}}return S}const i=gi.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,l;const h=[];if(s.length===1)return a=s[0],l=new Hs,l.curves=a.curves,h.push(l),h;let u=!i(s[0].getPoints());u=e?!u:u;const d=[],f=[];let p=[],_=0,g;f[_]=void 0,p[_]=[];for(let b=0,C=s.length;b<C;b++)a=s[b],g=a.getPoints(),o=i(g),o=e?!o:o,o?(!u&&f[_]&&_++,f[_]={s:new Hs,p:g},f[_].s.curves=a.curves,u&&_++,p[_]=[]):p[_].push({h:a,p:g[0]});if(!f[0])return t(s);if(f.length>1){let b=!1,C=0;for(let E=0,S=f.length;E<S;E++)d[E]=[];for(let E=0,S=f.length;E<S;E++){const R=p[E];for(let O=0;O<R.length;O++){const B=R[O];let A=!0;for(let F=0;F<f.length;F++)n(B.p,f[F].p)&&(E!==F&&C++,A?(A=!1,d[F].push(B)):b=!0);A&&d[E].push(B)}}C>0&&b===!1&&(p=d)}let m;for(let b=0,C=f.length;b<C;b++){l=f[b].s,h.push(l),m=p[b];for(let E=0,S=m.length;E<S;E++)l.holes.push(m[E].h)}return h}}const Pi=nv();function nv(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const h=l-127;h<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):h<-14?(n[l]=1024>>-h-14,n[l|256]=1024>>-h-14|32768,i[l]=-h-1,i[l|256]=-h-1):h<=15?(n[l]=h+15<<10,n[l|256]=h+15<<10|32768,i[l]=13,i[l|256]=13):h<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let h=l<<13,u=0;for(;!(h&8388608);)h<<=1,u-=8388608;h&=-8388609,u+=947912704,s[l]=h|u}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:o,offsetTable:a}}function iv(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=tt(r,-65504,65504),Pi.floatView[0]=r;const e=Pi.uint32View[0],t=e>>23&511;return Pi.baseTable[t]+((e&8388607)>>Pi.shiftTable[t])}function sv(r){const e=r>>10;return Pi.uint32View[0]=Pi.mantissaTable[Pi.offsetTable[e]+(r&1023)]+Pi.exponentTable[e],Pi.floatView[0]}var rv=Object.freeze({__proto__:null,toHalfFloat:iv,fromHalfFloat:sv});function ov(){console.error("THREE.ImmediateRenderObject has been removed.")}class av extends Hn{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}class lv extends yo{constructor(e,t,n,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,n,i)}}class cv extends xa{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}}class hv extends us{constructor(e,t,n,i,s,o){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,s,o)}}class uv extends No{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}}class dv extends Fo{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}}class fv extends Uo{constructor(e,t,n,i,s,o,a){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,s,o,a)}}class pv extends ks{constructor(e,t,n,i,s,o,a,l){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,s,o,a,l)}}class mv extends Bo{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class gv extends Go{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class _v extends Vo{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class vv extends Jr{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}}class xv extends Kr{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class yv extends Br{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}}class Mv extends Ci{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}}class bv extends Wo{constructor(e,t,n,i,s,o){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,s,o)}}class wv extends Xo{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class Sv extends jr{constructor(e,t,n,i,s,o,a){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,s,o,a)}}class Ev extends qo{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class Tv extends Yo{constructor(e,t,n,i,s){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,s)}}class Av extends Zo{constructor(e,t,n,i,s,o){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,s,o)}}class Cv extends Jo{constructor(e,t,n,i,s){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,s)}}return typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:gs}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=gs),T.ACESFilmicToneMapping=ki,T.AddEquation=qe,T.AddOperation=ar,T.AdditiveAnimationBlendMode=_r,T.AdditiveBlending=gn,T.AlphaFormat=En,T.AlwaysDepth=oa,T.AlwaysStencilFunc=dn,T.AmbientLight=rd,T.AmbientLightProbe=d0,T.AnimationClip=Qo,T.AnimationLoader=Q_,T.AnimationMixer=P0,T.AnimationObjectGroup=C0,T.AnimationUtils=J_,T.ArcCurve=bu,T.ArrayCamera=Yh,T.ArrowHelper=Q0,T.Audio=_d,T.AudioAnalyser=v0,T.AudioContext=Xc,T.AudioListener=m0,T.AudioLoader=h0,T.AxesHelper=ev,T.BackSide=_t,T.BasicDepthPacking=Qi,T.BasicShadowMap=Nt,T.Bone=_c,T.BooleanKeyframeTrack=Ws,T.Box2=z0,T.Box3=Is,T.Box3Helper=K0,T.BoxBufferGeometry=hv,T.BoxGeometry=us,T.BoxHelper=$0,T.BufferAttribute=At,T.BufferGeometry=rt,T.BufferGeometryLoader=cd,T.ByteType=hr,T.Cache=qs,T.Camera=Fa,T.CameraHelper=J0,T.CanvasTexture=x_,T.CapsuleBufferGeometry=uv,T.CapsuleGeometry=No,T.CatmullRomCurve3=wu,T.CineonToneMapping=io,T.CircleBufferGeometry=dv,T.CircleGeometry=Fo,T.ClampToEdgeWrapping=jt,T.Clock=pd,T.Color=Ae,T.ColorKeyframeTrack=zc,T.ColorManagement=fn,T.CompressedArrayTexture=v_,T.CompressedTexture=Mc,T.CompressedTextureLoader=e0,T.ConeBufferGeometry=fv,T.ConeGeometry=Uo,T.CubeCamera=vh,T.CubeReflectionMapping=Sn,T.CubeRefractionMapping=si,T.CubeTexture=To,T.CubeTextureLoader=t0,T.CubeUVReflectionMapping=_i,T.CubicBezierCurve=Tc,T.CubicBezierCurve3=Eu,T.CubicInterpolant=Zu,T.CullFaceBack=ii,T.CullFaceFront=_s,T.CullFaceFrontBack=Ni,T.CullFaceNone=Re,T.Curve=ti,T.CurvePath=Au,T.CustomBlending=et,T.CustomToneMapping=so,T.CylinderBufferGeometry=pv,T.CylinderGeometry=ks,T.Cylindrical=B0,T.Data3DTexture=xa,T.DataArrayTexture=yo,T.DataTexture=Yr,T.DataTexture2DArray=lv,T.DataTexture3D=cv,T.DataTextureLoader=n0,T.DataUtils=rv,T.DecrementStencilOp=Jn,T.DecrementWrapStencilOp=Sl,T.DefaultLoadingManager=Ku,T.DepthFormat=zn,T.DepthStencilFormat=ci,T.DepthTexture=Zh,T.DirectionalLight=sd,T.DirectionalLightHelper=Z0,T.DiscreteInterpolant=Ju,T.DodecahedronBufferGeometry=mv,T.DodecahedronGeometry=Bo,T.DoubleSide=wn,T.DstAlphaFactor=ia,T.DstColorFactor=He,T.DynamicCopyUsage=c,T.DynamicDrawUsage=Pl,T.DynamicReadUsage=x,T.EdgesGeometry=Cu,T.EllipseCurve=nl,T.EqualDepth=eo,T.EqualStencilFunc=$n,T.EquirectangularReflectionMapping=xs,T.EquirectangularRefractionMapping=ri,T.Euler=Cr,T.EventDispatcher=j,T.ExtrudeBufferGeometry=gv,T.ExtrudeGeometry=Go,T.FileLoader=Li,T.Float16BufferAttribute=uf,T.Float32BufferAttribute=Pe,T.Float64BufferAttribute=df,T.FloatType=Bn,T.Fog=Xa,T.FogExp2=Wa,T.FramebufferTexture=__,T.FrontSide=ze,T.Frustum=Ba,T.GLBufferAttribute=N0,T.GLSL1=L,T.GLSL3=N,T.GreaterDepth=zi,T.GreaterEqualDepth=la,T.GreaterEqualStencilFunc=Ll,T.GreaterStencilFunc=Cl,T.GridHelper=q0,T.Group=Gr,T.HalfFloatType=Wi,T.HemisphereLight=ju,T.HemisphereLightHelper=X0,T.HemisphereLightProbe=u0,T.IcosahedronBufferGeometry=_v,T.IcosahedronGeometry=Vo,T.ImageBitmapLoader=c0,T.ImageLoader=ea,T.ImageUtils=Bl,T.ImmediateRenderObject=ov,T.IncrementStencilOp=vo,T.IncrementWrapStencilOp=Mr,T.InstancedBufferAttribute=Zr,T.InstancedBufferGeometry=ld,T.InstancedInterleavedBuffer=O0,T.InstancedMesh=du,T.Int16BufferAttribute=cf,T.Int32BufferAttribute=hf,T.Int8BufferAttribute=of,T.IntType=ys,T.InterleavedBuffer=qa,T.InterleavedBufferAttribute=zs,T.Interpolant=$o,T.InterpolateDiscrete=yi,T.InterpolateLinear=Cs,T.InterpolateSmooth=ji,T.InvertStencilOp=El,T.KeepStencilOp=yr,T.KeyframeTrack=ni,T.LOD=iu,T.LatheBufferGeometry=vv,T.LatheGeometry=Jr,T.Layers=Ea,T.LessDepth=aa,T.LessEqualDepth=rr,T.LessEqualStencilFunc=Al,T.LessStencilFunc=pa,T.Light=ps,T.LightProbe=ul,T.Line=fs,T.Line3=k0,T.LineBasicMaterial=Mn,T.LineCurve=sl,T.LineCurve3=Tu,T.LineDashedMaterial=qu,T.LineLoop=vu,T.LineSegments=mi,T.LinearEncoding=un,T.LinearFilter=st,T.LinearInterpolant=Bc,T.LinearMipMapLinearFilter=ha,T.LinearMipMapNearestFilter=Un,T.LinearMipmapLinearFilter=ai,T.LinearMipmapNearestFilter=vi,T.LinearSRGBColorSpace=es,T.LinearToneMapping=lr,T.Loader=On,T.LoaderUtils=Wc,T.LoadingManager=kc,T.LoopOnce=mr,T.LoopPingPong=da,T.LoopRepeat=gr,T.LuminanceAlphaFormat=Rn,T.LuminanceFormat=ur,T.MOUSE=Oi,T.Material=pn,T.MaterialLoader=dl,T.MathUtils=Xd,T.Matrix3=vn,T.Matrix4=Qe,T.MaxEquation=Mt,T.Mesh=an,T.MeshBasicMaterial=as,T.MeshDepthMaterial=dc,T.MeshDistanceMaterial=fc,T.MeshLambertMaterial=Wu,T.MeshMatcapMaterial=Xu,T.MeshNormalMaterial=Vu,T.MeshPhongMaterial=Hu,T.MeshPhysicalMaterial=ku,T.MeshStandardMaterial=Oc,T.MeshToonMaterial=Gu,T.MinEquation=Et,T.MirroredRepeatWrapping=Gi,T.MixOperation=to,T.MultiplyBlending=Ft,T.MultiplyOperation=vs,T.NearestFilter=It,T.NearestMipMapLinearFilter=ca,T.NearestMipMapNearestFilter=ro,T.NearestMipmapLinearFilter=oi,T.NearestMipmapNearestFilter=Vi,T.NeverDepth=ra,T.NeverStencilFunc=Tl,T.NoBlending=wt,T.NoColorSpace=bl,T.NoToneMapping=Cn,T.NormalAnimationBlendMode=hn,T.NormalBlending=zt,T.NotEqualDepth=or,T.NotEqualStencilFunc=Rl,T.NumberKeyframeTrack=Ko,T.Object3D=pt,T.ObjectLoader=a0,T.ObjectSpaceNormalMap=fa,T.OctahedronBufferGeometry=xv,T.OctahedronGeometry=Kr,T.OneFactor=nr,T.OneMinusDstAlphaFactor=Bi,T.OneMinusDstColorFactor=sr,T.OneMinusSrcAlphaFactor=Ut,T.OneMinusSrcColorFactor=Vt,T.OrthographicCamera=ka,T.PCFShadowMap=it,T.PCFSoftShadowMap=Fi,T.PMREMGenerator=lc,T.Path=Oo,T.PerspectiveCamera=ln,T.Plane=ds,T.PlaneBufferGeometry=yv,T.PlaneGeometry=Br,T.PlaneHelper=j0,T.PointLight=id,T.PointLightHelper=V0,T.Points=yu,T.PointsMaterial=xc,T.PolarGridHelper=Y0,T.PolyhedronBufferGeometry=Mv,T.PolyhedronGeometry=Ci,T.PositionalAudio=_0,T.PropertyBinding=ft,T.PropertyMixer=xd,T.QuadraticBezierCurve=Ac,T.QuadraticBezierCurve3=Cc,T.Quaternion=An,T.QuaternionKeyframeTrack=Qr,T.QuaternionLinearInterpolant=$u,T.REVISION=gs,T.RGBADepthPacking=_o,T.RGBAFormat=rn,T.RGBAIntegerFormat=qi,T.RGBA_ASTC_10x10_Format=xi,T.RGBA_ASTC_10x5_Format=go,T.RGBA_ASTC_10x6_Format=Ss,T.RGBA_ASTC_10x8_Format=Ki,T.RGBA_ASTC_12x10_Format=Es,T.RGBA_ASTC_12x12_Format=Ts,T.RGBA_ASTC_4x4_Format=ui,T.RGBA_ASTC_5x4_Format=fo,T.RGBA_ASTC_5x5_Format=ws,T.RGBA_ASTC_6x5_Format=po,T.RGBA_ASTC_6x6_Format=mo,T.RGBA_ASTC_8x5_Format=$i,T.RGBA_ASTC_8x6_Format=pr,T.RGBA_ASTC_8x8_Format=Yn,T.RGBA_BPTC_Format=As,T.RGBA_ETC2_EAC_Format=Ji,T.RGBA_PVRTC_2BPPV1_Format=uo,T.RGBA_PVRTC_4BPPV1_Format=Yi,T.RGBA_S3TC_DXT1_Format=hi,T.RGBA_S3TC_DXT3_Format=Tn,T.RGBA_S3TC_DXT5_Format=Zt,T.RGBFormat=ao,T.RGB_ETC1_Format=ua,T.RGB_ETC2_Format=Zi,T.RGB_PVRTC_2BPPV1_Format=ho,T.RGB_PVRTC_4BPPV1_Format=co,T.RGB_S3TC_DXT1_Format=fr,T.RGFormat=qn,T.RGIntegerFormat=lo,T.RawShaderMaterial=zu,T.Ray=wo,T.Raycaster=F0,T.RectAreaLight=od,T.RedFormat=dr,T.RedIntegerFormat=Xi,T.ReinhardToneMapping=no,T.RepeatWrapping=Hi,T.ReplaceStencilOp=Rs,T.ReverseSubtractEquation=sn,T.RingBufferGeometry=bv,T.RingGeometry=Wo,T.SRGBColorSpace=Pn,T.Scene=Kh,T.ShaderChunk=nt,T.ShaderLib=ei,T.ShaderMaterial=pi,T.ShadowMaterial=Bu,T.Shape=Hs,T.ShapeBufferGeometry=wv,T.ShapeGeometry=Xo,T.ShapePath=tv,T.ShapeUtils=gi,T.ShortType=oo,T.Skeleton=Ka,T.SkeletonHelper=G0,T.SkinnedMesh=lu,T.Source=Ps,T.Sphere=Fs,T.SphereBufferGeometry=Sv,T.SphereGeometry=jr,T.Spherical=U0,T.SphericalHarmonics3=ad,T.SplineCurve=Rc,T.SpotLight=td,T.SpotLightHelper=H0,T.Sprite=tu,T.SpriteMaterial=mc,T.SrcAlphaFactor=ir,T.SrcAlphaSaturateFactor=sa,T.SrcColorFactor=Ui,T.StaticCopyUsage=M,T.StaticDrawUsage=ts,T.StaticReadUsage=w,T.StereoCamera=f0,T.StreamCopyUsage=v,T.StreamDrawUsage=Il,T.StreamReadUsage=y,T.StringKeyframeTrack=Xs,T.SubtractEquation=St,T.SubtractiveBlending=je,T.TOUCH=Pt,T.TangentSpaceNormalMap=di,T.TetrahedronBufferGeometry=Ev,T.TetrahedronGeometry=qo,T.Texture=Ht,T.TextureLoader=i0,T.TorusBufferGeometry=Tv,T.TorusGeometry=Yo,T.TorusKnotBufferGeometry=Av,T.TorusKnotGeometry=Zo,T.Triangle=Gn,T.TriangleFanDrawMode=Ml,T.TriangleStripDrawMode=xr,T.TrianglesDrawMode=vr,T.TubeBufferGeometry=Cv,T.TubeGeometry=Jo,T.UVMapping=cr,T.Uint16BufferAttribute=Kl,T.Uint32BufferAttribute=jl,T.Uint8BufferAttribute=af,T.Uint8ClampedBufferAttribute=lf,T.Uniform=Zc,T.UniformsGroup=D0,T.UniformsLib=xe,T.UniformsUtils=_h,T.UnsignedByteType=_n,T.UnsignedInt248Type=li,T.UnsignedIntType=Yt,T.UnsignedShort4444Type=Ms,T.UnsignedShort5551Type=bs,T.UnsignedShortType=cn,T.VSMShadowMap=we,T.Vector2=oe,T.Vector3=D,T.Vector4=xt,T.VectorKeyframeTrack=jo,T.VideoTexture=g_,T.WebGL1Renderer=$h,T.WebGL3DRenderTarget=Jd,T.WebGLArrayRenderTarget=Zd,T.WebGLCubeRenderTarget=xh,T.WebGLMultipleRenderTargets=$d,T.WebGLMultisampleRenderTarget=av,T.WebGLRenderTarget=Hn,T.WebGLRenderer=Jh,T.WebGLUtils=qh,T.WireframeGeometry=Nu,T.WrapAroundEnding=on,T.ZeroCurvatureEnding=Zn,T.ZeroFactor=pe,T.ZeroSlopeEnding=Ln,T.ZeroStencilOp=wl,T._SRGBAFormat=q,T.sRGBEncoding=bt,T}var yl={exports:{}};/*!
 * uevent (v2.2.0)
 * @copyright 2015-2022 Damien "Mistic" Sorel <contact@git.strangeplanet.fr>
 * @licence MIT
 */var Od;function kv(){return Od||(Od=1,function(gs,Oi){(function(Pt,Re){Re(Oi)})(Nd,function(Pt){var Re=function(){return!0},ii=function(){return!1},_s=function(){function wt(gn,je,Ft){Object.defineProperties(this,{target:{get:function(){return gn},set:function(){},enumerable:!0},type:{get:function(){return je},set:function(){},enumerable:!0},args:{get:function(){return Ft},set:function(){},enumerable:!0}}),this.isDefaultPrevented=ii,this.isPropagationStopped=ii}var zt=wt.prototype;return zt.preventDefault=function(){this.isDefaultPrevented=Re},zt.stopPropagation=function(){this.isPropagationStopped=Re},wt}(),Ni=_s,Nt=function(){function wt(){}var zt=wt.prototype;return zt.on=function(je,Ft){var et=this;if(this.__events=this.__events||{},typeof je=="object")for(var qe in je)je.hasOwnProperty(qe)&&(this.__events[qe]=this.__events[qe]||[],this.__events[qe].push(je[qe]));else je.split(" ").forEach(function(St){et.__events[St]=et.__events[St]||[],et.__events[St].push(Ft)});return this},zt.off=function(je,Ft){var et=this;if(typeof je=="object"){for(var qe in je)if(je.hasOwnProperty(qe)){if(this.__events&&qe in this.__events){var St=this.__events[qe].indexOf(je[qe]);St!==-1&&this.__events[qe].splice(St,1)}if(this.__once&&qe in this.__once){var sn=this.__once[qe].indexOf(je[qe]);sn!==-1&&this.__once[qe].splice(sn,1)}}}else je?je.split(" ").forEach(function(Et){if(et.__events&&Et in et.__events)if(Ft){var Mt=et.__events[Et].indexOf(Ft);Mt!==-1&&et.__events[Et].splice(Mt,1)}else et.__events[Et].length=0;if(et.__once&&Et in et.__once)if(Ft){var pe=et.__once[Et].indexOf(Ft);pe!==-1&&et.__once[Et].splice(pe,1)}else et.__once[Et].length=0}):(this.__events={},this.__once={});return this},zt.once=function(je,Ft){var et=this;if(this.__once=this.__once||{},typeof je=="object")for(var qe in je)je.hasOwnProperty(qe)&&(this.__once[qe]=this.__once[qe]||[],this.__once[qe].push(je[qe]));else je.split(" ").forEach(function(St){et.__once[St]=et.__once[St]||[],et.__once[St].push(Ft)});return this},zt.trigger=function(je){var Ft=Array.prototype.slice.call(arguments,1),et=new Ni(this,je,Ft);if(this.__events&&je in this.__events)for(var qe=0,St=this.__events[je].length;qe<St;qe++){var sn=this.__events[je][qe];if(typeof sn=="object"?sn.handleEvent(et):sn.call.apply(sn,[this,et].concat(Ft)),et.isPropagationStopped())break}if(this.__once&&je in this.__once){for(var Et=0,Mt=this.__once[je].length;Et<Mt;Et++){var pe=this.__once[je][Et];if(typeof pe=="object"?pe.handleEvent(et):pe.call.apply(pe,[this,et].concat(Ft)),et.isPropagationStopped())break}delete this.__once[je]}return et},zt.change=function(je,Ft){var et=Array.prototype.slice.call(arguments,2),qe=new Ni(this,je,et);if(qe.value=Ft,this.__events&&je in this.__events)for(var St=0,sn=this.__events[je].length;St<sn;St++){var Et=this.__events[je][St];if(typeof Et=="object"?qe.value=Et.handleEvent(qe):qe.value=Et.call.apply(Et,[this,qe,qe.value].concat(et)),qe.isPropagationStopped())break}return qe.value},wt}(),it=Nt;function Fi(wt){return wt=typeof wt=="function"?wt.prototype:wt,["on","off","once","trigger","change"].forEach(function(zt){wt[zt]=it.prototype[zt]}),wt}var we={EventEmitter:it,Event:Ni,mixin:Fi},ze=we.EventEmitter,_t=we.Event,wn=we.mixin;Pt.Event=_t,Pt.EventEmitter=ze,Pt.default=we,Pt.mixin=wn,Object.defineProperty(Pt,"__esModule",{value:!0})})}(yl,yl.exports)),yl.exports}/*!
* Photo Sphere Viewer 4.8.1
* @copyright 2014-2015 Jérémy Heleine
* @copyright 2015-2022 Damien "Mistic" Sorel
* @licence MIT (https://opensource.org/licenses/MIT)
*/(function(gs,Oi){(function(Pt,Re){Re(Oi,zv(),kv())})(Nd,function(Pt,Re,ii){function _s(w,x){for(var y=0;y<x.length;y++){var M=x[y];M.enumerable=M.enumerable||!1,M.configurable=!0,"value"in M&&(M.writable=!0),Object.defineProperty(w,M.key,M)}}function Ni(w,x,y){return x&&_s(w.prototype,x),y&&_s(w,y),Object.defineProperty(w,"prototype",{writable:!1}),w}function Nt(){return Nt=Object.assign?Object.assign.bind():function(w){for(var x=1;x<arguments.length;x++){var y=arguments[x];for(var M in y)Object.prototype.hasOwnProperty.call(y,M)&&(w[M]=y[M])}return w},Nt.apply(this,arguments)}function it(w,x){w.prototype=Object.create(x.prototype),w.prototype.constructor=w,Fi(w,x)}function Fi(w,x){return Fi=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(M,c){return M.__proto__=c,M},Fi(w,x)}function we(w){if(w===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return w}function ze(w){this.message=w,"captureStackTrace"in Error?Error.captureStackTrace(this,ze):this.stack=new Error().stack}ze.prototype=Object.create(Error.prototype),ze.prototype.name="PSVError",ze.prototype.constructor=ze;var _t=function(){function w(y){this.psv=y}var x=w.prototype;return x.destroy=function(){delete this.psv},x.supportsTransition=function(M){return!1},x.supportsPreload=function(M){return!1},x.loadTexture=function(M,c,v){throw new ze("loadTexture not implemented")},x.createMesh=function(M){throw new ze("createMesh not implemented")},x.setTexture=function(M,c,v){throw new ze("setTexture not implemented")},x.setTextureOpacity=function(M,c){throw new ze("setTextureOpacity not implemented")},x.disposeTexture=function(M){throw new ze("disposeTexture not implemented")},x.setOverlay=function(M,c,v){throw new ze("setOverlay not implemented")},w.createOverlayMaterial=function(M){var c,v=M===void 0?{}:M,L=v.additionalUniforms,N=v.overrideVertexShader;return new Re.ShaderMaterial({uniforms:Nt({},L,(c={},c[w.OVERLAY_UNIFORMS.panorama]={value:new Re.Texture},c[w.OVERLAY_UNIFORMS.overlay]={value:new Re.Texture},c[w.OVERLAY_UNIFORMS.globalOpacity]={value:1},c[w.OVERLAY_UNIFORMS.overlayOpacity]={value:1},c)),vertexShader:N||`
varying vec2 vUv;

void main() {
  vUv = uv;
  gl_Position = projectionMatrix *  modelViewMatrix * vec4( position, 1.0 );
}`,fragmentShader:`
uniform sampler2D `+w.OVERLAY_UNIFORMS.panorama+`;
uniform sampler2D `+w.OVERLAY_UNIFORMS.overlay+`;
uniform float `+w.OVERLAY_UNIFORMS.globalOpacity+`;
uniform float `+w.OVERLAY_UNIFORMS.overlayOpacity+`;

varying vec2 vUv;

void main() {
  vec4 tColor1 = texture2D( `+w.OVERLAY_UNIFORMS.panorama+`, vUv );
  vec4 tColor2 = texture2D( `+w.OVERLAY_UNIFORMS.overlay+`, vUv );
  gl_FragColor = vec4(
    mix( tColor1.rgb, tColor2.rgb, tColor2.a * `+w.OVERLAY_UNIFORMS.overlayOpacity+` ),
    `+w.OVERLAY_UNIFORMS.globalOpacity+`
  );
}`})},w}();_t.id=null,_t.supportsDownload=!1,_t.supportsOverlay=!1,_t.OVERLAY_UNIFORMS={panorama:"panorama",overlay:"overlay",globalOpacity:"globalOpacity",overlayOpacity:"overlayOpacity"};var wn=1500,wt=500,zt=4,gn=300,je=500,Ft=100,et=2e3,qe=300,St=10,sn="photoSphereViewer",Et="psvSphere",Mt={ROTATE_LAT_UP:"rotateLatitudeUp",ROTATE_LAT_DOWN:"rotateLatitudeDown",ROTATE_LONG_RIGHT:"rotateLongitudeRight",ROTATE_LONG_LEFT:"rotateLongitudeLeft",ZOOM_IN:"zoomIn",ZOOM_OUT:"zoomOut",TOGGLE_AUTOROTATE:"toggleAutorotate"},pe={AUTOROTATE:"autorotate",BEFORE_RENDER:"before-render",BEFORE_ROTATE:"before-rotate",CLICK:"click",CLOSE_PANEL:"close-panel",CONFIG_CHANGED:"config-changed",DOUBLE_CLICK:"dblclick",FULLSCREEN_UPDATED:"fullscreen-updated",HIDE_NOTIFICATION:"hide-notification",HIDE_OVERLAY:"hide-overlay",HIDE_TOOLTIP:"hide-tooltip",KEY_PRESS:"key-press",LOAD_PROGRESS:"load-progress",OPEN_PANEL:"open-panel",PANORAMA_LOADED:"panorama-loaded",POSITION_UPDATED:"position-updated",READY:"ready",RENDER:"render",SHOW_NOTIFICATION:"show-notification",SHOW_OVERLAY:"show-overlay",SHOW_TOOLTIP:"show-tooltip",SIZE_UPDATED:"size-updated",STOP_ALL:"stop-all",ZOOM_UPDATED:"zoom-updated"},nr={GET_ANIMATE_POSITION:"get-animate-position",GET_ROTATE_POSITION:"get-rotate-position"},Ui={ENTER_OBJECT:"enter-object",HOVER_OBJECT:"hover-object",LEAVE_OBJECT:"leave-object"},Vt={MENU:"menu",TWO_FINGERS:"twoFingers",CTRL_ZOOM:"ctrlZoom",ERROR:"error",DESCRIPTION:"description"},ir={linear:function(x){return x},inQuad:function(x){return x*x},outQuad:function(x){return x*(2-x)},inOutQuad:function(x){return x<.5?2*x*x:-1+(4-2*x)*x},inCubic:function(x){return x*x*x},outCubic:function(x){return--x*x*x+1},inOutCubic:function(x){return x<.5?4*x*x*x:(x-1)*(2*x-2)*(2*x-2)+1},inQuart:function(x){return x*x*x*x},outQuart:function(x){return 1- --x*x*x*x},inOutQuart:function(x){return x<.5?8*x*x*x*x:1-8*--x*x*x*x},inQuint:function(x){return x*x*x*x*x},outQuint:function(x){return 1+--x*x*x*x*x},inOutQuint:function(x){return x<.5?16*x*x*x*x*x:1+16*--x*x*x*x*x},inSine:function(x){return 1-Math.cos(x*(Math.PI/2))},outSine:function(x){return Math.sin(x*(Math.PI/2))},inOutSine:function(x){return .5-.5*Math.cos(Math.PI*x)},inExpo:function(x){return Math.pow(2,10*(x-1))},outExpo:function(x){return 1-Math.pow(2,-10*x)},inOutExpo:function(x){return(x=x*2-1)<0?.5*Math.pow(2,10*x):1-.5*Math.pow(2,-10*x)},inCirc:function(x){return 1-Math.sqrt(1-x*x)},outCirc:function(x){return Math.sqrt(1-(x-1)*(x-1))},inOutCirc:function(x){return(x*=2)<1?.5-.5*Math.sqrt(1-x*x):.5+.5*Math.sqrt(1-(x-=2)*x)}},Ut={Enter:"Enter",Control:"Control",Escape:"Escape",Space:" ",PageUp:"PageUp",PageDown:"PageDown",ArrowLeft:"ArrowLeft",ArrowUp:"ArrowUp",ArrowRight:"ArrowRight",ArrowDown:"ArrowDown",Delete:"Delete",Plus:"+",Minus:"-"},ia=Object.freeze({__proto__:null,DEFAULT_TRANSITION:wn,ANIMATION_MIN_DURATION:wt,MOVE_THRESHOLD:zt,DBLCLICK_DELAY:gn,LONGTOUCH_DELAY:je,TWOFINGERSOVERLAY_DELAY:Ft,CTRLZOOM_TIMEOUT:et,INERTIA_WINDOW:qe,SPHERE_RADIUS:St,VIEWER_DATA:sn,MESH_USER_DATA:Et,ACTIONS:Mt,EVENTS:pe,CHANGE_EVENTS:nr,OBJECT_EVENTS:Ui,IDS:Vt,EASINGS:ir,KEY_CODES:Ut}),Bi=sn+"_touchSupport",He={loaded:!1,pixelRatio:1,isWebGLSupported:!1,isTouchEnabled:null,maxTextureWidth:0,mouseWheelEvent:null,fullscreenEvent:null};He.load=function(){if(!He.loaded){var w=sa();He.loaded=!0,He.pixelRatio=window.devicePixelRatio||1,He.isWebGLSupported=w!=null,He.isTouchEnabled=ra(),He.maxTextureWidth=oa(w),He.mouseWheelEvent=rr(),He.fullscreenEvent=la()}};var sr=null;He.getMaxCanvasWidth=function(){return sr===null&&(sr=aa(He.maxTextureWidth)),sr};function sa(){var w=document.createElement("canvas"),x=["webgl","experimental-webgl","moz-webgl","webkit-3d"],y=null;return w.getContext&&x.some(function(M){try{return y=w.getContext(M),y!==null}catch{return!1}})?y:null}function ra(){var w="ontouchstart"in window||navigator.maxTouchPoints>0;Bi in localStorage&&(w=localStorage[Bi]==="true");var x=new Promise(function(y){var M,c=function(){M(),localStorage[Bi]=!1,y(!1)},v=function(){M(),localStorage[Bi]=!0,y(!0)},L=function(){M(),localStorage[Bi]=w,y(w)};window.addEventListener("mousedown",c,!1),window.addEventListener("touchstart",v,!1);var N=setTimeout(L,1e4);M=function(){window.removeEventListener("mousedown",c),window.removeEventListener("touchstart",v),clearTimeout(N)}});return{initial:w,promise:x}}function oa(w){return w!==null?w.getParameter(w.MAX_TEXTURE_SIZE):0}function aa(w){var x=document.createElement("canvas"),y=x.getContext("2d");for(x.width=w,x.height=w/2;x.width>1024;){y.fillStyle="white",y.fillRect(0,0,1,1);try{if(y.getImageData(0,0,1,1).data[0]>0)return x.width}catch{}x.width/=2,x.height/=2}throw new ze("Unable to detect system capabilities")}function rr(){return"onwheel"in document.createElement("div")?"wheel":document.onmousewheel!==void 0?"mousewheel":"DOMMouseScroll"}var eo={exitFullscreen:"fullscreenchange",webkitExitFullscreen:"webkitfullscreenchange",mozCancelFullScreen:"mozfullscreenchange",msExitFullscreen:"MSFullscreenChange"};function la(){var w=Object.keys(eo).filter(function(x){return x in document});return w.length?eo[w[0]]:null}function zi(w,x,y){y===void 0?w.classList.toggle(x):y?w.classList.add(x):y||w.classList.remove(x)}function or(w,x){var y;(y=w.classList).add.apply(y,x.split(" "))}function vs(w,x){var y;(y=w.classList).remove.apply(y,x.split(" "))}function to(w,x){var y=w;do{if(y===x)return!0;y=y.parentNode}while(y);return!1}function ar(w,x){if(!(w!=null&&w.matches))return null;var y=w;do{if(y.matches(x))return y;y=y instanceof SVGElement?y.parentNode:y.parentElement}while(y);return null}function Cn(w){for(var x=0,y=0,M=w;M;)x+=M.offsetLeft-M.scrollLeft+M.clientLeft,y+=M.offsetTop-M.scrollTop+M.clientTop,M=M.offsetParent;return{left:x,top:y}}function lr(w){return(document.fullscreenElement||document.webkitFullscreenElement)===w}function no(w){(w.requestFullscreen||w.webkitRequestFullscreen).call(w)}function io(){(document.exitFullscreen||document.webkitExitFullscreen).call(document)}function ki(w,x){return window.getComputedStyle(w,null)[x]}function so(w){var x=10,y=40,M=800,c=0,v=0,L=0,N=0;return"detail"in w&&(v=w.detail),"wheelDelta"in w&&(v=-w.wheelDelta/120),"wheelDeltaY"in w&&(v=-w.wheelDeltaY/120),"wheelDeltaX"in w&&(c=-w.wheelDeltaX/120),"axis"in w&&w.axis===w.HORIZONTAL_AXIS&&(c=v,v=0),L=c*x,N=v*x,"deltaY"in w&&(N=w.deltaY),"deltaX"in w&&(L=w.deltaX),(L||N)&&w.deltaMode&&(w.deltaMode===1?(L*=y,N*=y):(L*=M,N*=M)),L&&!c&&(c=L<1?-1:1),N&&!v&&(v=N<1?-1:1),{spinX:c,spinY:v,pixelX:L,pixelY:N}}function cr(w,x,y){return Re.MathUtils.clamp(w,x,y)}function Sn(w,x){var y=w%x;return y<0&&(y+=x),y}function si(w){return Re.MathUtils.isPowerOfTwo(w)}function xs(w){return w.reduce(function(x,y){return x+y},0)}function ri(w,x){return Math.sqrt(Math.pow(w.x-x.x,2)+Math.pow(w.y-x.y,2))}function _i(w,x){var y=[0,Math.PI*2,-Math.PI*2];return y.reduce(function(M,c){var v=x-w+c;return Math.abs(v)<Math.abs(M)?v:M},1/0)}function Hi(w,x){return Math.acos(Math.cos(w.latitude)*Math.cos(x.latitude)*Math.cos(w.longitude-x.longitude)+Math.sin(w.latitude)*Math.sin(x.latitude))}function jt(w,x){var y=w[0],M=w[1],c=x[0],v=x[1],L=(c-y)*Math.cos((M+v)/2),N=v-M;return Math.sqrt(L*L+N*N)}function Gi(w){return w.replace(/[A-Z](?:(?=[^A-Z])|[A-Z]*(?=[A-Z][^A-Z]|$))/g,function(x,y){return(y>0?"-":"")+x.toLowerCase()})}function It(w,x){var y,M,c,v,L=0,N=function(){L=Date.now(),v=void 0,c=w.apply(y,M),v||(y=M=null)};return function(){var q=Date.now();L||(L=q);var j=x-(q-L);return y=this,M=arguments,j<=0||j>x?(v&&(clearTimeout(v),v=void 0),L=q,c=w.apply(y,M),v||(y=M=null)):v||(v=setTimeout(N,j)),c}}function Vi(w){if(typeof w=="object"&&w!==null){if(typeof Object.getPrototypeOf=="function"){var x=Object.getPrototypeOf(w);return x===Object.prototype||x===null}return Object.prototype.toString.call(w)==="[object Object]"}return!1}function ro(w,x){var y=x;return function M(c,v){return Array.isArray(v)?(!c||!Array.isArray(c)?c=[]:c.length=0,v.forEach(function(L,N){c[N]=M(null,L)})):typeof v=="object"?((!c||Array.isArray(c))&&(c={}),Object.keys(v).forEach(function(L){typeof v[L]!="object"||!v[L]||!Vi(v[L])?c[L]=v[L]:v[L]!=y&&(c[L]?M(c[L],v[L]):c[L]=M(null,v[L]))})):c=v,c}(w,x)}function oi(w){return ro(null,w)}function ca(w){return!w||Object.keys(w).length===0&&w.constructor===Object}function st(w,x){Object.keys(w).forEach(function(y){x(w[y],y)})}function vi(w){return w==null}function Un(){for(var w=arguments.length,x=new Array(w),y=0;y<w;y++)x[y]=arguments[y];for(var M=0,c=x;M<c.length;M++){var v=c[M];if(!vi(v))return v}}function ai(w,x){if(w===x)return!0;if(ha(w)&&ha(x)){if(Object.keys(w).length!==Object.keys(x).length)return!1;for(var y=0,M=Object.keys(w);y<M.length;y++){var c=M[y];if(!ai(w[c],x[c]))return!1}return!0}else return!1}function ha(w){return typeof w=="object"&&w!=null}function _n(w,x){if(w)for(var y=0,M=[["_",w]].concat(Object.entries(w));y<M.length;y++){var c=M[y],v=c[1];if(v.prototype instanceof x)return v}return null}function hr(){var w=new Error("Loading was aborted.");return w.name="AbortError",w}function oo(w){return(w==null?void 0:w.name)==="AbortError"}function cn(w){console.warn("PhotoSphereViewer: "+w)}function ys(w){return[["x","y"],["longitude","latitude"]].some(function(x){var y=x[0],M=x[1];return w[y]!==void 0&&w[M]!==void 0})}function Yt(w,x){var y=w.match("<GPano:"+x+">(.*)</GPano:"+x+">");if(y!==null){var M=parseInt(y[1],10);return isNaN(M)?null:M}if(y=w.match("GPano:"+x+'="(.*?)"'),y!==null){var c=parseInt(y[1],10);return isNaN(c)?null:c}return null}var Bn={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"};function Wi(w){if(!w)return{x:.5,y:.5};if(typeof w=="object")return w;var x=w.toLocaleLowerCase().split(" ").slice(0,2);x.length===1&&(Bn[x[0]]!==void 0?x=[x[0],"center"]:x=[x[0],x[0]]);var y=x[1]!=="left"&&x[1]!=="right"&&x[0]!=="top"&&x[0]!=="bottom";x=x.map(function(c){return Bn[c]||c}),y||x.reverse();var M=x.join(" ").match(/^([0-9.]+)% ([0-9.]+)%$/);return M?{x:parseFloat(M[1])/100,y:parseFloat(M[2])/100}:{x:.5,y:.5}}var Ms=["left","center","right"],bs=["top","center","bottom"],li=[].concat(Ms,bs),En="center";function ao(w,x){var y=x===void 0?{allowCenter:!0,cssOrder:!0}:x,M=y.allowCenter,c=y.cssOrder;return w?(typeof w=="string"&&(w=w.split(" ")),w.length===1&&(w[0]===En?w=[En,En]:Ms.indexOf(w[0])!==-1?w=[En,w[0]]:bs.indexOf(w[0])!==-1&&(w=[w[0],En])),w.length!==2||li.indexOf(w[0])===-1||li.indexOf(w[1])===-1?(cn("Unparsable position "+w),null):!M&&w[0]===En&&w[1]===En?(cn("Invalid position center center"),null):(c&&!rn(w)&&(w=[w[1],w[0]]),w[1]===En&&Ms.indexOf(w[0])!==-1&&(w=[En,w[0]]),w[0]===En&&bs.indexOf(w[1])!==-1&&(w=[w[1],En]),w)):null}function rn(w){return bs.indexOf(w[0])!==-1&&Ms.indexOf(w[1])!==-1}function ur(w){var x;if(typeof w=="string"){var y=w.toString().trim(),M=parseFloat(y.replace(/^(-?[0-9]+(?:\.[0-9]*)?).*$/,"$1")),c=y.replace(/^-?[0-9]+(?:\.[0-9]*)?(.*)$/,"$1").trim();switch(c.match(/(pm|per minute)$/)&&(M/=60),c){case"dpm":case"degrees per minute":case"dps":case"degrees per second":x=Re.MathUtils.degToRad(M);break;case"rdpm":case"radians per minute":case"rdps":case"radians per second":x=M;break;case"rpm":case"revolutions per minute":case"rps":case"revolutions per second":x=M*Math.PI*2;break;default:throw new ze('Unknown speed unit "'+c+'"')}}else x=w;return x}function Rn(w,x,y){x===void 0&&(x=!1),y===void 0&&(y=x);var M;if(typeof w=="string"){var c=w.toLowerCase().trim().match(/^(-?[0-9]+(?:\.[0-9]*)?)(.*)$/);if(!c)throw new ze('Unknown angle "'+w+'"');var v=parseFloat(c[1]),L=c[2];if(L)switch(L){case"deg":case"degs":M=Re.MathUtils.degToRad(v);break;case"rad":case"rads":M=v;break;default:throw new ze('Unknown angle unit "'+L+'"')}else M=v}else if(typeof w=="number"&&!isNaN(w))M=w;else throw new ze('Unknown angle "'+w+'"');return M=Sn(x?M+Math.PI:M,Math.PI*2),x?Re.MathUtils.clamp(M-Math.PI,-Math.PI/(y?2:1),Math.PI/(y?2:1)):M}function zn(w){var x=new Re.Texture(w);return x.needsUpdate=!0,x.minFilter=Re.LinearFilter,x.generateMipmaps=!1,x}var ci=new Re.Quaternion;function dr(w,x){ci.setFromEuler(x).invert(),w.applyQuaternion(ci)}var Xi=function(){function w(y){var M=this;this.__callbacks=[],y?((!y.easing||typeof y.easing=="string")&&(y.easing=ir[y.easing||"linear"]),this.__start=null,this.options=y,y.delay?this.__delayTimeout=setTimeout(function(){M.__delayTimeout=null,M.__animationFrame=window.requestAnimationFrame(function(c){return M.__run(c)})},y.delay):this.__animationFrame=window.requestAnimationFrame(function(c){return M.__run(c)})):this.__resolved=!0}var x=w.prototype;return x.__run=function(M){var c=this;if(!this.__cancelled){this.__start===null&&(this.__start=M);var v=(M-this.__start)/this.options.duration,L={};v<1?(st(this.options.properties,function(N,q){N&&(L[q]=N.start+(N.end-N.start)*c.options.easing(v))}),this.options.onTick(L,v),this.__animationFrame=window.requestAnimationFrame(function(N){return c.__run(N)})):(st(this.options.properties,function(N,q){N&&(L[q]=N.end)}),this.options.onTick(L,1),this.__animationFrame=window.requestAnimationFrame(function(){c.__resolved=!0,c.__resolve(!0)}))}},x.__resolve=function(M){this.__callbacks.forEach(function(c){return c(M)}),this.__callbacks.length=0},x.then=function(M){var c=this;return this.__resolved||this.__cancelled?Promise.resolve(this.__resolved).then(M):new Promise(function(v){c.__callbacks.push(v)}).then(M)},x.cancel=function(){!this.__cancelled&&!this.__resolved&&(this.__cancelled=!0,this.__resolve(!1),this.__delayTimeout&&(window.clearTimeout(this.__delayTimeout),this.__delayTimeout=null),this.__animationFrame&&(window.cancelAnimationFrame(this.__animationFrame),this.__animationFrame=null))},w}(),qn=function(){function w(y,M,c,v,L){if(M===void 0&&(M=0),c===void 0&&(c=-1/0),v===void 0&&(v=1/0),L===void 0&&(L=!1),this.fn=y,this.mode=w.STOP,this.speed=0,this.speedMult=1,this.currentSpeed=0,this.target=0,this.current=M,this.min=c,this.max=v,this.loopValue=L,L&&c!==0)throw new ze("invalid config");this.fn&&this.fn(M)}var x=w.prototype;return x.setSpeed=function(M){this.speed=M},x.goto=function(M,c){c===void 0&&(c=1),this.mode=w.POSITION,this.target=this.loopValue?Sn(M,this.max):Re.MathUtils.clamp(M,this.min,this.max),this.speedMult=c},x.step=function(M,c){c===void 0&&(c=1),this.mode!==w.POSITION&&(this.target=this.current),this.goto(this.target+M,c)},x.roll=function(M,c){M===void 0&&(M=!1),c===void 0&&(c=1),this.mode=w.INFINITE,this.target=M?-1/0:1/0,this.speedMult=c},x.stop=function(){this.mode=w.STOP},x.setValue=function(M){return this.target=this.loopValue?Sn(M,this.max):Re.MathUtils.clamp(M,this.min,this.max),this.mode=w.STOP,this.target!==this.current?(this.current=this.target,this.fn&&this.fn(this.current),!0):!1},x.update=function(M){if(this.mode===w.POSITION){this.loopValue&&Math.abs(this.target-this.current)>this.max/2&&(this.current=this.current<this.target?this.current+this.max:this.current-this.max);var c=this.currentSpeed*this.currentSpeed/(this.speed*this.speedMult*4);Math.abs(this.target-this.current)<=c&&(this.mode=w.STOP)}var v=this.mode===w.STOP?0:this.speed*this.speedMult;this.target<this.current&&(v=-v),this.currentSpeed<v?this.currentSpeed=Math.min(v,this.currentSpeed+M/1e3*this.speed*this.speedMult*2):this.currentSpeed>v&&(this.currentSpeed=Math.max(v,this.currentSpeed-M/1e3*this.speed*this.speedMult*2));var L=null;return this.current>this.target&&this.currentSpeed?L=Math.max(this.target,this.current+this.currentSpeed*M/1e3):this.current<this.target&&this.currentSpeed&&(L=Math.min(this.target,this.current+this.currentSpeed*M/1e3)),L!==null&&(L=this.loopValue?Sn(L,this.max):Re.MathUtils.clamp(L,this.min,this.max),L!==this.current)?(this.current=L,this.fn&&this.fn(this.current),!0):!1},w}();qn.STOP=0,qn.INFINITE=1,qn.POSITION=2;var lo=function(){function w(y,M){this.fn=M,this.dynamics=y,this.fn&&this.fn(this.current)}var x=w.prototype;return x.setSpeed=function(M){st(this.dynamics,function(c){c.setSpeed(M)})},x.goto=function(M,c){var v=this;c===void 0&&(c=1),st(M,function(L,N){v.dynamics[N].goto(L,c)})},x.step=function(M,c){var v=this;c===void 0&&(c=1),st(M,function(L,N){v.dynamics[N].step(L,c)})},x.roll=function(M,c){var v=this;c===void 0&&(c=1),st(M,function(L,N){v.dynamics[N].roll(L,c)})},x.stop=function(){st(this.dynamics,function(M){return M.stop()})},x.setValue=function(M){var c=this,v=!1;return st(M,function(L,N){v|=c.dynamics[N].setValue(L)}),v&&this.fn&&this.fn(this.current),v},x.update=function(M){var c=!1;return st(this.dynamics,function(v){c|=v.update(M)}),c&&this.fn&&this.fn(this.current),c},Ni(w,[{key:"current",get:function(){var M={};return st(this.dynamics,function(c,v){M[v]=c.current}),M}}]),w}(),qi=function(w){it(x,w);function x(M){var c,v=M.psv,L=M.container,N=M.direction,q=M.onUpdate;return c=w.call(this)||this,c.psv=v,c.container=L,c.prop={onUpdate:q,direction:N,mousedown:!1,mouseover:!1},c.container.addEventListener("click",we(c)),c.container.addEventListener("mousedown",we(c)),c.container.addEventListener("mouseenter",we(c)),c.container.addEventListener("mouseleave",we(c)),c.container.addEventListener("touchstart",we(c)),c.container.addEventListener("mousemove",we(c),!0),c.container.addEventListener("touchmove",we(c),!0),window.addEventListener("mouseup",we(c)),window.addEventListener("touchend",we(c)),c}var y=x.prototype;return y.destroy=function(){window.removeEventListener("mouseup",this),window.removeEventListener("touchend",this)},y.handleEvent=function(c){switch(c.type){case"click":c.stopPropagation();break;case"mousedown":this.__onMouseDown(c);break;case"mouseenter":this.__onMouseEnter(c);break;case"mouseleave":this.__onMouseLeave(c);break;case"touchstart":this.__onTouchStart(c);break;case"mousemove":this.__onMouseMove(c);break;case"touchmove":this.__onTouchMove(c);break;case"mouseup":this.__onMouseUp(c);break;case"touchend":this.__onTouchEnd(c);break}},y.__onMouseDown=function(c){this.prop.mousedown=!0,this.__update(c,!0)},y.__onMouseEnter=function(c){this.prop.mouseover=!0,this.__update(c,!0)},y.__onTouchStart=function(c){this.prop.mouseover=!0,this.prop.mousedown=!0,this.__update(c.changedTouches[0],!0)},y.__onMouseMove=function(c){(this.prop.mousedown||this.prop.mouseover)&&(c.stopPropagation(),this.__update(c,!0))},y.__onTouchMove=function(c){(this.prop.mousedown||this.prop.mouseover)&&(c.stopPropagation(),this.__update(c.changedTouches[0],!0))},y.__onMouseUp=function(c){this.prop.mousedown&&(this.prop.mousedown=!1,this.__update(c,!1))},y.__onMouseLeave=function(c){this.prop.mouseover&&(this.prop.mouseover=!1,this.__update(c,!0))},y.__onTouchEnd=function(c){this.prop.mousedown&&(this.prop.mouseover=!1,this.prop.mousedown=!1,this.__update(c.changedTouches[0],!1))},y.__update=function(c,v){var L=this.container.getBoundingClientRect(),N=c[this.vertical?"clientY":"clientX"],q=L[this.vertical?"bottom":"left"],j=L[this.vertical?"height":"width"],le=Math.abs((q-N)/j);this.prop.onUpdate({value:le,click:!v,mousedown:this.prop.mousedown,mouseover:this.prop.mouseover,cursor:c})},Ni(x,[{key:"vertical",get:function(){return this.prop.direction===x.VERTICAL}}]),x}(ii.EventEmitter);qi.VERTICAL=1,qi.HORIZONTAL=2;var fr=Object.freeze({__proto__:null,toggleClass:zi,addClasses:or,removeClasses:vs,hasParent:to,getClosest:ar,getPosition:Cn,isFullscreenEnabled:lr,requestFullscreen:no,exitFullscreen:io,getStyle:ki,normalizeWheel:so,bound:cr,loop:Sn,isPowerOfTwo:si,sum:xs,distance:ri,getShortestArc:_i,getAngle:Hi,greatArcDistance:jt,dasherize:Gi,throttle:It,isPlainObject:Vi,deepmerge:ro,clone:oi,isEmpty:ca,each:st,isNil:vi,firstNonNull:Un,deepEqual:ai,pluginInterop:_n,getAbortError:hr,isAbortError:oo,logWarn:cn,isExtendedPosition:ys,getXMPValue:Yt,parsePosition:Wi,cleanPosition:ao,positionIsOrdered:rn,parseSpeed:ur,parseAngle:Rn,createTexture:zn,applyEulerInverse:dr,Animation:Xi,Dynamic:qn,MultiDynamic:lo,Slider:qi}),hi=function(w){it(x,w);function x(M,c){var v;if(v=w.call(this,M)||this,v.config=Nt({resolution:64},c),!Re.MathUtils.isPowerOfTwo(v.config.resolution))throw new ze("EquirectangularAdapter resolution must be power of two");return v.SPHERE_SEGMENTS=v.config.resolution,v.SPHERE_HORIZONTAL_SEGMENTS=v.SPHERE_SEGMENTS/2,v}var y=x.prototype;return y.supportsTransition=function(){return!0},y.supportsPreload=function(){return!0},y.loadTexture=function(c,v,L){var N=this;return L===void 0&&(L=this.psv.config.useXmpData),typeof c!="string"?((Array.isArray(c)||typeof c=="object"&&c.left)&&cn("Cubemap support now requires an additional adapter, see https://photo-sphere-viewer.js.org/guide/adapters"),Promise.reject(new ze("Invalid panorama url, are you using the right adapter?"))):(L?this.__loadXMP(c,function(q){return N.psv.loader.setProgress(q)}).then(function(q){return N.psv.textureLoader.loadImage(c).then(function(j){return{img:j,xmpPanoData:q}})}):this.psv.textureLoader.loadImage(c,function(q){return N.psv.loader.setProgress(q)}).then(function(q){return{img:q,xmpPanoData:null}})).then(function(q){var j,le,We,Ne,lt,Ct,tt,Mi,ns,kn=q.img,Rt=q.xmpPanoData;typeof v=="function"&&(v=v(kn));var fi={fullWidth:Un((j=v)==null?void 0:j.fullWidth,Rt==null?void 0:Rt.fullWidth,kn.width),fullHeight:Un((le=v)==null?void 0:le.fullHeight,Rt==null?void 0:Rt.fullHeight,kn.height),croppedWidth:Un((We=v)==null?void 0:We.croppedWidth,Rt==null?void 0:Rt.croppedWidth,kn.width),croppedHeight:Un((Ne=v)==null?void 0:Ne.croppedHeight,Rt==null?void 0:Rt.croppedHeight,kn.height),croppedX:Un((lt=v)==null?void 0:lt.croppedX,Rt==null?void 0:Rt.croppedX,0),croppedY:Un((Ct=v)==null?void 0:Ct.croppedY,Rt==null?void 0:Rt.croppedY,0),poseHeading:Un((tt=v)==null?void 0:tt.poseHeading,Rt==null?void 0:Rt.poseHeading,0),posePitch:Un((Mi=v)==null?void 0:Mi.posePitch,Rt==null?void 0:Rt.posePitch,0),poseRoll:Un((ns=v)==null?void 0:ns.poseRoll,Rt==null?void 0:Rt.poseRoll,0)};(fi.croppedWidth!==kn.width||fi.croppedHeight!==kn.height)&&cn(`Invalid panoData, croppedWidth and/or croppedHeight is not coherent with loaded image.
    panoData: `+fi.croppedWidth+"x"+fi.croppedHeight+", image: "+kn.width+"x"+kn.height),(v||Rt)&&fi.fullWidth!==fi.fullHeight*2&&cn("Invalid panoData, fullWidth should be twice fullHeight");var Dl=N.__createEquirectangularTexture(kn,fi);return{panorama:c,texture:Dl,panoData:fi}})},y.__loadXMP=function(c,v){var L=this;return this.psv.textureLoader.loadFile(c,v).then(function(N){return L.__loadBlobAsString(N)}).then(function(N){var q=N.indexOf("<x:xmpmeta"),j=N.indexOf("</x:xmpmeta>"),le=N.substring(q,j);return q!==-1&&j!==-1&&le.includes("GPano:")?{fullWidth:Yt(le,"FullPanoWidthPixels"),fullHeight:Yt(le,"FullPanoHeightPixels"),croppedWidth:Yt(le,"CroppedAreaImageWidthPixels"),croppedHeight:Yt(le,"CroppedAreaImageHeightPixels"),croppedX:Yt(le,"CroppedAreaLeftPixels"),croppedY:Yt(le,"CroppedAreaTopPixels"),poseHeading:Yt(le,"PoseHeadingDegrees"),posePitch:Yt(le,"PosePitchDegrees"),poseRoll:Yt(le,"PoseRollDegrees")}:null})},y.__loadBlobAsString=function(c){return new Promise(function(v,L){var N=new FileReader;N.onload=function(){return v(N.result)},N.onerror=L,N.readAsText(c)})},y.__createEquirectangularTexture=function(c,v){if(v.fullWidth>He.maxTextureWidth||v.croppedWidth!==v.fullWidth||v.croppedHeight!==v.fullHeight){var L=He.getMaxCanvasWidth()/v.fullWidth,N=Nt({},v);L<1&&(N.fullWidth*=L,N.fullHeight*=L,N.croppedWidth*=L,N.croppedHeight*=L,N.croppedX*=L,N.croppedY*=L);var q=document.createElement("canvas");q.width=N.fullWidth,q.height=N.fullHeight;var j=q.getContext("2d");return j.drawImage(c,N.croppedX,N.croppedY,N.croppedWidth,N.croppedHeight),zn(q)}return zn(c)},y.createMesh=function(c){c===void 0&&(c=1);var v=new Re.SphereGeometry(St*c,this.SPHERE_SEGMENTS,this.SPHERE_HORIZONTAL_SEGMENTS,-Math.PI/2).scale(-1,1,1),L=_t.createOverlayMaterial();return new Re.Mesh(v,L)},y.setTexture=function(c,v){this.__setUniform(c,_t.OVERLAY_UNIFORMS.panorama,v.texture),this.setOverlay(c,null)},y.setOverlay=function(c,v,L){this.__setUniform(c,_t.OVERLAY_UNIFORMS.overlayOpacity,L),v?this.__setUniform(c,_t.OVERLAY_UNIFORMS.overlay,v.texture):this.__setUniform(c,_t.OVERLAY_UNIFORMS.overlay,new Re.Texture)},y.setTextureOpacity=function(c,v){this.__setUniform(c,_t.OVERLAY_UNIFORMS.globalOpacity,v),c.material.transparent=v<1},y.disposeTexture=function(c){var v;(v=c.texture)==null||v.dispose()},y.__setUniform=function(c,v,L){c.material.uniforms[v].value instanceof Re.Texture&&c.material.uniforms[v].value.dispose(),c.material.uniforms[v].value=L},x}(_t);hi.id="equirectangular",hi.supportsDownload=!0,hi.supportsOverlay=!0;var Tn=function(){function w(y,M){this.psv=y.psv||y,this.parent=y,this.parent.children.push(this),this.children=[],this.prop={visible:!0},this.container=document.createElement("div"),this.container.className=M,this.parent.container.appendChild(this.container)}var x=w.prototype;return x.destroy=function(){this.parent.container.removeChild(this.container);var M=this.parent.children.indexOf(this);M!==-1&&this.parent.children.splice(M,1),this.children.slice().forEach(function(c){return c.destroy()}),this.children.length=0,delete this.container,delete this.parent,delete this.psv,delete this.prop},x.refreshUi=function(){var M=this;this.children.every(function(c){return c.refreshUi(),M.psv.prop.uiRefresh===!0})},x.toggle=function(M){M===!1||M===void 0&&this.isVisible()?this.hide():(M===!0||M===void 0&&!this.isVisible())&&this.show()},x.hide=function(){this.container.style.display="none",this.prop.visible=!1},x.show=function(){this.container.style.display="",this.prop.visible=!0},x.isVisible=function(){return this.prop.visible},w}(),Zt=function(w){it(x,w);function x(M,c,v,L){var N;return c===void 0&&(c=""),v===void 0&&(v=!1),L===void 0&&(L=!0),N=w.call(this,M,"psv-button "+c)||this,N.prop=Nt({},N.prop,{id:N.constructor.id,collapsable:v,enabled:!0,supported:!0,collapsed:!1,active:!1,width:N.container.offsetWidth}),N.constructor.icon&&N.__setIcon(N.constructor.icon),N.prop.id&&N.psv.config.lang[N.prop.id]&&(N.container.title=N.psv.config.lang[N.prop.id]),L&&(N.container.tabIndex=0),N.container.addEventListener("click",function(q){N.prop.enabled&&N.onClick(),q.stopPropagation()}),N.container.addEventListener("keydown",function(q){q.key===Ut.Enter&&N.prop.enabled&&(N.onClick(),q.stopPropagation())}),N}var y=x.prototype;return y.checkSupported=function(){var c=this,v=this.isSupported();Vi(v)?(v.initial===!1&&(this.hide(),this.prop.supported=!1),v.promise.then(function(L){c.prop&&(c.prop.supported=L,c.toggle(L))})):(this.prop.supported=v,v||this.hide())},y.isSupported=function(){return!0},y.toggleActive=function(c){this.prop.active=c!==void 0?c:!this.prop.active,zi(this.container,"psv-button--active",this.prop.active),this.constructor.iconActive&&this.__setIcon(this.prop.active?this.constructor.iconActive:this.constructor.icon)},y.show=function(c){c===void 0&&(c=!0),this.isVisible()||(this.prop.visible=!0,this.prop.collapsed||(this.container.style.display=""),c&&this.psv.refreshUi("show button "+this.prop.id))},y.hide=function(c){c===void 0&&(c=!0),this.isVisible()&&(this.prop.visible=!1,this.container.style.display="none",c&&this.psv.refreshUi("hide button "+this.prop.id))},y.disable=function(){this.container.classList.add("psv-button--disabled"),this.prop.enabled=!1},y.enable=function(){this.container.classList.remove("psv-button--disabled"),this.prop.enabled=!0},y.collapse=function(){this.prop.collapsed=!0,this.container.style.display="none"},y.uncollapse=function(){this.prop.collapsed=!1,this.prop.visible&&(this.container.style.display="")},y.__setIcon=function(c,v){v===void 0&&(v=this.container),c?(v.innerHTML=c,v.querySelector("svg").classList.add("psv-button-svg")):v.innerHTML=""},y.onClick=function(){throw new ze('onClick not implemented for button "'+this.prop.id+'".')},x}(Tn);Zt.id=null,Zt.groupId=null,Zt.icon=null,Zt.iconActive=null;var co=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 41 41"><path fill="currentColor" d="M40.5 14.1c-.1-.1-1.2-.5-2.898-1-.102 0-.202-.1-.202-.2C34.5 6.5 28 2 20.5 2S6.6 6.5 3.7 12.9c0 .1-.1.1-.2.2-1.7.6-2.8 1-2.9 1l-.6.3v12.1l.6.2c.1 0 1.1.399 2.7.899.1 0 .2.101.2.199C6.3 34.4 12.9 39 20.5 39c7.602 0 14.102-4.6 16.9-11.1 0-.102.1-.102.199-.2 1.699-.601 2.699-1 2.801-1l.6-.3V14.3l-.5-.2zM6.701 11.5C9.7 7 14.8 4 20.5 4c5.8 0 10.9 3 13.8 7.5.2.3-.1.6-.399.5-3.799-1-8.799-2-13.6-2-4.7 0-9.5 1-13.2 2-.3.1-.5-.2-.4-.5zM25.1 20.3L18.7 24c-.3.2-.7 0-.7-.5v-7.4c0-.4.4-.6.7-.4l6.399 3.8c.301.1.301.6.001.8zm9.4 8.901A16.421 16.421 0 0 1 20.5 37c-5.9 0-11.1-3.1-14-7.898-.2-.302.1-.602.4-.5 3.9 1 8.9 2.1 13.6 2.1 5 0 9.9-1 13.602-2 .298-.1.5.198.398.499z"/><!--Created by Nick Bluth from the Noun Project--></svg>
`,ho=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 41 41"><path fill="currentColor" d="M40.5 14.1c-.1-.1-1.2-.5-2.899-1-.101 0-.2-.1-.2-.2C34.5 6.5 28 2 20.5 2S6.6 6.5 3.7 12.9c0 .1-.1.1-.2.2-1.7.6-2.8 1-2.9 1l-.6.3v12.1l.6.2c.1 0 1.1.4 2.7.9.1 0 .2.1.2.199C6.3 34.4 12.9 39 20.5 39c7.601 0 14.101-4.6 16.9-11.1 0-.101.1-.101.2-.2 1.699-.6 2.699-1 2.8-1l.6-.3V14.3l-.5-.2zM20.5 4c5.8 0 10.9 3 13.8 7.5.2.3-.1.6-.399.5-3.8-1-8.8-2-13.6-2-4.7 0-9.5 1-13.2 2-.3.1-.5-.2-.4-.5C9.7 7 14.8 4 20.5 4zm0 33c-5.9 0-11.1-3.1-14-7.899-.2-.301.1-.601.4-.5 3.9 1 8.9 2.1 13.6 2.1 5 0 9.9-1 13.601-2 .3-.1.5.2.399.5A16.422 16.422 0 0 1 20.5 37zm18.601-12.1c0 .1-.101.3-.2.3-2.5.9-10.4 3.6-18.4 3.6-7.1 0-15.6-2.699-18.3-3.6C2.1 25.2 2 25 2 24.9V16c0-.1.1-.3.2-.3 2.6-.9 10.6-3.6 18.2-3.6 7.5 0 15.899 2.7 18.5 3.6.1 0 .2.2.2.3v8.9z"/><path fill="currentColor" d="M18.7 24l6.4-3.7c.3-.2.3-.7 0-.8l-6.4-3.8c-.3-.2-.7 0-.7.4v7.4c0 .5.4.7.7.5z"/><!--Created by Nick Bluth from the Noun Project--></svg>
`,Yi=function(w){it(x,w);function x(M){var c;return c=w.call(this,M,"psv-button--hover-scale psv-autorotate-button",!0)||this,c.psv.on(pe.AUTOROTATE,we(c)),c}var y=x.prototype;return y.destroy=function(){this.psv.off(pe.AUTOROTATE,this),w.prototype.destroy.call(this)},y.handleEvent=function(c){switch(c.type){case pe.AUTOROTATE:this.toggleActive(c.args[0]);break}},y.onClick=function(){this.psv.isAutorotateEnabled()&&(this.psv.config.autorotateIdle=!1,this.psv.resetIdleTimer()),this.psv.toggleAutorotate()},x}(Zt);Yi.id="autorotate",Yi.icon=ho,Yi.iconActive=co;var uo=function(w){it(x,w);function x(M,c){var v;return v=w.call(this,M,"psv-custom-button",c.collapsable!==!1,c.tabbable!==!1)||this,v.config=c,v.config.id?v.prop.id=v.config.id:v.prop.id="psvButton-"+Math.random().toString(36).substr(2,9),v.config.className&&or(v.container,v.config.className),v.config.title&&(v.container.title=v.config.title),v.config.content&&(v.container.innerHTML=v.config.content),v.prop.width=v.container.offsetWidth,v.config.enabled===!1&&v.disable(),v.config.visible===!1&&v.hide(),v}var y=x.prototype;return y.destroy=function(){delete this.config,w.prototype.destroy.call(this)},y.onClick=function(){this.config.onClick&&this.config.onClick.call(this.psv,this.psv)},x}(Zt),ua=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64"><path fill="currentColor" d="M28.3 26.1c-1 2.6-1.9 4.8-2.6 7-2.5 7.4-5 14.7-7.2 22-1.3 4.4.5 7.2 4.3 7.8 1.3.2 2.8.2 4.2-.1 8.2-2 11.9-8.6 15.7-15.2l-2.2 2a18.8 18.8 0 0 1-7.4 5.2 2 2 0 0 1-1.6-.2c-.2-.1 0-1 0-1.4l.8-1.8L41.9 28c.5-1.4.9-3 .7-4.4-.2-2.6-3-4.4-6.3-4.4-8.8.2-15 4.5-19.5 11.8-.2.3-.2.6-.3 1.3 3.7-2.8 6.8-6.1 11.8-6.2z"/><circle fill="currentColor" cx="39.3" cy="9.2" r="8.2"/><!--Created by Arafat Uddin from the Noun Project--></svg>
`,Zi=1,Ji=2,ui=function(w){it(x,w);function x(M){var c;return c=w.call(this,M,"psv-button--hover-scale psv-description-button")||this,c.prop=Nt({},c.prop,{mode:null}),c.psv.on(pe.HIDE_NOTIFICATION,we(c)),c.psv.on(pe.SHOW_NOTIFICATION,we(c)),c.psv.on(pe.CLOSE_PANEL,we(c)),c.psv.on(pe.OPEN_PANEL,we(c)),c}var y=x.prototype;return y.destroy=function(){this.psv.off(pe.HIDE_NOTIFICATION,this),this.psv.off(pe.SHOW_NOTIFICATION,this),this.psv.off(pe.CLOSE_PANEL,this),this.psv.off(pe.OPEN_PANEL,this),w.prototype.destroy.call(this)},y.handleEvent=function(c){if(this.prop.mode){var v=!1;switch(c.type){case pe.HIDE_NOTIFICATION:v=this.prop.mode===Zi;break;case pe.SHOW_NOTIFICATION:v=this.prop.mode===Zi&&c.args[0]!==Vt.DESCRIPTION;break;case pe.CLOSE_PANEL:v=this.prop.mode===Ji;break;case pe.OPEN_PANEL:v=this.prop.mode===Ji&&c.args[0]!==Vt.DESCRIPTION;break}v&&(this.toggleActive(!1),this.prop.mode=null)}},y.hide=function(c){w.prototype.hide.call(this,c),this.prop.mode&&this.__close()},y.refreshUi=function(c){if(c===void 0&&(c=!1),c){var v=this.psv.navbar.getButton("caption",!1),L=v&&!v.isVisible(),N=!!this.psv.config.description;L||N?this.show(!1):this.hide(!1)}},y.onClick=function(){this.prop.mode?this.__close():this.__open()},y.__close=function(){switch(this.prop.mode){case Zi:this.psv.notification.hide(Vt.DESCRIPTION);break;case Ji:this.psv.panel.hide(Vt.DESCRIPTION);break}},y.__open=function(){this.toggleActive(!0),this.psv.config.description?(this.prop.mode=Ji,this.psv.panel.show({id:Vt.DESCRIPTION,content:(this.psv.config.caption?"<p>"+this.psv.config.caption+"</p>":"")+this.psv.config.description})):(this.prop.mode=Zi,this.psv.notification.show({id:Vt.DESCRIPTION,content:this.psv.config.caption}))},x}(Zt);ui.id="description",ui.icon=ua;var fo=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M83.3 35.6h-17V3H32.2v32.6H16.6l33.6 32.7 33-32.7z"/><path fill="currentColor" d="M83.3 64.2v16.3H16.6V64.2H-.1v32.6H100V64.2H83.3z"/><!--Created by Michael Zenaty from the Noun Project--></svg>
`,ws=function(w){it(x,w);function x(M){return w.call(this,M,"psv-button--hover-scale psv-download-button",!0)||this}var y=x.prototype;return y.onClick=function(){var c=this,v=document.createElement("a");v.href=this.psv.config.downloadUrl||this.psv.config.panorama,v.download=v.href.split("/").pop(),this.psv.container.appendChild(v),v.click(),setTimeout(function(){c.psv.container.removeChild(v)},100)},y.refreshUi=function(){var c=this.psv.adapter.constructor.supportsDownload||this.psv.config.downloadUrl;c&&!this.prop.visible?this.show():!c&&this.prop.visible&&this.hide()},x}(Zt);ws.id="download",ws.icon=fo;var po=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M100 40H87.1V18.8h-21V6H100zM100 93.2H66V80.3h21.1v-21H100zM34 93.2H0v-34h12.9v21.1h21zM12.9 40H0V6h34v12.9H12.8z"/><!--Created by Garrett Knoll from the Noun Project--></svg>
`,mo=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M66 7h13v21h21v13H66zM66 60.3h34v12.9H79v21H66zM0 60.3h34v34H21V73.1H0zM21 7h13v34H0V28h21z"/><!--Created by Garrett Knoll from the Noun Project--></svg>
`,$i=function(w){it(x,w);function x(M){var c;return c=w.call(this,M,"psv-button--hover-scale psv-fullscreen-button")||this,c.psv.on(pe.FULLSCREEN_UPDATED,we(c)),c}var y=x.prototype;return y.destroy=function(){this.psv.off(pe.FULLSCREEN_UPDATED,this),w.prototype.destroy.call(this)},y.handleEvent=function(c){switch(c.type){case pe.FULLSCREEN_UPDATED:this.toggleActive(c.args[0]);break}},y.onClick=function(){this.psv.toggleFullscreen()},x}(Zt);$i.id="fullscreen",$i.icon=po,$i.iconActive=mo;var pr=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="10 10 80 80"><g fill="currentColor"><circle r="10" cx="20" cy="20"/><circle r="10" cx="50" cy="20"/><circle r="10" cx="80" cy="20"/><circle r="10" cx="20" cy="50"/><circle r="10" cx="50" cy="50"/><circle r="10" cx="80" cy="50"/><circle r="10" cx="20" cy="80"/><circle r="10" cx="50" cy="80"/><circle r="10" cx="80" cy="80"/></g><!-- Created by Richard Kunák from the Noun Project--></svg>
`,Yn=function(w){it(x,w);function x(M){var c;return c=w.call(this,M,"psv-button--hover-scale psv-menu-button")||this,c.psv.on(pe.OPEN_PANEL,we(c)),c.psv.on(pe.CLOSE_PANEL,we(c)),w.prototype.hide.call(we(c)),c}var y=x.prototype;return y.destroy=function(){this.psv.off(pe.OPEN_PANEL,this),this.psv.off(pe.CLOSE_PANEL,this),w.prototype.destroy.call(this)},y.handleEvent=function(c){switch(c.type){case pe.OPEN_PANEL:this.toggleActive(c.args[0]===Vt.MENU);break;case pe.CLOSE_PANEL:this.toggleActive(!1);break}},y.hide=function(c){w.prototype.hide.call(this,c),this.__hideMenu()},y.show=function(c){w.prototype.show.call(this,c),this.prop.active&&this.__showMenu()},y.onClick=function(){this.prop.active?this.__hideMenu():this.__showMenu()},y.__showMenu=function(){var c=this;this.psv.panel.show({id:Vt.MENU,content:x.MENU_TEMPLATE(this.parent.collapsed,this.psv,Gi(x.BUTTON_DATA)),noMargin:!0,clickHandler:function(L){var N=L.target?ar(L.target,"li"):void 0,q=N?N.dataset[x.BUTTON_DATA]:void 0;q&&(c.parent.getButton(q).onClick(),c.__hideMenu())}})},y.__hideMenu=function(){this.psv.panel.hide(Vt.MENU)},x}(Zt);Yn.id="menu",Yn.icon=pr,Yn.BUTTON_DATA="psvButton",Yn.MENU_TEMPLATE=function(w,x,y){return`
<div class="psv-panel-menu psv-panel-menu--stripped">
  <h1 class="psv-panel-menu-title">`+pr+" "+x.config.lang.menu+`</h1>
  <ul class="psv-panel-menu-list">
    `+w.map(function(M){return`
    <li data-`+y+'="'+M.prop.id+`" class="psv-panel-menu-item" tabindex="0">
      <span class="psv-panel-menu-item-icon">`+M.container.innerHTML+`</span>
      <span class="psv-panel-menu-item-label">`+M.container.title+`</span>
    </li>
    `}).join("")+`
  </ul>
</div>
`};var go=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="40 40 432 432"><g transform="rotate(0, 256, 256)"><path fill="currentColor" d="M425.23 210.55H227.39a5 5 0 01-3.53-8.53l56.56-56.57a45.5 45.5 0 000-64.28 45.15 45.15 0 00-32.13-13.3 45.15 45.15 0 00-32.14 13.3L41.32 256l174.83 174.83a45.15 45.15 0 0032.14 13.3 45.15 45.15 0 0032.13-13.3 45.5 45.5 0 000-64.28l-56.57-56.57a5 5 0 013.54-8.53h197.84c25.06 0 45.45-20.39 45.45-45.45s-20.4-45.45-45.45-45.45z"/></g><!-- Created by Flatart from the Noun Project --></svg>
`,Ss=function(){function w(y){y===void 0&&(y=200),this.delay=y,this.time=0,this.timeout=null}var x=w.prototype;return x.down=function(){this.timeout&&(clearTimeout(this.timeout),this.timeout=null),this.time=new Date().getTime()},x.up=function(M){var c=this;if(this.time){var v=new Date().getTime()-this.time;v<this.delay?this.timeout=setTimeout(function(){M(),c.timeout=null,c.time=0},this.delay):(M(),this.time=0)}},w}();function Ki(w){var x=0;switch(w){case"up":x=90;break;case"right":x=180;break;case"down":x=-90;break;default:x=0;break}return go.replace("rotate(0","rotate("+x)}var xi=function(w){it(x,w);function x(M,c){var v;return v=w.call(this,M,"psv-button--hover-scale psv-move-button")||this,v.container.title=v.psv.config.lang.move,v.prop=Nt({},v.prop,{value:c,handler:new Ss}),v.container.addEventListener("mousedown",we(v)),v.container.addEventListener("keydown",we(v)),v.container.addEventListener("keyup",we(v)),v.psv.container.addEventListener("mouseup",we(v)),v.psv.container.addEventListener("touchend",we(v)),v}var y=x.prototype;return y.destroy=function(){this.__onMouseUp(),this.psv.container.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchend",this),w.prototype.destroy.call(this)},y.handleEvent=function(c){switch(c.type){case"mousedown":this.__onMouseDown();break;case"mouseup":this.__onMouseUp();break;case"touchend":this.__onMouseUp();break;case"keydown":c.key===Ut.Enter&&this.__onMouseDown();break;case"keyup":c.key===Ut.Enter&&this.__onMouseUp();break}},y.isSupported=function(){return{initial:!He.isTouchEnabled.initial,promise:He.isTouchEnabled.promise.then(function(c){return!c})}},y.onClick=function(){},y.__onMouseDown=function(){this.prop.enabled&&(this.psv.__stopAll(),this.psv.dynamics.position.roll(this.prop.value),this.prop.handler.down())},y.__onMouseUp=function(){var c=this;this.prop.enabled&&this.prop.handler.up(function(){c.psv.dynamics.position.stop(),c.psv.resetIdleTimer()})},x}(Zt);xi.groupId="move";var Es=function(w){it(x,w);function x(y){return w.call(this,y,{latitude:!0})||this}return x}(xi);Es.id="moveDown",Es.icon=Ki("down");var Ts=function(w){it(x,w);function x(y){return w.call(this,y,{longitude:!0})||this}return x}(xi);Ts.id="moveLeft",Ts.icon=Ki("left");var As=function(w){it(x,w);function x(y){return w.call(this,y,{longitude:!1})||this}return x}(xi);As.id="moveRight",As.icon=Ki("right");var mr=function(w){it(x,w);function x(y){return w.call(this,y,{latitude:!1})||this}return x}(xi);mr.id="moveUp",mr.icon=Ki("up");var gr=function(w){it(x,w);function x(M,c){var v;return v=w.call(this,M,"psv-button--hover-scale psv-zoom-button")||this,v.prop=Nt({},v.prop,{value:c,handler:new Ss}),v.container.addEventListener("mousedown",we(v)),v.container.addEventListener("keydown",we(v)),v.container.addEventListener("keyup",we(v)),v.psv.container.addEventListener("mouseup",we(v)),v.psv.container.addEventListener("touchend",we(v)),v}var y=x.prototype;return y.destroy=function(){this.__onMouseUp(),this.psv.container.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchend",this),w.prototype.destroy.call(this)},y.handleEvent=function(c){switch(c.type){case"mousedown":this.__onMouseDown();break;case"mouseup":this.__onMouseUp();break;case"touchend":this.__onMouseUp();break;case"keydown":c.key===Ut.Enter&&this.__onMouseDown();break;case"keyup":c.key===Ut.Enter&&this.__onMouseUp();break}},y.isSupported=function(){return{initial:!He.isTouchEnabled.initial,promise:He.isTouchEnabled.promise.then(function(c){return!c})}},y.onClick=function(){},y.__onMouseDown=function(){this.prop.enabled&&(this.psv.dynamics.zoom.roll(this.prop.value),this.prop.handler.down())},y.__onMouseUp=function(){var c=this;this.prop.enabled&&this.prop.handler.up(function(){return c.psv.dynamics.zoom.stop()})},x}(Zt);gr.groupId="zoom";var da=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill="currentColor" d="M14.043 12.22a7.738 7.738 0 1 0-1.823 1.822l4.985 4.985c.503.504 1.32.504 1.822 0a1.285 1.285 0 0 0 0-1.822l-4.984-4.985zm-6.305 1.043a5.527 5.527 0 1 1 0-11.053 5.527 5.527 0 0 1 0 11.053z"/><path fill="currentColor" d="M8.728 4.009H6.744v2.737H4.006V8.73h2.738v2.736h1.984V8.73h2.737V6.746H8.728z"/><!--Created by Ryan Canning from the Noun Project--></svg>
`,yi=function(w){it(x,w);function x(y){return w.call(this,y,!1)||this}return x}(gr);yi.id="zoomIn",yi.icon=da;var Cs=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill="currentColor" d="M14.043 12.22a7.738 7.738 0 1 0-1.823 1.822l4.985 4.985c.503.504 1.32.504 1.822 0a1.285 1.285 0 0 0 0-1.822l-4.984-4.985zm-6.305 1.043a5.527 5.527 0 1 1 0-11.053 5.527 5.527 0 0 1 0 11.053z"/><path fill="currentColor" d="M4.006 6.746h7.459V8.73H4.006z"/><!--Created by Ryan Canning from the Noun Project--></svg>
`,ji=function(w){it(x,w);function x(y){return w.call(this,y,!0)||this}return x}(gr);ji.id="zoomOut",ji.icon=Cs;var Zn=function(w){it(x,w);function x(M){var c;return c=w.call(this,M,"psv-zoom-range",!1,!1)||this,c.prop=Nt({},c.prop,{mediaMinWidth:0}),c.zoomRange=document.createElement("div"),c.zoomRange.className="psv-zoom-range-line",c.container.appendChild(c.zoomRange),c.zoomValue=document.createElement("div"),c.zoomValue.className="psv-zoom-range-handle",c.zoomRange.appendChild(c.zoomValue),c.slider=new qi({container:c.container,direction:qi.HORIZONTAL,onUpdate:function(L){return c.__onSliderUpdate(L)}}),c.prop.mediaMinWidth=parseInt(ki(c.container,"maxWidth"),10),c.psv.on(pe.ZOOM_UPDATED,we(c)),c.psv.prop.ready?c.__moveZoomValue(c.psv.getZoomLevel()):c.psv.once(pe.READY,we(c)),c.refreshUi(),c}var y=x.prototype;return y.destroy=function(){this.slider.destroy(),delete this.zoomRange,delete this.zoomValue,this.psv.off(pe.ZOOM_UPDATED,this),this.psv.off(pe.READY,this),w.prototype.destroy.call(this)},y.handleEvent=function(c){switch(c.type){case pe.ZOOM_UPDATED:this.__moveZoomValue(c.args[0]);break;case pe.READY:this.__moveZoomValue(this.psv.getZoomLevel());break}},y.isSupported=function(){return{initial:!He.isTouchEnabled.initial,promise:He.isTouchEnabled.promise.then(function(c){return!c})}},y.refreshUi=function(){this.prop.supported&&(this.psv.prop.size.width<=this.prop.mediaMinWidth&&this.prop.visible?this.hide():this.psv.prop.size.width>this.prop.mediaMinWidth&&!this.prop.visible&&this.show())},y.onClick=function(){},y.__moveZoomValue=function(c){this.zoomValue.style.left=c/100*this.zoomRange.offsetWidth-this.zoomValue.offsetWidth/2+"px"},y.__onSliderUpdate=function(c){c.mousedown&&this.psv.zoom(c.value*100)},x}(Zt);Zn.id="zoomRange",Zn.groupId="zoom";var Ln=function(w){it(x,w);function x(M){var c;return c=w.call(this)||this,c.psv=M,c}var y=x.prototype;return y.init=function(){},y.destroy=function(){delete this.psv},x}(ii.EventEmitter);Ln.id=null;var on,hn={panorama:null,overlay:null,overlayOpacity:1,container:null,adapter:null,plugins:[],caption:null,description:null,downloadUrl:null,loadingImg:null,loadingTxt:"Loading...",size:null,fisheye:!1,minFov:30,maxFov:90,defaultZoomLvl:50,defaultLong:0,defaultLat:0,sphereCorrection:null,moveSpeed:1,zoomSpeed:1,autorotateDelay:null,autorotateIdle:!1,autorotateSpeed:"2rpm",autorotateLat:null,autorotateZoomLvl:null,moveInertia:!0,mousewheel:!0,mousemove:!0,mousewheelCtrlKey:!1,touchmoveTwoFingers:!1,useXmpData:!0,panoData:null,requestHeaders:null,canvasBackground:"#000",withCredentials:!1,navbar:["autorotate","zoom","move","download","description","caption","fullscreen"],lang:{autorotate:"Automatic rotation",zoom:"Zoom",zoomOut:"Zoom out",zoomIn:"Zoom in",move:"Move",download:"Download",fullscreen:"Fullscreen",menu:"Menu",twoFingers:"Use two fingers to navigate",ctrlZoom:"Use ctrl + scroll to zoom the image",loadError:"The panorama can't be loaded"},keyboard:(on={},on[Ut.ArrowUp]=Mt.ROTATE_LAT_UP,on[Ut.ArrowDown]=Mt.ROTATE_LAT_DOWN,on[Ut.ArrowRight]=Mt.ROTATE_LONG_RIGHT,on[Ut.ArrowLeft]=Mt.ROTATE_LONG_LEFT,on[Ut.PageUp]=Mt.ZOOM_IN,on[Ut.PageDown]=Mt.ZOOM_OUT,on[Ut.Plus]=Mt.ZOOM_IN,on[Ut.Minus]=Mt.ZOOM_OUT,on[Ut.Space]=Mt.TOGGLE_AUTOROTATE,on)},_r={panorama:"Use setPanorama method to change the panorama",panoData:"Use setPanorama method to change the panorama",container:"Cannot change viewer container",adapter:"Cannot change adapter",plugins:"Cannot change plugins"},vr={captureCursor:"captureCursor is deprecated"},xr={container:function(x){if(!x)throw new ze("No value given for container.");return x},adapter:function(x){if(x?Array.isArray(x)?x=[_n(x[0],_t),x[1]]:x=[_n(x,_t)]:x=[hi],!x[0])throw new ze("Un undefined value with given for adapter.");return x},overlayOpacity:function(x){return Re.MathUtils.clamp(x,0,1)},defaultLong:function(x){return Rn(x)},defaultLat:function(x){return Rn(x,!0)},defaultZoomLvl:function(x){return Re.MathUtils.clamp(x,0,100)},minFov:function(x,y){return y.maxFov<x&&(cn("maxFov cannot be lower than minFov"),x=y.maxFov),Re.MathUtils.clamp(x,1,179)},maxFov:function(x,y){return x<y.minFov&&(x=y.minFov),Re.MathUtils.clamp(x,1,179)},lang:function(x){return Array.isArray(x.twoFingers)&&(cn("lang.twoFingers must not be an array"),x.twoFingers=x.twoFingers[0]),Nt({},hn.lang,x)},keyboard:function(x){return x===!0?oi(hn.keyboard):x},autorotateLat:function(x,y){return Rn(x===null?y.defaultLat:x,!0)},autorotateZoomLvl:function(x){return vi(x)?null:Re.MathUtils.clamp(x,0,100)},autorotateSpeed:function(x){return ur(x)},autorotateIdle:function(x,y){return x&&vi(y.autorotateDelay)?(cn("autorotateIdle requires a non null autorotateDelay"),!1):x},fisheye:function(x){return x===!0?1:x===!1?0:x},plugins:function(x){return x.map(function(y){if(Array.isArray(y)?y=[_n(y[0],Ln),y[1]]:y=[_n(y,Ln)],!y[0])throw new ze("Un undefined value was given for plugins.");return y})}};function Ml(w){var x=oi(hn);ro(x,w);var y={};return st(x,function(M,c){if(vr[c]){cn(vr[c]);return}if(!Object.prototype.hasOwnProperty.call(hn,c))throw new ze("Unknown option "+c);xr[c]?y[c]=xr[c](M,x):y[c]=M}),y}var un=function(w){it(x,w);function x(M,c){var v;return v=w.call(this,M,"psv-caption")||this,v.prop=Nt({},v.prop,{id:v.constructor.id,collapsable:!1,width:0,contentWidth:0}),v.content=document.createElement("div"),v.content.className="psv-caption-content",v.container.appendChild(v.content),v.setCaption(c),v}var y=x.prototype;return y.destroy=function(){delete this.content,w.prototype.destroy.call(this)},y.setCaption=function(c){this.show(),this.content.innerHTML=c,this.prop.contentWidth=c?this.content.offsetWidth:0,this.refreshUi()},y.refreshUi=function(){this.toggle(this.container.offsetWidth>=this.prop.contentWidth),this.__refreshButton()},y.hide=function(){this.content.style.display="none",this.prop.visible=!1},y.show=function(){this.content.style.display="",this.prop.visible=!0},y.__refreshButton=function(){var c;(c=this.psv.navbar.getButton(ui.id,!1))==null||c.refreshUi(!0)},x}(Tn);un.id="caption";var bt={},Qi={};function _o(w,x){if(!w.id)throw new ze("Button ID is required");if(bt[w.id]=w,w.groupId&&(Qi[w.groupId]=Qi[w.groupId]||[],Qi[w.groupId].push(w)),typeof x=="string")switch(x){case"start":hn.navbar.unshift(w.id);break;case"end":hn.navbar.push(w.id);break;default:var y=x.split(":"),M=y[0],c=y[1];hn.navbar.splice(hn.navbar.indexOf(M)+(c==="right"?1:0),0,w.id)}}[Yi,ji,Zn,yi,ui,ws,$i,Ts,As,mr,Es].forEach(_o);var di=function(w){it(x,w);function x(M){var c;return c=w.call(this,M,"psv-navbar psv--capture-event")||this,c.children=[],c.collapsed=[],c}var y=x.prototype;return y.setButtons=function(c){var v=this;this.children.slice().forEach(function(N){return N.destroy()}),this.children.length=0;var L=this.__cleanButtons(c);L.indexOf(un.id)!==-1&&L.indexOf(ui.id)===-1&&L.splice(L.indexOf(un.id),0,ui.id),L.forEach(function(N){if(typeof N=="object")new uo(v,N);else if(bt[N])new bt[N](v);else if(Qi[N])Qi[N].forEach(function(q){return new q(v)});else if(N===un.id)new un(v,v.psv.config.caption);else throw new ze("Unknown button "+N)}),new Yn(this),this.children.forEach(function(N){typeof N.checkSupported=="function"&&N.checkSupported()})},y.setCaption=function(c){var v=this.getButton(un.id,!1);v==null||v.setCaption(c)},y.getButton=function(c,v){v===void 0&&(v=!0);var L=null;return this.children.some(function(N){return N.prop.id===c?(L=N,!0):!1}),!L&&v&&cn('button "'+c+'" not found in the navbar'),L},y.show=function(){this.container.classList.add("psv-navbar--open"),this.prop.visible=!0},y.hide=function(){this.container.classList.remove("psv-navbar--open"),this.prop.visible=!1},y.refreshUi=function(){if(w.prototype.refreshUi.call(this),this.psv.prop.uiRefresh===!0){var c=this.container.offsetWidth,v=0,L=[],N=[];if(this.children.forEach(function(j){j.prop.visible&&(v+=j.prop.width,L.push(j),j.prop.collapsable&&N.push(j))}),!L.length)return;c<v&&N.length>0?(N.forEach(function(j){return j.collapse()}),this.collapsed=N,this.getButton(Yn.id).show(!1)):c>=v&&this.collapsed.length>0&&(this.collapsed.forEach(function(j){return j.uncollapse()}),this.collapsed=[],this.getButton(Yn.id).hide(!1));var q=this.getButton(un.id,!1);q&&q.refreshUi()}},y.__cleanButtons=function(c){return c===!0?oi(hn.navbar):typeof c=="string"?c.split(/[ ,]/):c||[]},x}(Tn),fa=function(w){it(x,w);function x(M){var c;return c=w.call(this,M,"psv-loader-container")||this,c.loader=document.createElement("div"),c.loader.className="psv-loader",c.container.appendChild(c.loader),c.canvas=document.createElement("canvas"),c.canvas.className="psv-loader-canvas",c.canvas.width=c.loader.clientWidth*He.pixelRatio,c.canvas.height=c.loader.clientWidth*He.pixelRatio,c.loader.appendChild(c.canvas),c.prop=Nt({},c.prop,{tickness:(c.loader.offsetWidth-c.loader.clientWidth)/2*He.pixelRatio,current:null}),c.refreshUi(),c.hide(),c}var y=x.prototype;return y.destroy=function(){delete this.loader,delete this.canvas,w.prototype.destroy.call(this)},y.refreshUi=function(){if(this.prop.current!==(this.psv.config.loadingImg||this.psv.config.loadingTxt)){this.prop.current&&this.loader.removeChild(this.loader.lastChild);var c;if(this.psv.config.loadingImg?(c=document.createElement("img"),c.className="psv-loader-image",c.src=this.psv.config.loadingImg):this.psv.config.loadingTxt&&(c=document.createElement("div"),c.className="psv-loader-text",c.innerHTML=this.psv.config.loadingTxt),c){var v=Math.round(Math.sqrt(2*Math.pow((this.canvas.width/2-this.prop.tickness/2)/He.pixelRatio,2)));c.style.maxWidth=v+"px",c.style.maxHeight=v+"px",this.loader.appendChild(c)}this.prop.current=this.psv.config.loadingImg||this.psv.config.loadingTxt}},y.setProgress=function(c){var v=this.canvas.getContext("2d");v.clearRect(0,0,this.canvas.width,this.canvas.height),v.lineWidth=this.prop.tickness,v.strokeStyle=ki(this.loader,"color"),v.beginPath(),v.arc(this.canvas.width/2,this.canvas.height/2,this.canvas.width/2-this.prop.tickness/2,-Math.PI/2,Re.MathUtils.clamp(c,0,100)/100*2*Math.PI-Math.PI/2),v.stroke(),this.psv.trigger(pe.LOAD_PROGRESS,Math.round(c))},x}(Tn),bl=function(w){it(x,w);function x(M){var c;return c=w.call(this,M,"psv-notification")||this,c.prop=Nt({},c.prop,{visible:!1,contentId:void 0,timeout:null}),c.content=document.createElement("div"),c.content.className="psv-notification-content",c.container.appendChild(c.content),c.content.addEventListener("click",function(){return c.hide()}),c}var y=x.prototype;return y.destroy=function(){delete this.content,w.prototype.destroy.call(this)},y.isVisible=function(c){return this.prop.visible&&(!c||!this.prop.contentId||this.prop.contentId===c)},y.toggle=function(){throw new ze("Notification cannot be toggled")},y.show=function(c){var v=this;this.prop.timeout&&(clearTimeout(this.prop.timeout),this.prop.timeout=null),typeof c=="string"&&(c={content:c}),this.prop.contentId=c.id,this.content.innerHTML=c.content,this.container.classList.add("psv-notification--visible"),this.prop.visible=!0,this.psv.trigger(pe.SHOW_NOTIFICATION,c.id),c.timeout&&(this.prop.timeout=setTimeout(function(){return v.hide(c.id)},c.timeout))},y.hide=function(c){if(this.isVisible(c)){var v=this.prop.contentId;this.container.classList.remove("psv-notification--visible"),this.prop.visible=!1,this.prop.contentId=void 0,this.psv.trigger(pe.HIDE_NOTIFICATION,v)}},x}(Tn),Pn=function(w){it(x,w);function x(M){var c;return c=w.call(this,M,"psv-overlay")||this,c.prop=Nt({},c.prop,{contentId:void 0,dissmisable:!0}),c.image=document.createElement("div"),c.image.className="psv-overlay-image",c.container.appendChild(c.image),c.text=document.createElement("div"),c.text.className="psv-overlay-text",c.container.appendChild(c.text),c.subtext=document.createElement("div"),c.subtext.className="psv-overlay-subtext",c.container.appendChild(c.subtext),c.psv.on(pe.CLICK,we(c)),c.psv.on(pe.KEY_PRESS,we(c)),w.prototype.hide.call(we(c)),c}var y=x.prototype;return y.destroy=function(){this.psv.off(pe.CLICK,this),this.psv.off(pe.KEY_PRESS,this),delete this.image,delete this.text,delete this.subtext,w.prototype.destroy.call(this)},y.handleEvent=function(c){switch(c.type){case pe.CLICK:this.isVisible()&&this.prop.dissmisable&&(this.hide(),c.stopPropagation());break;case pe.KEY_PRESS:this.isVisible()&&this.prop.dissmisable&&c.args[0]===Ut.Escape&&(this.hide(),c.preventDefault());break}},y.isVisible=function(c){return this.prop.visible&&(!c||!this.prop.contentId||this.prop.contentId===c)},y.toggle=function(){throw new ze("Overlay cannot be toggled")},y.show=function(c){typeof c=="string"&&(c={text:c}),this.prop.contentId=c.id,this.prop.dissmisable=c.dissmisable!==!1,this.image.innerHTML=c.image||"",this.text.innerHTML=c.text||"",this.subtext.innerHTML=c.subtext||"",w.prototype.show.call(this),this.psv.trigger(pe.SHOW_OVERLAY,c.id)},y.hide=function(c){if(this.isVisible(c)){var v=this.prop.contentId;w.prototype.hide.call(this),this.prop.contentId=void 0,this.psv.trigger(pe.HIDE_OVERLAY,v)}},x}(Tn),es=200,wl=function(w){it(x,w);function x(M){var c;c=w.call(this,M,"psv-panel psv--capture-event")||this,c.prop=Nt({},c.prop,{visible:!1,contentId:void 0,mouseX:0,mouseY:0,mousedown:!1,clickHandler:null,keyHandler:null,width:{}});var v=document.createElement("div");v.className="psv-panel-resizer",c.container.appendChild(v);var L=document.createElement("div");return L.className="psv-panel-close-button",c.container.appendChild(L),c.content=document.createElement("div"),c.content.className="psv-panel-content",c.container.appendChild(c.content),c.container.addEventListener(He.mouseWheelEvent,function(N){return N.stopPropagation()}),L.addEventListener("click",function(){return c.hide()}),v.addEventListener("mousedown",we(c)),v.addEventListener("touchstart",we(c)),c.psv.container.addEventListener("mouseup",we(c)),c.psv.container.addEventListener("touchend",we(c)),c.psv.container.addEventListener("mousemove",we(c)),c.psv.container.addEventListener("touchmove",we(c)),c.psv.on(pe.KEY_PRESS,we(c)),c}var y=x.prototype;return y.destroy=function(){this.psv.off(pe.KEY_PRESS,this),this.psv.container.removeEventListener("mousemove",this),this.psv.container.removeEventListener("touchmove",this),this.psv.container.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchend",this),delete this.prop,delete this.content,w.prototype.destroy.call(this)},y.handleEvent=function(c){switch(c.type){case"mousedown":this.__onMouseDown(c);break;case"touchstart":this.__onTouchStart(c);break;case"mousemove":this.__onMouseMove(c);break;case"touchmove":this.__onTouchMove(c);break;case"mouseup":this.__onMouseUp(c);break;case"touchend":this.__onMouseUp(c);break;case pe.KEY_PRESS:this.isVisible()&&c.args[0]===Ut.Escape&&(this.hide(),c.preventDefault());break}},y.isVisible=function(c){return this.prop.visible&&(!c||!this.prop.contentId||this.prop.contentId===c)},y.toggle=function(){throw new ze("Panel cannot be toggled")},y.show=function(c){var v=this,L=this.isVisible(c.id);typeof c=="string"&&(c={content:c}),this.prop.contentId=c.id,this.prop.visible=!0,this.prop.clickHandler&&(this.content.removeEventListener("click",this.prop.clickHandler),this.content.removeEventListener("keydown",this.prop.keyHandler),this.prop.clickHandler=null,this.prop.keyHandler=null),c.id&&this.prop.width[c.id]?this.container.style.width=this.prop.width[c.id]:c.width?this.container.style.width=c.width:this.container.style.width=null,this.content.innerHTML=c.content,this.content.scrollTop=0,this.container.classList.add("psv-panel--open"),zi(this.content,"psv-panel-content--no-margin",c.noMargin===!0),c.clickHandler&&(this.prop.clickHandler=c.clickHandler,this.prop.keyHandler=function(N){N.key===Ut.Enter&&c.clickHandler(N)},this.content.addEventListener("click",this.prop.clickHandler),this.content.addEventListener("keydown",this.prop.keyHandler),L||setTimeout(function(){var N;(N=v.content.querySelector("a,button,[tabindex]"))==null||N.focus()},300)),this.psv.trigger(pe.OPEN_PANEL,c.id)},y.hide=function(c){if(this.isVisible(c)){var v=this.prop.contentId;this.prop.visible=!1,this.prop.contentId=void 0,this.content.innerHTML=null,this.container.classList.remove("psv-panel--open"),this.prop.clickHandler&&(this.content.removeEventListener("click",this.prop.clickHandler),this.prop.clickHandler=null),this.psv.trigger(pe.CLOSE_PANEL,v)}},y.__onMouseDown=function(c){c.stopPropagation(),this.__startResize(c)},y.__onTouchStart=function(c){c.stopPropagation(),this.__startResize(c.changedTouches[0])},y.__onMouseUp=function(c){this.prop.mousedown&&(c.stopPropagation(),this.prop.mousedown=!1,this.content.classList.remove("psv-panel-content--no-interaction"))},y.__onMouseMove=function(c){this.prop.mousedown&&(c.stopPropagation(),this.__resize(c))},y.__onTouchMove=function(c){this.prop.mousedown&&this.__resize(c.touches[0])},y.__startResize=function(c){this.prop.mouseX=c.clientX,this.prop.mouseY=c.clientY,this.prop.mousedown=!0,this.content.classList.add("psv-panel-content--no-interaction")},y.__resize=function(c){var v=c.clientX,L=c.clientY,N=Math.max(es,this.container.offsetWidth-(v-this.prop.mouseX))+"px";this.prop.contentId&&(this.prop.width[this.prop.contentId]=N),this.container.style.width=N,this.prop.mouseX=v,this.prop.mouseY=L},x}(Tn),yr=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="15 15 70 70"><path fill="currentColor" d="M50,16.2c-18.6,0-33.8,15.1-33.8,33.8S31.4,83.7,50,83.7S83.8,68.6,83.8,50S68.6,16.2,50,16.2z M50,80.2c-16.7,0-30.2-13.6-30.2-30.2S33.3,19.7,50,19.7S80.3,33.3,80.3,50S66.7,80.2,50,80.2z"/><rect fill="currentColor" x="48" y="31.7" width="4" height="28"/><rect fill="currentColor" x="48" y="63.2" width="4" height="5"/><!--Created by Shastry from the Noun Project--></svg>
`,Rs=function(){function w(y){this.psv=y,this.config=y.config,this.prop=y.prop}var x=w.prototype;return x.destroy=function(){delete this.psv,delete this.config,delete this.prop},w}(),vo=new Re.Vector2,Jn=new Re.Vector3,Mr=new Re.Euler(0,0,0,"ZXY"),Sl=function(w){it(x,w);function x(M){return w.call(this,M)||this}var y=x.prototype;return y.fovToZoomLevel=function(c){var v=Math.round((c-this.config.minFov)/(this.config.maxFov-this.config.minFov)*100);return v-2*(v-50)},y.zoomLevelToFov=function(c){return this.config.maxFov+c/100*(this.config.minFov-this.config.maxFov)},y.vFovToHFov=function(c){return Re.MathUtils.radToDeg(2*Math.atan(Math.tan(Re.MathUtils.degToRad(c)/2)*this.prop.aspect))},y.speedToDuration=function(c,v){if(!c||typeof c!="number"){var L=c?ur(c):this.config.autorotateSpeed;return v/Math.abs(L)*1e3}else return Math.abs(c)},y.textureCoordsToSphericalCoords=function(c){var v=this.prop.panoData;if(!v)throw new ze("Current adapter does not support texture coordinates.");var L=(c.x+v.croppedX)/v.fullWidth*Math.PI*2,N=(c.y+v.croppedY)/v.fullHeight*Math.PI,q={longitude:L>=Math.PI?L-Math.PI:L+Math.PI,latitude:Math.PI/2-N};return!Mr.equals(this.psv.renderer.mesh.rotation)||!Mr.equals(this.psv.renderer.meshContainer.rotation)?(this.sphericalCoordsToVector3(q,Jn),Jn.applyEuler(this.psv.renderer.mesh.rotation),Jn.applyEuler(this.psv.renderer.meshContainer.rotation),this.vector3ToSphericalCoords(Jn)):q},y.sphericalCoordsToTextureCoords=function(c){var v=this.prop.panoData;if(!v)throw new ze("Current adapter does not support texture coordinates.");(!Mr.equals(this.psv.renderer.mesh.rotation)||!Mr.equals(this.psv.renderer.meshContainer.rotation))&&(this.sphericalCoordsToVector3(c,Jn),dr(Jn,this.psv.renderer.meshContainer.rotation),dr(Jn,this.psv.renderer.mesh.rotation),c=this.vector3ToSphericalCoords(Jn));var L=c.longitude/Math.PI/2*v.fullWidth,N=c.latitude/Math.PI*v.fullHeight;return{x:Math.round(c.longitude<Math.PI?L+v.fullWidth/2:L-v.fullWidth/2)-v.croppedX,y:Math.round(v.fullHeight/2-N)-v.croppedY}},y.sphericalCoordsToVector3=function(c,v){return v||(v=new Re.Vector3),v.x=St*-Math.cos(c.latitude)*Math.sin(c.longitude),v.y=St*Math.sin(c.latitude),v.z=St*Math.cos(c.latitude)*Math.cos(c.longitude),v},y.vector3ToSphericalCoords=function(c){var v=Math.acos(c.y/Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z)),L=Math.atan2(c.x,c.z);return{longitude:L<0?-L:Math.PI*2-L,latitude:Math.PI/2-v}},y.viewerCoordsToVector3=function(c){var v=this.getIntersections(c).filter(function(L){return L.object.userData[Et]});return v.length?v[0].point:null},y.vector3ToViewerCoords=function(c){var v=c.clone();return v.project(this.psv.renderer.camera),{x:Math.round((v.x+1)/2*this.prop.size.width),y:Math.round((1-v.y)/2*this.prop.size.height)}},y.sphericalCoordsToViewerCoords=function(c){return this.vector3ToViewerCoords(this.sphericalCoordsToVector3(c,Jn))},y.getIntersections=function(c){return vo.x=2*c.x/this.prop.size.width-1,vo.y=-2*c.y/this.prop.size.height+1,this.psv.renderer.raycaster.setFromCamera(vo,this.psv.renderer.camera),this.psv.renderer.raycaster.intersectObjects(this.psv.renderer.scene.children,!0).filter(function(v){return!!v.object.userData})},y.cleanPosition=function(c){return c.x!==void 0&&c.y!==void 0?this.textureCoordsToSphericalCoords(c):{longitude:Rn(c.longitude),latitude:Rn(c.latitude,!this.prop.littlePlanet)}},y.cleanSphereCorrection=function(c){return{pan:Rn((c==null?void 0:c.pan)||0),tilt:Rn((c==null?void 0:c.tilt)||0,!0),roll:Rn((c==null?void 0:c.roll)||0,!0,!1)}},y.cleanPanoramaPose=function(c){return{pan:Re.MathUtils.degToRad((c==null?void 0:c.poseHeading)||0),tilt:Re.MathUtils.degToRad((c==null?void 0:c.posePitch)||0),roll:Re.MathUtils.degToRad((c==null?void 0:c.poseRoll)||0)}},x}(Rs),El=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M33.38 33.2a1.96 1.96 0 0 0 1.5-3.23 10.61 10.61 0 0 1 7.18-17.51c.7-.06 1.31-.49 1.61-1.12a13.02 13.02 0 0 1 11.74-7.43c7.14 0 12.96 5.8 12.96 12.9 0 3.07-1.1 6.05-3.1 8.38-.7.82-.61 2.05.21 2.76.83.7 2.07.6 2.78-.22a16.77 16.77 0 0 0 4.04-10.91C72.3 7.54 64.72 0 55.4 0a16.98 16.98 0 0 0-14.79 8.7 14.6 14.6 0 0 0-12.23 14.36c0 3.46 1.25 6.82 3.5 9.45.4.45.94.69 1.5.69m45.74 43.55a22.13 22.13 0 0 1-5.23 12.4c-4 4.55-9.53 6.86-16.42 6.86-12.6 0-20.1-10.8-20.17-10.91a1.82 1.82 0 0 0-.08-.1c-5.3-6.83-14.55-23.82-17.27-28.87-.05-.1 0-.21.02-.23a6.3 6.3 0 0 1 8.24 1.85l9.38 12.59a1.97 1.97 0 0 0 3.54-1.17V25.34a4 4 0 0 1 1.19-2.87 3.32 3.32 0 0 1 2.4-.95c1.88.05 3.4 1.82 3.4 3.94v24.32a1.96 1.96 0 0 0 3.93 0v-33.1a3.5 3.5 0 0 1 7 0v35.39a1.96 1.96 0 0 0 3.93 0v-.44c.05-2.05 1.6-3.7 3.49-3.7 1.93 0 3.5 1.7 3.5 3.82v5.63c0 .24.04.48.13.71l.1.26a1.97 1.97 0 0 0 3.76-.37c.33-1.78 1.77-3.07 3.43-3.07 1.9 0 3.45 1.67 3.5 3.74l-1.77 18.1zM77.39 51c-1.25 0-2.45.32-3.5.9v-.15c0-4.27-3.33-7.74-7.42-7.74-1.26 0-2.45.33-3.5.9V16.69a7.42 7.42 0 0 0-14.85 0v1.86a7 7 0 0 0-3.28-.94 7.21 7.21 0 0 0-5.26 2.07 7.92 7.92 0 0 0-2.38 5.67v37.9l-5.83-7.82a10.2 10.2 0 0 0-13.35-2.92 4.1 4.1 0 0 0-1.53 5.48C20 64.52 28.74 80.45 34.07 87.34c.72 1.04 9.02 12.59 23.4 12.59 7.96 0 14.66-2.84 19.38-8.2a26.06 26.06 0 0 0 6.18-14.6l1.78-18.2v-.2c0-4.26-3.32-7.73-7.42-7.73z"/><!--Created by AomAm from the Noun Project--></svg>
`,Tl=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="10 17 79 79"><path fill="currentColor" d="M38.1 29.27c-.24 0-.44.2-.44.45v10.7a.45.45 0 00.9 0v-10.7c0-.25-.2-.45-.45-.45zm10.2 26.66a11.54 11.54 0 01-8.48-6.14.45.45 0 10-.8.41 12.45 12.45 0 009.22 6.62.45.45 0 00.07-.9zm24.55-13.08a23.04 23.04 0 00-22.56-23v7.07l-.01.05a2.83 2.83 0 012.39 2.78v14.03l.09-.02h8.84v-9.22a.45.45 0 11.9 0v9.22h10.35v-.9zm0 27.33V44.66H62.5c-.02 2.01-.52 4-1.47 5.76a.45.45 0 01-.61.18.45.45 0 01-.19-.61 11.54 11.54 0 001.36-5.33h-8.83l-.1-.01a2.83 2.83 0 01-2.83 2.84h-.04-.04a2.83 2.83 0 01-2.83-2.83v-14.9a2.82 2.82 0 012.47-2.8v-7.11a23.04 23.04 0 00-22.57 23v.91h14.72V29.88a8.2 8.2 0 015.02-7.57c.22-.1.5.01.59.24.1.23-.01.5-.24.6a7.3 7.3 0 00-4.47 6.73v13.88h3.9a.45.45 0 110 .9h-3.9v.15a7.32 7.32 0 0011.23 6.17.45.45 0 01.49.76 8.22 8.22 0 01-12.62-6.93v-.15H26.82v25.52a23.04 23.04 0 0023.01 23.01 23.04 23.04 0 0023.02-23.01zm1.8-27.33v27.33A24.85 24.85 0 0149.84 95a24.85 24.85 0 01-24.82-24.82V42.85a24.85 24.85 0 0124.82-24.82 24.85 24.85 0 0124.83 24.82zM57.98 29.88v9.36a.45.45 0 11-.9 0v-9.36a7.28 7.28 0 00-3.4-6.17.45.45 0 01.49-.76 8.18 8.18 0 013.8 6.93z"/><!-- Created by Icon Island from the Noun Project --></svg>
`,pa=0,$n=1,Al=2,Cl=function(w){it(x,w);function x(M){var c;return c=w.call(this,M)||this,c.state={moveThreshold:zt*He.pixelRatio,keyboardEnabled:!1,step:pa,mousedown:!1,startMouseX:0,startMouseY:0,mouseX:0,mouseY:0,mouseHistory:[],pinchDist:0,keyHandler:new Ss,ctrlKeyDown:!1,dblclickData:null,dblclickTimeout:null,longtouchTimeout:null,twofingersTimeout:null,ctrlZoomTimeout:null},c.__onResize=It(function(){return c.psv.autoSize()},50),c}var y=x.prototype;return y.init=function(){window.addEventListener("resize",this),window.addEventListener("keydown",this,{passive:!1}),window.addEventListener("keyup",this),this.psv.container.addEventListener("mousedown",this),window.addEventListener("mousemove",this,{passive:!1}),window.addEventListener("mouseup",this),this.psv.container.addEventListener("touchstart",this,{passive:!1}),window.addEventListener("touchmove",this,{passive:!1}),window.addEventListener("touchend",this,{passive:!1}),this.psv.container.addEventListener(He.mouseWheelEvent,this,{passive:!1}),He.fullscreenEvent&&document.addEventListener(He.fullscreenEvent,this)},y.destroy=function(){window.removeEventListener("resize",this),window.removeEventListener("keydown",this),window.removeEventListener("keyup",this),this.psv.container.removeEventListener("mousedown",this),window.removeEventListener("mousemove",this),window.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchstart",this),window.removeEventListener("touchmove",this),window.removeEventListener("touchend",this),this.psv.container.removeEventListener(He.mouseWheelEvent,this),He.fullscreenEvent&&document.removeEventListener(He.fullscreenEvent,this),clearTimeout(this.state.dblclickTimeout),clearTimeout(this.state.longtouchTimeout),clearTimeout(this.state.twofingersTimeout),clearTimeout(this.state.ctrlZoomTimeout),delete this.state,w.prototype.destroy.call(this)},y.handleEvent=function(c){switch(c.type){case"resize":this.__onResize();break;case"keydown":this.__onKeyDown(c);break;case"keyup":this.__onKeyUp();break;case"mousemove":this.__onMouseMove(c);break;case"mouseup":this.__onMouseUp(c);break;case"touchmove":this.__onTouchMove(c);break;case"touchend":this.__onTouchEnd(c);break;case He.fullscreenEvent:this.__fullscreenToggled();break}if(!ar(c.target,".psv--capture-event"))switch(c.type){case"mousedown":this.__onMouseDown(c);break;case"touchstart":this.__onTouchStart(c);break;case He.mouseWheelEvent:this.__onMouseWheel(c);break}},y.enableKeyboard=function(){this.state.keyboardEnabled=!0},y.disableKeyboard=function(){this.state.keyboardEnabled=!1},y.__onKeyDown=function(c){this.config.mousewheelCtrlKey&&(this.state.ctrlKeyDown=c.key===Ut.Control,this.state.ctrlKeyDown&&(clearTimeout(this.state.ctrlZoomTimeout),this.psv.overlay.hide(Vt.CTRL_ZOOM)));var v=this.psv.trigger(pe.KEY_PRESS,c.key);if(!v.isDefaultPrevented()&&this.state.keyboardEnabled){var L=this.config.keyboard[c.key];if(L===Mt.TOGGLE_AUTOROTATE)this.psv.toggleAutorotate(),c.preventDefault();else if(L&&!this.state.keyHandler.time){switch(L!==Mt.ZOOM_IN&&L!==Mt.ZOOM_OUT&&this.psv.__stopAll(),L){case Mt.ROTATE_LAT_UP:this.psv.dynamics.position.roll({latitude:!1});break;case Mt.ROTATE_LAT_DOWN:this.psv.dynamics.position.roll({latitude:!0});break;case Mt.ROTATE_LONG_RIGHT:this.psv.dynamics.position.roll({longitude:!1});break;case Mt.ROTATE_LONG_LEFT:this.psv.dynamics.position.roll({longitude:!0});break;case Mt.ZOOM_IN:this.psv.dynamics.zoom.roll(!1);break;case Mt.ZOOM_OUT:this.psv.dynamics.zoom.roll(!0);break}this.state.keyHandler.down(),c.preventDefault()}}},y.__onKeyUp=function(){var c=this;this.state.ctrlKeyDown=!1,this.state.keyboardEnabled&&this.state.keyHandler.up(function(){c.psv.dynamics.position.stop(),c.psv.dynamics.zoom.stop(),c.psv.resetIdleTimer()})},y.__onMouseDown=function(c){this.state.mousedown=!0,this.state.startMouseX=c.clientX,this.state.startMouseY=c.clientY},y.__onMouseUp=function(c){(this.state.mousedown||this.state.step===$n)&&this.__stopMove(c.clientX,c.clientY,c.target,c.button===2)},y.__onMouseMove=function(c){if(this.config.mousemove&&(this.state.mousedown||this.state.step===$n)&&(c.preventDefault(),this.__move(c.clientX,c.clientY)),!ca(this.prop.objectsObservers)&&to(c.target,this.psv.container)){var v=Cn(this.psv.container),L={x:c.clientX-v.left,y:c.clientY-v.top},N=this.psv.dataHelper.getIntersections(L),q=function(le,We,Ne){le.listener.handleEvent(new CustomEvent(Ne,{detail:{originalEvent:c,object:le.object,data:le.object.userData[We],viewerPoint:L}}))};st(this.prop.objectsObservers,function(j,le){var We=N.find(function(Ne){return Ne.object.userData[le]});We?(j.object&&We.object!==j.object&&(q(j,le,Ui.LEAVE_OBJECT),delete j.object),j.object?q(j,le,Ui.HOVER_OBJECT):(j.object=We.object,q(j,le,Ui.ENTER_OBJECT))):j.object&&(q(j,le,Ui.LEAVE_OBJECT),delete j.object)})}},y.__onTouchStart=function(c){var v=this;c.touches.length===1?(this.state.mousedown=!0,this.state.startMouseX=c.touches[0].clientX,this.state.startMouseY=c.touches[0].clientY,this.prop.longtouchTimeout||(this.prop.longtouchTimeout=setTimeout(function(){var L=c.touches[0];v.__stopMove(L.clientX,L.clientY,L.target,!0),v.prop.longtouchTimeout=null},je))):c.touches.length===2&&(this.state.mousedown=!1,this.__cancelLongTouch(),this.config.mousemove&&(this.__cancelTwoFingersOverlay(),this.__startMoveZoom(c),c.preventDefault()))},y.__onTouchEnd=function(c){if(this.__cancelLongTouch(),this.state.mousedown||this.state.step===$n){if(c.preventDefault(),this.__cancelTwoFingersOverlay(),c.touches.length===1)this.__stopMove(this.state.mouseX,this.state.mouseY);else if(c.touches.length===0){var v=c.changedTouches[0];this.__stopMove(v.clientX,v.clientY,v.target)}}},y.__onTouchMove=function(c){var v=this;if(this.__cancelLongTouch(),!!this.config.mousemove)if(c.touches.length===1){if(this.config.touchmoveTwoFingers)this.state.mousedown&&!this.prop.twofingersTimeout&&(this.prop.twofingersTimeout=setTimeout(function(){v.psv.overlay.show({id:Vt.TWO_FINGERS,image:El,text:v.config.lang.twoFingers})},Ft));else if(this.state.mousedown||this.state.step===$n){c.preventDefault();var L=c.touches[0];this.__move(L.clientX,L.clientY)}}else this.__moveZoom(c),this.__cancelTwoFingersOverlay()},y.__cancelLongTouch=function(){this.prop.longtouchTimeout&&(clearTimeout(this.prop.longtouchTimeout),this.prop.longtouchTimeout=null)},y.__cancelTwoFingersOverlay=function(){this.config.touchmoveTwoFingers&&(this.prop.twofingersTimeout&&(clearTimeout(this.prop.twofingersTimeout),this.prop.twofingersTimeout=null),this.psv.overlay.hide(Vt.TWO_FINGERS))},y.__onMouseWheel=function(c){var v=this;if(this.config.mousewheel){if(this.config.mousewheelCtrlKey&&!this.state.ctrlKeyDown){this.psv.overlay.show({id:Vt.CTRL_ZOOM,image:Tl,text:this.config.lang.ctrlZoom}),clearTimeout(this.state.ctrlZoomTimeout),this.state.ctrlZoomTimeout=setTimeout(function(){return v.psv.overlay.hide(Vt.CTRL_ZOOM)},et);return}c.preventDefault(),c.stopPropagation();var L=so(c).spinY*5*this.config.zoomSpeed;L!==0&&this.psv.dynamics.zoom.step(-L,5)}},y.__fullscreenToggled=function(c){this.prop.fullscreen=c!==void 0?c:lr(this.psv.container),this.config.keyboard&&(this.prop.fullscreen?this.psv.startKeyboardControl():this.psv.stopKeyboardControl()),this.psv.trigger(pe.FULLSCREEN_UPDATED,this.prop.fullscreen)},y.__resetMove=function(){this.state.step=pa,this.state.mousedown=!1,this.state.mouseX=0,this.state.mouseY=0,this.state.startMouseX=0,this.state.startMouseY=0,this.state.mouseHistory.length=0},y.__startMoveZoom=function(c){this.psv.__stopAll(),this.__resetMove();var v={x:c.touches[0].clientX,y:c.touches[0].clientY},L={x:c.touches[1].clientX,y:c.touches[1].clientY};this.state.step=$n,this.state.pinchDist=ri(v,L),this.state.mouseX=(v.x+L.x)/2,this.state.mouseY=(v.y+L.y)/2,this.__logMouseMove(this.state.mouseX,this.state.mouseY)},y.__stopMove=function(c,v,L,N){L===void 0&&(L=null),N===void 0&&(N=!1),this.state.step===$n?this.config.moveInertia?(this.__logMouseMove(c,v),this.__stopMoveInertia(c,v)):(this.__resetMove(),this.psv.resetIdleTimer()):this.state.mousedown&&(this.psv.stopAnimation(),this.__click(c,v,L,N),this.__resetMove(),this.psv.resetIdleTimer())},y.__stopMoveInertia=function(c,v){var L=this,N=new Re.SplineCurve(this.state.mouseHistory.map(function(Ne){var lt=Ne[1],Ct=Ne[2];return new Re.Vector2(lt,Ct)})),q=N.getTangent(1),j=this.state.mouseHistory.slice(1).reduce(function(Ne,lt){var Ct=Ne.total,tt=Ne.prev;return{total:Ct+ri({x:tt[1],y:tt[2]},{x:lt[1],y:lt[2]})/(lt[0]-tt[0]),prev:lt}},{total:0,prev:this.state.mouseHistory[0]}).total/this.state.mouseHistory.length;if(!j){this.__resetMove(),this.psv.resetIdleTimer();return}this.state.step=Al;var le=c,We=v;this.prop.animationPromise=new Xi({properties:{speed:{start:j,end:0}},duration:1e3,easing:"outQuad",onTick:function(lt){le+=lt.speed*q.x*3*He.pixelRatio,We+=lt.speed*q.y*3*He.pixelRatio,L.__applyMove(le,We)}}),this.prop.animationPromise.then(function(Ne){L.prop.animationPromise=null,Ne&&(L.__resetMove(),L.psv.resetIdleTimer())})},y.__click=function(c,v,L,N){var q=this;N===void 0&&(N=!1);var j=this.psv.container.getBoundingClientRect(),le={rightclick:N,target:L,clientX:c,clientY:v,viewerX:c-j.left,viewerY:v-j.top},We=this.psv.dataHelper.getIntersections({x:le.viewerX,y:le.viewerY}),Ne=We.find(function(tt){return tt.object.userData[Et]});if(Ne){var lt=this.psv.dataHelper.vector3ToSphericalCoords(Ne.point);le.longitude=lt.longitude,le.latitude=lt.latitude,le.objects=We.map(function(tt){return tt.object}).filter(function(tt){return!tt.userData[Et]});try{var Ct=this.psv.dataHelper.sphericalCoordsToTextureCoords(le);le.textureX=Ct.x,le.textureY=Ct.y}catch{le.textureX=NaN,le.textureY=NaN}this.state.dblclickTimeout?(Math.abs(this.state.dblclickData.clientX-le.clientX)<this.state.moveThreshold&&Math.abs(this.state.dblclickData.clientY-le.clientY)<this.state.moveThreshold&&this.psv.trigger(pe.DOUBLE_CLICK,this.state.dblclickData),clearTimeout(this.state.dblclickTimeout),this.state.dblclickTimeout=null,this.state.dblclickData=null):(this.psv.trigger(pe.CLICK,le),this.state.dblclickData=oi(le),this.state.dblclickTimeout=setTimeout(function(){q.state.dblclickTimeout=null,q.state.dblclickData=null},gn))}},y.__move=function(c,v){this.state.mousedown&&(Math.abs(c-this.state.startMouseX)>=this.state.moveThreshold||Math.abs(v-this.state.startMouseY)>=this.state.moveThreshold)?(this.psv.__stopAll(),this.__resetMove(),this.state.step=$n,this.state.mouseX=c,this.state.mouseY=v,this.__logMouseMove(c,v)):this.state.step===$n&&(this.__applyMove(c,v),this.__logMouseMove(c,v))},y.__applyMove=function(c,v){var L={longitude:(c-this.state.mouseX)/this.prop.size.width*this.config.moveSpeed*Re.MathUtils.degToRad(this.prop.littlePlanet?90:this.prop.hFov),latitude:(v-this.state.mouseY)/this.prop.size.height*this.config.moveSpeed*Re.MathUtils.degToRad(this.prop.littlePlanet?90:this.prop.vFov)},N=this.psv.getPosition();this.psv.rotate({longitude:N.longitude-L.longitude,latitude:N.latitude+L.latitude}),this.state.mouseX=c,this.state.mouseY=v},y.__moveZoom=function(c){if(this.state.step===$n){c.preventDefault();var v={x:c.touches[0].clientX,y:c.touches[0].clientY},L={x:c.touches[1].clientX,y:c.touches[1].clientY},N=ri(v,L),q=(N-this.state.pinchDist)/He.pixelRatio*this.config.zoomSpeed;this.psv.zoom(this.psv.getZoomLevel()+q),this.__move((v.x+L.x)/2,(v.y+L.y)/2),this.state.pinchDist=N}},y.__logMouseMove=function(c,v){var L=Date.now(),N=this.state.mouseHistory.length?this.state.mouseHistory[this.state.mouseHistory.length-1]:[0,-1,-1];N[1]===c&&N[2]===v?N[0]=L:L===N[0]?(N[1]=c,N[2]=v):this.state.mouseHistory.push([L,c,v]);for(var q=null,j=0;j<this.state.mouseHistory.length;)this.state.mouseHistory[j][0]<L-qe?this.state.mouseHistory.splice(j,1):q&&this.state.mouseHistory[j][0]-q>qe/10?(this.state.mouseHistory.splice(0,j),j=0,q=this.state.mouseHistory[j][0]):(q=this.state.mouseHistory[j][0],j++)},x}(Rs),Rl=function(w){it(x,w);function x(M){var c,v;return v=w.call(this,M)||this,v.renderer=new Re.WebGLRenderer({alpha:!0,antialias:!0}),v.renderer.setPixelRatio(He.pixelRatio),v.renderer.domElement.className="psv-canvas",v.scene=new Re.Scene,v.camera=new Re.PerspectiveCamera(50,16/9,.1,2*St),v.mesh=v.psv.adapter.createMesh(),v.mesh.userData=(c={},c[Et]=!0,c),v.meshContainer=new Re.Group,v.meshContainer.add(v.mesh),v.scene.add(v.meshContainer),v.raycaster=new Re.Raycaster,v.timestamp=null,v.ready=!1,v.canvasContainer=document.createElement("div"),v.canvasContainer.className="psv-canvas-container",v.canvasContainer.style.background=v.psv.config.canvasBackground,v.canvasContainer.style.cursor=v.psv.config.mousemove?"move":"default",v.canvasContainer.appendChild(v.renderer.domElement),v.psv.container.appendChild(v.canvasContainer),M.on(pe.SIZE_UPDATED,we(v)),M.on(pe.ZOOM_UPDATED,we(v)),M.on(pe.POSITION_UPDATED,we(v)),M.on(pe.CONFIG_CHANGED,we(v)),v.hide(),v}var y=x.prototype;return y.destroy=function(){this.renderer.setAnimationLoop(null),this.__cleanTHREEScene(this.scene),this.psv.container.removeChild(this.canvasContainer),delete this.canvasContainer,delete this.renderer,delete this.scene,delete this.camera,delete this.mesh,delete this.meshContainer,delete this.raycaster,w.prototype.destroy.call(this)},y.handleEvent=function(c){switch(c.type){case pe.SIZE_UPDATED:this.__onSizeUpdated();break;case pe.ZOOM_UPDATED:this.__onZoomUpdated();break;case pe.POSITION_UPDATED:this.__onPositionUpdated();break;case pe.CONFIG_CHANGED:c.args[0].includes("fisheye")&&this.__onPositionUpdated(),c.args[0].includes("mousemove")&&(this.canvasContainer.style.cursor=this.psv.config.mousemove?"move":"default");break}},y.hide=function(){this.canvasContainer.style.opacity=0},y.show=function(){this.canvasContainer.style.opacity=1},y.__onSizeUpdated=function(){this.renderer.setSize(this.prop.size.width,this.prop.size.height),this.camera.aspect=this.prop.aspect,this.camera.updateProjectionMatrix(),this.prop.needsUpdate=!0},y.__onZoomUpdated=function(){this.camera.fov=this.prop.vFov,this.camera.updateProjectionMatrix(),this.prop.needsUpdate=!0},y.__onPositionUpdated=function(){this.camera.position.set(0,0,0),this.camera.lookAt(this.prop.direction),this.config.fisheye&&this.camera.position.copy(this.prop.direction).multiplyScalar(this.config.fisheye/2).negate(),this.prop.needsUpdate=!0},y.__renderLoop=function(c){var v=this.timestamp!==null?c-this.timestamp:0;this.timestamp=c,this.psv.trigger(pe.BEFORE_RENDER,c,v),st(this.psv.dynamics,function(L){return L.update(v)}),this.prop.idleTime>0&&c-this.prop.idleTime>this.config.autorotateDelay&&this.psv.startAutorotate(),this.prop.needsUpdate&&(this.render(),this.prop.needsUpdate=!1)},y.render=function(){this.renderer.render(this.scene,this.camera),this.psv.trigger(pe.RENDER)},y.setTexture=function(c){var v=this;this.prop.panoData=c.panoData,this.psv.adapter.setTexture(this.mesh,c),this.ready||(this.renderer.setAnimationLoop(function(L){return v.__renderLoop(L)}),this.ready=!0),this.psv.needsUpdate(),this.psv.trigger(pe.PANORAMA_LOADED,c)},y.setOverlay=function(c,v){this.psv.adapter.setOverlay(this.mesh,c,v),this.psv.needsUpdate()},y.setPanoramaPose=function(c,v){v===void 0&&(v=this.mesh);var L=this.psv.dataHelper.cleanPanoramaPose(c);v.rotation.set(-L.tilt,-L.pan,-L.roll,"ZXY")},y.setSphereCorrection=function(c,v){v===void 0&&(v=this.meshContainer);var L=this.psv.dataHelper.cleanSphereCorrection(c);v.rotation.set(L.tilt,L.pan,L.roll,"ZXY")},y.transition=function(c,v){var L=this,N=ys(v),q="zoom"in v,j=new Re.Group,le=this.psv.adapter.createMesh(.5);if(this.psv.adapter.setTexture(le,c,!0),this.psv.adapter.setTextureOpacity(le,0),this.setPanoramaPose(c.panoData,le),this.setSphereCorrection(v.sphereCorrection,j),N){var We=this.psv.dataHelper.cleanPosition(v),Ne=this.psv.getPosition(),lt=new Re.Vector3(0,1,0);j.rotateOnWorldAxis(lt,We.longitude-Ne.longitude);var Ct=new Re.Vector3(0,1,0).cross(this.camera.getWorldDirection(new Re.Vector3)).normalize();j.rotateOnWorldAxis(Ct,We.latitude-Ne.latitude)}j.add(le),this.scene.add(j);var tt=new Xi({properties:{opacity:{start:0,end:1},zoom:q?{start:this.psv.getZoomLevel(),end:v.zoom}:void 0},duration:v.transition,easing:"outCubic",onTick:function(ns){L.psv.adapter.setTextureOpacity(le,ns.opacity),L.psv.adapter.setTextureOpacity(L.mesh,1-ns.opacity),q&&L.psv.zoom(ns.zoom),L.psv.needsUpdate()}});return tt.then(function(Mi){Mi?(L.setTexture(c),L.psv.adapter.setTextureOpacity(L.mesh,1),L.setPanoramaPose(c.panoData),L.setSphereCorrection(v.sphereCorrection),N&&L.psv.rotate(v)):L.psv.adapter.disposeTexture(c),L.scene.remove(j),le.geometry.dispose(),le.geometry=null}),tt},y.__cleanTHREEScene=function(c){var v=this;c.traverse(function(L){L.geometry&&L.geometry.dispose(),L.material&&(Array.isArray(L.material)?L.material.forEach(function(N){N.map&&N.map.dispose(),N.dispose()}):(L.material.map&&L.material.map.dispose(),L.material.dispose())),L.dispose&&!(L instanceof Re.Scene)&&L.dispose(),L!==c&&v.__cleanTHREEScene(L)})},x}(Rs),Ll=function(w){it(x,w);function x(M){var c;return c=w.call(this,M)||this,c.loader=new Re.FileLoader,c.loader.setResponseType("blob"),c.config.withCredentials&&c.loader.setWithCredentials(!0),c.config.requestHeaders&&typeof c.config.requestHeaders=="object"&&c.loader.setRequestHeader(c.config.requestHeaders),c}var y=x.prototype;return y.destroy=function(){this.abortLoading(),w.prototype.destroy.call(this)},y.abortLoading=function(){},y.loadFile=function(c,v){var L=this;return this.config.requestHeaders&&typeof this.config.requestHeaders=="function"&&this.loader.setRequestHeader(this.config.requestHeaders(c)),new Promise(function(N,q){var j=0;v==null||v(j),L.loader.load(c,function(le){j=100,v==null||v(j),N(le)},function(le){if(le.lengthComputable){var We=le.loaded/le.total*100;We>j&&(j=We,v==null||v(j))}},function(le){q(le)})})},y.loadImage=function(c,v){return this.loadFile(c,v).then(function(L){return new Promise(function(N,q){var j=document.createElementNS("http://www.w3.org/1999/xhtml","img");j.onload=function(){URL.revokeObjectURL(j.src),N(j)},j.onerror=q,j.src=URL.createObjectURL(L)})})},y.preloadPanorama=function(c){return this.psv.adapter.supportsPreload(c)?this.psv.adapter.loadTexture(c):Promise.resolve()},x}(Rs),dn={NONE:0,SHOWING:1,HIDING:2,READY:3},ts=function(w){it(x,w);function x(M,c){var v;return v=w.call(this,M,"psv-tooltip")||this,v.prop=Nt({},v.prop,c,{state:dn.NONE,width:0,height:0,pos:"",config:null,data:null}),v.content=document.createElement("div"),v.content.className="psv-tooltip-content",v.container.appendChild(v.content),v.arrow=document.createElement("div"),v.arrow.className="psv-tooltip-arrow",v.container.appendChild(v.arrow),v.container.addEventListener("transitionend",we(v)),v.container.style.top="-1000px",v.container.style.left="-1000px",v}var y=x.prototype;return y.destroy=function(){delete this.arrow,delete this.content,w.prototype.destroy.call(this)},y.handleEvent=function(c){switch(c.type){case"transitionend":this.__onTransitionEnd(c);break}},y.toggle=function(){throw new ze("Tooltip cannot be toggled")},y.show=function(c){if(this.prop.state!==dn.NONE)throw new ze("Initialized tooltip cannot be re-initialized");c.className&&or(this.container,c.className),this.content.innerHTML=c.content;var v=this.container.getBoundingClientRect();this.prop.width=v.right-v.left,this.prop.height=v.bottom-v.top,this.prop.state=dn.READY,this.move(c),this.prop.data=c.data,this.prop.state=dn.SHOWING,this.psv.trigger(pe.SHOW_TOOLTIP,this.prop.data,this),this.__waitImages()},y.move=function(c){if(this.prop.state!==dn.SHOWING&&this.prop.state!==dn.READY)throw new ze("Uninitialized tooltip cannot be moved");c.box||(c.box={width:0,height:0}),this.config=c;var v=this.container,L=this.arrow,N={posClass:ao(c.position,{allowCenter:!1,cssOrder:!1})||["top","center"],width:this.prop.width,height:this.prop.height,top:0,left:0,arrowTop:0,arrowLeft:0};this.__computeTooltipPosition(N,c);var q=null,j=null;if(N.top<0?q="bottom":N.top+N.height>this.psv.prop.size.height&&(q="top"),N.left<0?j="right":N.left+N.width>this.psv.prop.size.width&&(j="left"),j||q){var le=rn(N.posClass);q&&(N.posClass[le?0:1]=q),j&&(N.posClass[le?1:0]=j),this.__computeTooltipPosition(N,c)}v.style.top=N.top+"px",v.style.left=N.left+"px",L.style.top=N.arrowTop+"px",L.style.left=N.arrowLeft+"px";var We=N.posClass.join("-");We!==this.prop.pos&&(v.classList.remove("psv-tooltip--"+this.prop.pos),this.prop.pos=We,v.classList.add("psv-tooltip--"+this.prop.pos))},y.hide=function(){this.container.classList.remove("psv-tooltip--visible"),this.prop.state=dn.HIDING,this.psv.trigger(pe.HIDE_TOOLTIP,this.prop.data)},y.__onTransitionEnd=function(c){if(c.propertyName==="transform")switch(this.prop.state){case dn.SHOWING:this.container.classList.add("psv-tooltip--visible"),this.prop.state=dn.READY;break;case dn.HIDING:this.prop.state=dn.NONE,this.destroy();break}},y.__computeTooltipPosition=function(c,v){var L=this.prop.arrow,N=v.top,q=c.height,j=v.left,le=c.width,We=L+this.prop.border,Ne=v.box.width/2+L*2,lt=v.box.height/2+L*2;switch(c.posClass.join("-")){case"top-left":c.top=N-lt-q,c.left=j+We-le,c.arrowTop=q,c.arrowLeft=le-We-L;break;case"top-center":c.top=N-lt-q,c.left=j-le/2,c.arrowTop=q,c.arrowLeft=le/2-L;break;case"top-right":c.top=N-lt-q,c.left=j-We,c.arrowTop=q,c.arrowLeft=L;break;case"bottom-left":c.top=N+lt,c.left=j+We-le,c.arrowTop=-L*2,c.arrowLeft=le-We-L;break;case"bottom-center":c.top=N+lt,c.left=j-le/2,c.arrowTop=-L*2,c.arrowLeft=le/2-L;break;case"bottom-right":c.top=N+lt,c.left=j-We,c.arrowTop=-L*2,c.arrowLeft=L;break;case"left-top":c.top=N+We-q,c.left=j-Ne-le,c.arrowTop=q-We-L,c.arrowLeft=le;break;case"center-left":c.top=N-q/2,c.left=j-Ne-le,c.arrowTop=q/2-L,c.arrowLeft=le;break;case"left-bottom":c.top=N-We,c.left=j-Ne-le,c.arrowTop=L,c.arrowLeft=le;break;case"right-top":c.top=N+We-q,c.left=j+Ne,c.arrowTop=q-We-L,c.arrowLeft=-L*2;break;case"center-right":c.top=N-q/2,c.left=j+Ne,c.arrowTop=q/2-L,c.arrowLeft=-L*2;break;case"right-bottom":c.top=N-We,c.left=j+Ne,c.arrowTop=L,c.arrowLeft=-L*2;break}},y.__waitImages=function(){var c=this,v=this.content.querySelectorAll("img");if(v.length>0){var L=[];v.forEach(function(N){L.push(new Promise(function(q){N.onload=q,N.onerror=q}))}),Promise.all(L).then(function(){if(c.prop.state===dn.SHOWING||c.prop.state===dn.READY){var N=c.container.getBoundingClientRect();c.prop.width=N.right-N.left,c.prop.height=N.bottom-N.top,c.move(c.config)}})}},x}(Tn),Pl=function(w){it(x,w);function x(M){var c;c=w.call(this,M)||this;var v=new ts(c.psv,{arrow:0,border:0});return c.size={arrow:parseInt(ki(v.arrow,"borderTopWidth"),10),border:parseInt(ki(v.container,"borderTopLeftRadius"),10)},v.destroy(),c}var y=x.prototype;return y.destroy=function(){delete this.size,w.prototype.destroy.call(this)},y.create=function(c){var v=new ts(this.psv,this.size);return v.show(c),v},x}(Rs);Re.Cache.enabled=!0;var Il=function(w){it(x,w);function x(M){var c;if(c=w.call(this)||this,He.load(),!He.isWebGLSupported)throw new ze("WebGL is not supported.");if(He.maxTextureWidth===0)throw new ze("Unable to detect system capabilities");return c.prop={ready:!1,uiRefresh:!1,needsUpdate:!1,fullscreen:!1,direction:new Re.Vector3(0,0,St),vFov:null,hFov:null,aspect:null,autorotateEnabled:!1,animationPromise:null,loadingPromise:null,littlePlanet:!1,idleTime:-1,objectsObservers:{},size:{width:0,height:0},panoData:{fullWidth:0,fullHeight:0,croppedWidth:0,croppedHeight:0,croppedX:0,croppedY:0,poseHeading:0,posePitch:0,poseRoll:0}},c.config=Ml(M),c.parent=typeof M.container=="string"?document.getElementById(M.container):M.container,c.parent[sn]=we(c),c.container=document.createElement("div"),c.container.classList.add("psv-container"),c.parent.appendChild(c.container),c.adapter=new c.config.adapter[0](we(c),c.config.adapter[1]),c.children=[],c.plugins={},c.renderer=new Rl(we(c)),c.textureLoader=new Ll(we(c)),c.eventsHandler=new Cl(we(c)),c.dataHelper=new Sl(we(c)),c.loader=new fa(we(c)),c.navbar=new di(we(c)),c.panel=new wl(we(c)),c.tooltip=new Pl(we(c)),c.notification=new bl(we(c)),c.overlay=new Pn(we(c)),c.dynamics={zoom:new qn(function(v){c.prop.vFov=c.dataHelper.zoomLevelToFov(v),c.prop.hFov=c.dataHelper.vFovToHFov(c.prop.vFov),c.trigger(pe.ZOOM_UPDATED,v)},c.config.defaultZoomLvl,0,100),position:new lo({longitude:new qn(null,c.config.defaultLong,0,2*Math.PI,!0),latitude:c.prop.littlePlanet?new qn(null,c.config.defaultLat,0,Math.PI*2,!0):new qn(null,c.config.defaultLat,-Math.PI/2,Math.PI/2)},function(v){c.dataHelper.sphericalCoordsToVector3(v,c.prop.direction),c.trigger(pe.POSITION_UPDATED,v)})},c.__updateSpeeds(),c.eventsHandler.init(),c.__resizeRefresh=It(function(){return c.refreshUi("resize")},500),c.resize(c.config.size),c.config.plugins.forEach(function(v){var L=v[0],N=v[1];c.plugins[L.id]=new L(we(c),N)}),st(c.plugins,function(v){return v.init==null?void 0:v.init()}),c.navbar.setButtons(c.config.navbar),c.config.panorama&&c.setPanorama(c.config.panorama),zi(c.container,"psv--is-touch",He.isTouchEnabled.initial),He.isTouchEnabled.promise.then(function(v){return zi(c.container,"psv--is-touch",v)}),c.once(pe.RENDER,function(){c.config.navbar&&(c.container.classList.add("psv--has-navbar"),c.navbar.show()),vi(c.config.autorotateDelay)||(c.prop.idleTime=performance.now()),c.prop.ready=!0,setTimeout(function(){c.refreshUi("init"),c.trigger(pe.READY)},0)}),c}var y=x.prototype;return y.destroy=function(){this.__stopAll(),this.stopKeyboardControl(),this.exitFullscreen(),st(this.plugins,function(c){return c.destroy()}),delete this.plugins,this.children.slice().forEach(function(c){return c.destroy()}),this.children.length=0,this.eventsHandler.destroy(),this.renderer.destroy(),this.textureLoader.destroy(),this.dataHelper.destroy(),this.adapter.destroy(),this.parent.removeChild(this.container),delete this.parent[sn],delete this.parent,delete this.container,delete this.loader,delete this.navbar,delete this.panel,delete this.tooltip,delete this.notification,delete this.overlay,delete this.dynamics,delete this.config},y.refreshUi=function(c){var v=this;this.prop.ready&&(this.prop.uiRefresh?this.prop.uiRefresh!=="new"&&(this.prop.uiRefresh="new",setTimeout(function(){v.prop.uiRefresh=!1,v.refreshUi(c)})):(this.prop.uiRefresh=!0,this.children.every(function(L){return L.refreshUi(),v.prop.uiRefresh===!0}),this.prop.uiRefresh=!1))},y.getPlugin=function(c){if(typeof c=="string")return this.plugins[c];var v=_n(c,Ln);return v?this.plugins[v.id]:void 0},y.getPosition=function(){return this.dataHelper.cleanPosition(this.dynamics.position.current)},y.getZoomLevel=function(){return this.dynamics.zoom.current},y.getSize=function(){return Nt({},this.prop.size)},y.isAutorotateEnabled=function(){return this.prop.autorotateEnabled},y.isFullscreenEnabled=function(){return He.fullscreenEvent?lr(this.container):this.prop.fullscreen},y.needsUpdate=function(){this.prop.needsUpdate=!0},y.autoSize=function(){(this.container.clientWidth!==this.prop.size.width||this.container.clientHeight!==this.prop.size.height)&&(this.prop.size.width=Math.round(this.container.clientWidth),this.prop.size.height=Math.round(this.container.clientHeight),this.prop.aspect=this.prop.size.width/this.prop.size.height,this.prop.hFov=this.dataHelper.vFovToHFov(this.prop.vFov),this.trigger(pe.SIZE_UPDATED,this.getSize()),this.__resizeRefresh())},y.setPanorama=function(c,v){var L,N=this;v===void 0&&(v={}),this.textureLoader.abortLoading(),(L=this.prop.transitionAnimation)==null||L.cancel(),this.prop.ready||["sphereCorrection","panoData","overlay","overlayOpacity"].forEach(function(Ne){Ne in v||(v[Ne]=N.config[Ne])}),(v.transition===void 0||v.transition===!0)&&(v.transition=wn),v.showLoader===void 0&&(v.showLoader=!0),v.caption===void 0&&(v.caption=this.config.caption),v.description===void 0&&(v.description=this.config.description),!v.panoData&&typeof this.config.panoData=="function"&&(v.panoData=this.config.panoData);var q=ys(v),j="zoom"in v;(q||j)&&this.__stopAll(),this.hideError(),this.config.panorama=c,this.config.caption=v.caption,this.config.description=v.description;var le=function(lt){if(N.loader.hide(),N.prop.loadingPromise=null,oo(lt))return!1;if(lt)throw N.navbar.setCaption(""),N.showError(N.config.lang.loadError),console.error(lt),lt;return N.resetIdleTimer(),N.setOverlay(v.overlay,v.overlayOpacity),N.navbar.setCaption(N.config.caption),!0};this.navbar.setCaption("<em>"+(this.config.loadingTxt||"")+"</em>"),(v.showLoader||!this.prop.ready)&&this.loader.show();var We=this.adapter.loadTexture(this.config.panorama,v.panoData).then(function(Ne){if(Ne.panorama!==N.config.panorama)throw N.adapter.disposeTexture(Ne),hr();return Ne});return!v.transition||!this.prop.ready||!this.adapter.supportsTransition(this.config.panorama)?this.prop.loadingPromise=We.then(function(Ne){N.renderer.show(),N.renderer.setTexture(Ne),N.renderer.setPanoramaPose(Ne.panoData),N.renderer.setSphereCorrection(v.sphereCorrection),j&&N.zoom(v.zoom),q&&N.rotate(v)}).then(le,le):this.prop.loadingPromise=We.then(function(Ne){return N.loader.hide(),N.prop.transitionAnimation=N.renderer.transition(Ne,v),N.prop.transitionAnimation}).then(function(Ne){if(N.prop.transitionAnimation=null,!Ne)throw hr()}).then(le,le),this.prop.loadingPromise},y.setOverlay=function(c,v){var L=this;return v===void 0&&(v=1),c?this.adapter.constructor.supportsOverlay?this.adapter.loadTexture(c,function(N){var q=L.prop.panoData,j=N.width/q.croppedWidth;return{fullWidth:j*q.fullWidth,fullHeight:j*q.fullHeight,croppedWidth:j*q.croppedWidth,croppedHeight:j*q.croppedHeight,croppedX:j*q.croppedX,croppedY:j*q.croppedY}},!1).then(function(N){L.renderer.setOverlay(N,v)}):Promise.reject(new ze(this.adapter.constructor.id+" adapter does not supports overlay")):(this.adapter.constructor.supportsOverlay&&this.renderer.setOverlay(null,0),Promise.resolve())},y.setOptions=function(c){var v=this,L=Nt({},this.config,c);st(c,function(N,q){if(vr[q]){cn(vr[q]);return}if(!Object.prototype.hasOwnProperty.call(hn,q))throw new ze("Unknown option "+q);if(_r[q])throw new ze(_r[q]);switch(xr[q]?v.config[q]=xr[q](N,L):v.config[q]=N,q){case"overlay":case"overlayOpacity":v.setOverlay(v.config.overlay,v.config.overlayOpacity);break;case"caption":case"description":v.navbar.setCaption(v.config.caption);break;case"size":v.resize(N);break;case"sphereCorrection":v.renderer.setSphereCorrection(N);break;case"navbar":case"lang":v.navbar.setButtons(v.config.navbar);break;case"moveSpeed":case"zoomSpeed":v.__updateSpeeds();break;case"minFov":case"maxFov":v.dynamics.zoom.setValue(v.dataHelper.fovToZoomLevel(v.prop.vFov)),v.trigger(pe.ZOOM_UPDATED,v.getZoomLevel());break;case"canvasBackground":v.renderer.canvasContainer.style.background=v.config.canvasBackground;break;case"autorotateIdle":v.resetIdleTimer();break}}),this.needsUpdate(),this.refreshUi("set options"),this.trigger(pe.CONFIG_CHANGED,Object.keys(c))},y.setOption=function(c,v){var L;this.setOptions((L={},L[c]=v,L))},y.resetIdleTimer=function(){this.prop.idleTime=this.config.autorotateIdle?performance.now():-1},y.disableIdleTimer=function(){this.prop.idleTime=-1},y.startAutorotate=function(c){c===void 0&&(c=!1),!(c&&!this.isAutorotateEnabled())&&(!c&&this.isAutorotateEnabled()||(c||this.__stopAll(),this.dynamics.position.roll({longitude:this.config.autorotateSpeed<0},Math.abs(this.config.autorotateSpeed/this.config.moveSpeed)),this.dynamics.position.goto({latitude:this.config.autorotateLat},Math.abs(this.config.autorotateSpeed/this.config.moveSpeed)),this.config.autorotateZoomLvl!==null&&this.dynamics.zoom.goto(this.config.autorotateZoomLvl),this.prop.autorotateEnabled=!0,c||this.trigger(pe.AUTOROTATE,!0)))},y.stopAutorotate=function(){this.isAutorotateEnabled()&&(this.dynamics.position.stop(),this.dynamics.zoom.stop(),this.prop.autorotateEnabled=!1,this.trigger(pe.AUTOROTATE,!1))},y.toggleAutorotate=function(){this.isAutorotateEnabled()?this.stopAutorotate():this.startAutorotate()},y.showError=function(c){this.overlay.show({id:Vt.ERROR,image:yr,text:c,dissmisable:!1})},y.hideError=function(){this.overlay.hide(Vt.ERROR)},y.rotate=function(c){var v=this.trigger(pe.BEFORE_ROTATE,c);if(!v.isDefaultPrevented()){var L=this.change(nr.GET_ROTATE_POSITION,this.dataHelper.cleanPosition(c));this.dynamics.position.setValue(L)}},y.animate=function(c){var v=this;this.__stopAll();var L=ys(c),N=c.zoom!==void 0,q={},j;if(L){var le=this.change(nr.GET_ANIMATE_POSITION,this.dataHelper.cleanPosition(c)),We=this.getPosition(),Ne=_i(We.longitude,le.longitude);q.longitude={start:We.longitude,end:We.longitude+Ne},q.latitude={start:We.latitude,end:le.latitude},j=this.dataHelper.speedToDuration(c.speed,Hi(We,le))}if(N){var lt=Math.abs(c.zoom-this.getZoomLevel());q.zoom={start:this.getZoomLevel(),end:c.zoom},j||(j=this.dataHelper.speedToDuration(c.speed,Math.PI/4*lt/100))}return j?(this.prop.animationPromise=new Xi({properties:q,duration:Math.max(wt,j),easing:"inOutSine",onTick:function(tt){L&&v.rotate(tt),N&&v.zoom(tt.zoom)}}),this.prop.animationPromise.then(function(){v.prop.animationPromise=null,v.resetIdleTimer()}),this.prop.animationPromise):(L&&this.rotate(c),N&&this.zoom(c.zoom),new Xi)},y.stopAnimation=function(){return this.prop.animationPromise?(this.prop.animationPromise.cancel(),this.prop.animationPromise):Promise.resolve()},y.zoom=function(c){this.dynamics.zoom.setValue(c)},y.zoomIn=function(c){c===void 0&&(c=1),this.dynamics.zoom.step(c)},y.zoomOut=function(c){c===void 0&&(c=1),this.dynamics.zoom.step(-c)},y.resize=function(c){var v=this;["width","height"].forEach(function(L){c&&c[L]&&(/^[0-9.]+$/.test(c[L])&&(c[L]+="px"),v.parent.style[L]=c[L])}),this.autoSize()},y.enterFullscreen=function(){He.fullscreenEvent?no(this.container):(this.container.classList.add("psv-container--fullscreen"),this.autoSize(),this.eventsHandler.__fullscreenToggled(!0))},y.exitFullscreen=function(){this.isFullscreenEnabled()&&(He.fullscreenEvent?io():(this.container.classList.remove("psv-container--fullscreen"),this.autoSize(),this.eventsHandler.__fullscreenToggled(!1)))},y.toggleFullscreen=function(){this.isFullscreenEnabled()?this.exitFullscreen():this.enterFullscreen()},y.startKeyboardControl=function(){this.eventsHandler.enableKeyboard()},y.stopKeyboardControl=function(){this.eventsHandler.disableKeyboard()},y.observeObjects=function(c,v){var L=this;return this.prop.objectsObservers[c]={listener:v},function(){delete L.prop.objectsObservers[c]}},y.__stopAll=function(){return this.trigger(pe.STOP_ALL),this.disableIdleTimer(),this.stopAutorotate(),this.stopAnimation()},y.__updateSpeeds=function(){this.dynamics.zoom.setSpeed(this.config.zoomSpeed*50),this.dynamics.position.setSpeed(Re.MathUtils.degToRad(this.config.moveSpeed*50))},x}(ii.EventEmitter);Pt.AbstractAdapter=_t,Pt.AbstractButton=Zt,Pt.AbstractComponent=Tn,Pt.AbstractPlugin=Ln,Pt.CONSTANTS=ia,Pt.DEFAULTS=hn,Pt.EquirectangularAdapter=hi,Pt.PSVError=ze,Pt.SYSTEM=He,Pt.Viewer=Il,Pt.registerButton=_o,Pt.utils=fr,Object.defineProperty(Pt,"__esModule",{value:!0})})})(nh,nh.exports);var Hv=nh.exports;const Gv=Dv({__name:"index",setup(gs){const Oi=Ov();return Nv(()=>{new Hv.Viewer({container:Oi.value,panorama:"/vr/141784.jpg"})}),(Pt,Re)=>(Uv(),Fv("div",{class:"business-vr",ref_key:"container",ref:Oi},null,512))}});const Sx=Bv(Gv,[["__scopeId","data-v-b0621c8d"]]);export{Sx as default};
